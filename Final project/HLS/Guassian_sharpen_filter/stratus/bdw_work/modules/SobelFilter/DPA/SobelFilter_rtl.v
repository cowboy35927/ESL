// Generated by stratus_hls 21.20-p100  (96289.240513)
// Fri May 26 12:39:30 2023
// from ../SobelFilter.cpp

`timescale 1ps / 1ps


module SobelFilter( i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data );

    input i_clk;
    input i_rst;
    input i_rgb_vld;
    input [23:0] i_rgb_data;
    input o_result_busy;
    output i_rgb_busy;
    output o_result_vld;
    output [31:0] o_result_data;
    reg [31:0] o_result_data;
    reg o_result_m_req_m_prev_trig_req;
    reg o_result_m_unacked_req;
    wire SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    wire SobelFilter_Or_1Ux1U_1U_4_2_out1;
    reg SobelFilter_N_Muxb_1_2_32_4_4_out1;
    reg i_rgb_m_unvalidated_req;
    wire SobelFilter_gen_busy_r_4_128_gnew_req;
    wire SobelFilter_gen_busy_r_4_128_gdiv;
    wire SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next;
    reg[5:0] global_state_next;
    reg[31:0] SobelFilter_N_Mux_32_2_56_4_108_out1;
    wire[36:0] t_84;
    wire[36:0] t_83;
    wire[36:0] t_82;
    reg[23:0] SobelFilter_N_Mux_24_2_52_4_82_out1;
    wire[3:0] SobelFilter_Mul2i3u2_4_78_out1;
    wire[36:0] t_81;
    reg[15:0] SobelFilter_N_Mux_16_2_54_4_70_out1;
    wire SobelFilter_N_Mux_16_2_54_4_70_ctrl1;
    wire SobelFilter_Gti255s32_4_69_out1;
    wire[63:0] t_80;
    reg[31:0] SobelFilter_Add2Mul2u32u32s32_4_68_in1;
    reg gs_ctrl_do_filter_h180300600000000;
    /*signed*/reg[31:0] SobelFilter_Add2Mul2u32u32s32_4_68_in3;
    reg[1:0] gs_ctrl_do_filter_h180280600000000;
    reg gs_ctrl_do_filter_h620c41880000000;
    reg[1:0] gs_ctrl_do_filter_h620c40000000000;
    wire[36:0] t_79;
    wire[36:0] t_78;
    wire[3:0] SobelFilter_Add2u2Mul2i3u2_4_64_out1;
    wire[7:0] t_77;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_64_in1;
    reg gs_ctrl_do_filter_h200000000000000;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_64_in2;
    reg[1:0] gs_ctrl_do_filter_h600000000000000;
    wire[36:0] t_76;
    wire[3:0] SobelFilter_Add2u2Mul2i3u2_4_62_out1;
    wire[7:0] t_75;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_62_in1;
    reg gs_ctrl_do_filter_h400000000000;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_62_in2;
    reg[1:0] gs_ctrl_do_filter_hc00000000000;
    wire[36:0] t_74;
    wire[3:0] SobelFilter_Add2u2Mul2i3u2_4_60_out1;
    wire[7:0] t_73;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_60_in1;
    reg gs_ctrl_do_filter_h800000000;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_60_in2;
    reg[1:0] gs_ctrl_do_filter_h1800000000;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_59_in2;
    reg gs_ctrl_do_filter_h400000000000000;
    reg[1:0] gs_ctrl_do_filter_h1803006e000000;
    reg[2:0] gs_ctrl_do_filter_h6f8df1bee000000;
    reg gs_ctrl_do_filter_h8010024000000;
    wire[4:0] SobelFilter_Add3i6u2Mul2i3u2_4_61_out1;
    wire[4:0] SobelFilter_Add3i3u2Mul2i3u2_4_63_out1;
    wire[5:0] SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1;
    wire[5:0] SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1;
    wire[5:0] SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_79_out1;
    wire[5:0] SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1;
    wire[5:0] SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1;
    wire[5:0] SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1;
    reg[3:0] gs_ctrl_do_filter_h6f8df1bec000000;
    wire SobelFilter_Not_1U_1U_4_57_out1;
    wire[32:0] bits002;
    wire[65:0] t_72;
    reg[23:0] SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1;
    reg gs_ctrl_do_filter_h30000000;
    reg[20:0] SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3;
    reg[1:0] gs_ctrl_do_filter_h3000000;
    wire[36:0] t_71;
    reg gs_ctrl_do_filter_h380000;
    reg[1:0] gs_ctrl_do_filter_h3f80000;
    reg[1:0] gs_ctrl_do_filter_h300000;
    wire[4:0] SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1;
    wire[4:0] SobelFilter_Add2i9u4_4_50_out1;
    wire[4:0] SobelFilter_Add2i18u4_4_53_out1;
    reg[2:0] gs_ctrl_do_filter_h3f00000;
    wire[4:0] SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1;
    wire[36:0] t_70;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_43_out1;
    wire[3:0] SobelFilter_Mul2i3u2_4_42_out1;
    wire[37:0] t_69;
    wire[37:0] t_68;
    wire[37:0] t_67;
    wire[37:0] t_66;
    wire[37:0] t_65;
    wire[37:0] t_64;
    wire[37:0] t_63;
    wire[37:0] t_62;
    wire SobelFilter_Not_1U_1U_4_28_out1;
    /*signed*/reg[5:0] SobelFilter_Mul2i3s6_4_22_in1;
    wire SobelFilter_And_1Ux1U_1U_4_21_out1;
    wire SobelFilter_Lti10s32_4_20_out1;
    wire SobelFilter_Gei5s32_4_19_out1;
    /*signed*/reg[31:0] SobelFilter_Lti5s32_4_18_in1;
    reg gs_ctrl_do_filter_h2004000010000000;
    reg gs_ctrl_do_filter_h11000;
    reg[2:0] gs_ctrl_do_filter_h2433000;
    reg gs_ctrl_do_filter_h10000;
    reg[1:0] gs_ctrl_do_filter_h2432000;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_13_out1;
    wire[3:0] SobelFilter_Mul2i3u2_4_11_out1;
    /*signed*/reg[31:0] SobelFilter_Add_33Ux33U_33U_4_10_in1_slice;
    /*signed*/reg[31:0] SobelFilter_Add_33Ux33U_33U_4_10_in2_slice;
    reg[1:0] gs_ctrl_do_filter_h901202400000000;
    wire[33:0] bits001;
    wire[7:0] t_61;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_7_in1;
    reg[1:0] SobelFilter_Add2u2Mul2i3u2_4_7_in2;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_6_in2;
    reg gs_ctrl_do_filter_h2000;
    reg gs_ctrl_do_filter_h1ff;
    wire SobelFilter_Lti3s3_4_14_out1;
    reg[1:0] gs_ctrl_do_filter_h23ff;
    reg[1:0] gs_ctrl_do_filter_hba;
    wire[3:0] SobelFilter_Add2u2Mul2i3u2_4_7_out1;
    reg[3:0] gs_ctrl_do_filter_h23fe;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_66_out1;
    wire[1:0] SobelFilter_Add_2U_6_4_45_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_6_out1;
    reg[15:0] SobelFilter_N_Mux_16_2_55_4_71_out1;
    wire[13:0] SobelFilter_R33_20Mul2iLLu24_4_9_out1;
    reg[15:0] s_reg_70;
    reg[31:0] SobelFilter_N_Mux_32_2_57_4_109_out1;
    reg[31:0] s_reg_68;
    reg[31:0] s_reg_64;
    reg[23:0] SobelFilter_N_Mux_24_2_53_4_83_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_59_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_72_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_8_out1;
    wire[4:0] SobelFilter_Add2i1u4_4_52_out1;
    wire[4:0] SobelFilter_Add2i1u4_4_15_out1;
    reg[4:0] s_reg_5;
    wire SobelFilter_Lti3s3_4_111_out1;
    reg[32:0] s_reg_43;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_100_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_93_out1;
    reg[2:0] s_reg_9;
    reg[2:0] s_reg_4;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_86_out1;
    wire[1:0] SobelFilter_Add_2U_6_4_46_out1;
    reg[2:0] s_reg_54;
    reg[2:0] s_reg_38;
    wire[5:0] SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1;
    reg[5:0] s_reg_35;
    wire[5:0] SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1;
    reg[5:0] s_reg_34;
    /*signed*/wire[5:0] SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1;
    reg[5:0] s_reg_33;
    wire[5:0] SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1;
    wire[5:0] SobelFilter_Add2i30Mul2i3s6_4_41_out1;
    reg[5:0] s_reg_32;
    /*signed*/wire[31:0] SobelFilter_Add2i1s32_4_34_out1;
    reg[31:0] s_reg_29;
    wire[5:0] SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1;
    wire[5:0] SobelFilter_Add2i15Mul2i3s6_4_33_out1;
    reg[5:0] s_reg_28;
    reg wire_s_reg_25;
    wire SobelFilter_And_1Ux1U_1U_4_32_out1;
    reg s_reg_25;
    reg wire_s_reg_24;
    wire SobelFilter_Not_1U_1U_4_29_out1;
    reg s_reg_24;
    wire SobelFilter_Lti3s3_4_98_out1;
    wire SobelFilter_Lti3s3_4_91_out1;
    wire SobelFilter_Lti3s3_4_84_out1;
    wire SobelFilter_Or_1Ux1U_1U_4_24_out1;
    /*signed*/wire[5:0] SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1;
    /*signed*/wire[5:0] SobelFilter_Mul2i3s6_4_22_out1;
    reg[5:0] s_reg_21;
    reg wire_s_reg_15_0;
    wire SobelFilter_Lti5s32_4_18_out1;
    wire SobelFilter_Lti3s3_4_12_out1;
    reg s_reg_15;
    wire SobelFilter_And_1Ux1U_1U_4_126_out1;
    wire[2:0] SobelFilter_gen_busy_r_4_128_out1;
    wire SobelFilter_Not_1U_1U_1_3_out1;
    reg o_result_m_req_m_trig_req;
    reg i_rgb_m_busy_req_0;
    wire SobelFilter_Lti9s5_4_17_out1;
    wire SobelFilter_Lti3s3_4_117_out1;
    wire[32:0] SobelFilter_Add_33Ux33U_33U_4_10_out1;
    reg s_reg_22;
    /*signed*/wire[31:0] SobelFilter_Add2Mul2u32u32s32_4_68_out1;
    wire SobelFilter_Lti3s3_4_105_out1;
    wire SobelFilter_Lti9s5_4_55_out1;
    wire[20:0] SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1;
    wire SobelFilter_Lti3u2_4_48_out1;
    wire SobelFilter_Lti3u2_4_49_out1;
    reg[5:0] global_state;
    reg[23:0] Gaussian_value_DIN;
    reg Gaussian_value_CE;
    reg Gaussian_value_RW;
    reg[3:0] Gaussian_value_in1;
    wire[23:0] Gaussian_value_out1;
    wire[48:0] SobelFilter_DivRem_4_16_in1;
    reg[23:0] s_reg_6;
    wire[36:0] SobelFilter_DivRem_4_16_out1;
    reg stall0;
    reg[31:0] buffer_DIN;
    reg buffer_CE;
    reg buffer_RW;
    reg[5:0] buffer_in1;
    wire[31:0] buffer_out1;
    reg[23:0] expon_value_DIN;
    reg expon_value_CE;
    reg expon_value_RW;
    reg[3:0] expon_value_in1;
    wire[23:0] expon_value_out1;
    reg sharpening_CE;
    reg[3:0] sharpening_in1;
    wire[31:0] sharpening_out1;
    reg[23:0] val_value_DIN;
    reg val_value_CE;
    reg val_value_RW;
    reg[4:0] val_value_in1;
    wire[23:0] val_value_out1;

    SobelFilter_RAM_27X24_2 val_value( 
                              .DIN( val_value_DIN ),
                              .CE( val_value_CE ),
                              .RW( val_value_RW ),
                              .in1( val_value_in1 ),
                              .out1( val_value_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_ROM_9X32_sharpening sharpening( 
                                      .CE( sharpening_CE ),
                                      .in1( sharpening_in1 ),
                                      .out1( sharpening_out1 ),
                                      .clk( i_clk )
                                    );
    SobelFilter_RAM_9X24_1 expon_value( 
                             .DIN( expon_value_DIN ),
                             .CE( expon_value_CE ),
                             .RW( expon_value_RW ),
                             .in1( expon_value_in1 ),
                             .out1( expon_value_out1 ),
                             .clk( i_clk )
                           );
    SobelFilter_RAM_45X32_4 buffer( 
                              .DIN( buffer_DIN ),
                              .CE( buffer_CE ),
                              .RW( buffer_RW ),
                              .in1( buffer_in1 ),
                              .out1( buffer_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_DivRem_4 SobelFilter_DivRem_4_16( 
                           .in1( SobelFilter_DivRem_4_16_in1 ),
                           .in2( s_reg_6 ),
                           .out1( SobelFilter_DivRem_4_16_out1 ),
                           .clk( i_clk ),
                           .stall( stall0 )
                         );
    SobelFilter_RAM_9X24_1 Gaussian_value( 
                             .DIN( Gaussian_value_DIN ),
                             .CE( Gaussian_value_CE ),
                             .RW( Gaussian_value_RW ),
                             .in1( Gaussian_value_in1 ),
                             .out1( Gaussian_value_out1 ),
                             .clk( i_clk )
                           );
    
    // resource: mux_32bx5i1c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_o_result_data
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd22: 
                  begin
                    if (!(SobelFilter_Lti3u2_4_48_out1 || SobelFilter_Lti3u2_4_49_out1)) 
                      begin
                        o_result_data <= 32'd0000000000;
                      end 
                  end
                6'd23: 
                  begin
                    o_result_data <= {11'b00000000000, SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1};
                  end
                6'd25: 
                  begin
                    if (SobelFilter_Lti9s5_4_55_out1) 
                      begin
                        o_result_data <= {11'b00000000000, o_result_data[20:0]};
                      end 
                    else 
                      begin
                        o_result_data <= {11'b00000000000, SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1};
                      end
                  end
                6'd31, 6'd42, 6'd53: 
                  begin
                    o_result_data <= 32'd0000000000;
                  end
                6'd34: 
                  begin
                    if (SobelFilter_Lti3s3_4_105_out1) 
                      begin
                        /* state50 */
                        o_result_data <= SobelFilter_Add2Mul2u32u32s32_4_68_out1;
                      end 
                    else 
                      begin
                        if (s_reg_22) 
                          begin
                            /* state53 */
                            o_result_data <= SobelFilter_Add2Mul2u32u32s32_4_68_out1;
                          end 
                      end
                  end
                6'd37, 6'd48, 6'd59: 
                  begin
                    o_result_data <= SobelFilter_Add_33Ux33U_33U_4_10_out1[31:0];
                  end
                6'd43: 
                  begin
                    o_result_data <= SobelFilter_Add2Mul2u32u32s32_4_68_out1;
                  end
                6'd56: 
                  begin
                    if (SobelFilter_Lti3s3_4_117_out1) 
                      begin
                        /* state82 */
                        o_result_data <= SobelFilter_Add2Mul2u32u32s32_4_68_out1;
                      end 
                    else 
                      begin
                        if (s_reg_22) 
                          begin
                            /* state85 */
                            o_result_data <= SobelFilter_Add2Mul2u32u32s32_4_68_out1;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_busy_req_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd17: 
                  begin
                    if (SobelFilter_Lti9s5_4_17_out1) 
                      begin
                      end 
                    else 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd1;
                      end
                  end
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    i_rgb_m_busy_req_0 <= 1'd0;
                  end
                6'd19: 
                  begin
                    i_rgb_m_busy_req_0 <= 1'd1;
                  end
                6'd22: 
                  begin
                    if (SobelFilter_Lti3u2_4_48_out1) 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd0;
                      end 
                    else 
                      begin
                        if (SobelFilter_Lti3u2_4_49_out1) 
                          begin
                            i_rgb_m_busy_req_0 <= 1'd0;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i1c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_o_result_m_req_m_trig_req
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd17: 
                  begin
                    if (SobelFilter_Lti9s5_4_17_out1) 
                      begin
                      end 
                    else 
                      begin
                        o_result_m_req_m_trig_req <= 1'd0;
                      end
                  end
                6'd37, 6'd48, 6'd59: 
                  begin
                    o_result_m_req_m_trig_req <= SobelFilter_Not_1U_1U_1_3_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx3i1c
    always @(SobelFilter_And_1Ux1U_1U_4_126_out1 or SobelFilter_gen_busy_r_4_128_out1[0] or global_state)
      begin : drive_stall0
        case (global_state) 
          6'd19: 
            begin
              stall0 = SobelFilter_gen_busy_r_4_128_out1[0];
            end
          6'd38, 6'd49, 6'd60: 
            begin
              stall0 = SobelFilter_And_1Ux1U_1U_4_126_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_15
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd12: 
                  begin
                    s_reg_15 <= SobelFilter_Lti3s3_4_12_out1;
                  end
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_15 <= SobelFilter_Lti5s32_4_18_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_15_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    wire_s_reg_15_0 <= SobelFilter_Lti5s32_4_18_out1;
                  end
                6'd22: 
                  begin
                    if (SobelFilter_Lti3u2_4_48_out1) 
                      begin
                        /* state30 */
                        wire_s_reg_15_0 <= s_reg_15;
                      end 
                    else 
                      begin
                        if (SobelFilter_Lti3u2_4_49_out1) 
                          begin
                            wire_s_reg_15_0 <= s_reg_15;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx2i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_21
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    if (SobelFilter_Lti5s32_4_18_out1) 
                      begin
                        s_reg_21 <= SobelFilter_Mul2i3s6_4_22_out1;
                      end 
                    else 
                      begin
                        s_reg_21 <= SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1;
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx4i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_22
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_22 <= SobelFilter_Or_1Ux1U_1U_4_24_out1;
                  end
                6'd33: 
                  begin
                    s_reg_22 <= SobelFilter_Lti3s3_4_84_out1;
                  end
                6'd44: 
                  begin
                    s_reg_22 <= SobelFilter_Lti3s3_4_91_out1;
                  end
                6'd55: 
                  begin
                    s_reg_22 <= SobelFilter_Lti3s3_4_98_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_24
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_24 <= SobelFilter_Not_1U_1U_4_29_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_24
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    wire_s_reg_24 <= SobelFilter_Not_1U_1U_4_29_out1;
                  end
                6'd22: 
                  begin
                    if (SobelFilter_Lti3u2_4_48_out1) 
                      begin
                        wire_s_reg_24 <= s_reg_24;
                      end 
                    else 
                      begin
                        if (SobelFilter_Lti3u2_4_49_out1) 
                          begin
                            wire_s_reg_24 <= s_reg_24;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_25
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_25 <= SobelFilter_And_1Ux1U_1U_4_32_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_25
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    wire_s_reg_25 <= SobelFilter_And_1Ux1U_1U_4_32_out1;
                  end
                6'd22: 
                  begin
                    if (SobelFilter_Lti3u2_4_48_out1) 
                      begin
                        wire_s_reg_25 <= s_reg_25;
                      end 
                    else 
                      begin
                        if (SobelFilter_Lti3u2_4_49_out1) 
                          begin
                            wire_s_reg_25 <= s_reg_25;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx2i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_28
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    if (SobelFilter_Lti5s32_4_18_out1) 
                      begin
                        s_reg_28 <= SobelFilter_Add2i15Mul2i3s6_4_33_out1;
                      end 
                    else 
                      begin
                        s_reg_28 <= SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1;
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_29
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_29 <= SobelFilter_Add2i1s32_4_34_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx2i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_32
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    if (SobelFilter_Lti5s32_4_18_out1) 
                      begin
                        s_reg_32 <= SobelFilter_Add2i30Mul2i3s6_4_41_out1;
                      end 
                    else 
                      begin
                        s_reg_32 <= SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1;
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_33
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_33 <= SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_34
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_34 <= SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_35
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
                  begin
                    s_reg_35 <= SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_3bx5i1c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_38
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd09, 6'd18, 6'd28, 6'd31, 6'd36, 6'd39, 6'd42, 6'd50, 6'd53, 6'd61: 
                  begin
                    s_reg_38 <= 3'd0;
                  end
                6'd13: 
                  begin
                    if (s_reg_15) 
                      begin
                        s_reg_38 <= s_reg_54;
                      end 
                    else 
                      begin
                        s_reg_38 <= 3'd0;
                      end
                  end
                6'd21: 
                  begin
                    s_reg_38 <= {1'b0, SobelFilter_Add_2U_6_4_46_out1};
                  end
                6'd22: 
                  begin
                    if (SobelFilter_Lti3u2_4_48_out1) 
                      begin
                        s_reg_38 <= {1'b0, s_reg_38[1:0]};
                      end 
                    else 
                      begin
                        s_reg_38 <= 3'd0;
                      end
                  end
                6'd33: 
                  begin
                    s_reg_38 <= SobelFilter_Add_2Ux1U_3U_4_86_out1;
                  end
                6'd47, 6'd58: 
                  begin
                    s_reg_38 <= s_reg_54;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_3bx6i1c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_s_reg_4
        if (i_rst == 1'b0) 
          begin
            s_reg_4 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd13: 
                      begin
                        if (s_reg_15) 
                          begin
                          end 
                        else 
                          begin
                            s_reg_4 <= s_reg_9;
                          end
                      end
                    6'd18, 6'd28, 6'd31, 6'd39, 6'd42, 6'd47, 6'd50, 6'd53, 6'd58, 6'd61: 
                      begin
                        s_reg_4 <= 3'd0;
                      end
                    6'd22: 
                      begin
                        if (SobelFilter_Lti3u2_4_48_out1) 
                          begin
                            s_reg_4 <= {1'b0, s_reg_4[1:0]};
                          end 
                        else 
                          begin
                            s_reg_4 <= {1'b0, s_reg_9[1:0]};
                          end
                      end
                    6'd36: 
                      begin
                        s_reg_4 <= s_reg_9;
                      end
                    6'd44: 
                      begin
                        s_reg_4 <= SobelFilter_Add_2Ux1U_3U_4_93_out1;
                      end
                    6'd55: 
                      begin
                        s_reg_4 <= SobelFilter_Add_2Ux1U_3U_4_100_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_33bx6i1c
    // resource: regr_en_33
    always @(posedge i_clk)
      begin : drive_s_reg_43
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd22, 6'd31, 6'd42, 6'd53: 
                  begin
                    s_reg_43 <= 33'd0000000000;
                  end
                6'd24: 
                  begin
                    s_reg_43 <= {12'b000000000000, SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1};
                  end
                6'd25: 
                  begin
                    if (SobelFilter_Lti9s5_4_55_out1) 
                      begin
                        s_reg_43 <= {12'b000000000000, s_reg_43[20:0]};
                      end 
                  end
                6'd33, 6'd55: 
                  begin
                    s_reg_43 <= {SobelFilter_Add2Mul2u32u32s32_4_68_out1[31], SobelFilter_Add2Mul2u32u32s32_4_68_out1};
                  end
                6'd34: 
                  begin
                    if (!(SobelFilter_Lti3s3_4_105_out1 || s_reg_22)) 
                      begin
                        /* state55 */
                        s_reg_43 <= SobelFilter_Add_33Ux33U_33U_4_10_out1;
                      end 
                  end
                6'd35, 6'd36, 6'd46, 6'd47, 6'd57, 6'd58: 
                  begin
                    s_reg_43 <= {s_reg_43[31], s_reg_43[31:0]};
                  end
                6'd45: 
                  begin
                    if (SobelFilter_Lti3s3_4_111_out1) 
                      begin
                        /* state66 */
                        s_reg_43 <= {SobelFilter_Add2Mul2u32u32s32_4_68_out1[31], SobelFilter_Add2Mul2u32u32s32_4_68_out1};
                      end 
                    else 
                      begin
                        if (s_reg_22) 
                          begin
                            /* state69 */
                            s_reg_43 <= {SobelFilter_Add2Mul2u32u32s32_4_68_out1[31], SobelFilter_Add2Mul2u32u32s32_4_68_out1};
                          end 
                        else 
                          begin
                            /* state71 */
                            s_reg_43 <= SobelFilter_Add_33Ux33U_33U_4_10_out1;
                          end
                      end
                  end
                6'd56: 
                  begin
                    if (!(SobelFilter_Lti3s3_4_117_out1 || s_reg_22)) 
                      begin
                        /* state87 */
                        s_reg_43 <= SobelFilter_Add_33Ux33U_33U_4_10_out1;
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_5bx3i1c
    // resource: regr_en_sc_5
    always @(posedge i_clk)
      begin : drive_s_reg_5
        if (i_rst == 1'b0) 
          begin
            s_reg_5 <= 5'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd16: 
                      begin
                        s_reg_5 <= SobelFilter_Add2i1u4_4_15_out1;
                      end
                    6'd22: 
                      begin
                        s_reg_5 <= 5'd00;
                      end
                    6'd24: 
                      begin
                        s_reg_5 <= SobelFilter_Add2i1u4_4_52_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx3i0c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_54
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd10: 
                  begin
                    s_reg_54 <= SobelFilter_Add_2Ux1U_3U_4_8_out1;
                  end
                6'd43: 
                  begin
                    s_reg_54 <= SobelFilter_Add_2Ux1U_3U_4_72_out1;
                  end
                6'd53, 6'd58: 
                  begin
                    s_reg_54 <= SobelFilter_Add_2Ux1U_3U_4_59_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_24bx4i0c
    // resource: regr_en_sc_24
    always @(posedge i_clk)
      begin : drive_s_reg_6
        if (i_rst == 1'b0) 
          begin
            s_reg_6 <= 24'd00000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd11: 
                      begin
                        s_reg_6 <= SobelFilter_Add_33Ux33U_33U_4_10_out1[23:0];
                      end
                    6'd19: 
                      begin
                        s_reg_6 <= i_rgb_data;
                      end
                    6'd23: 
                      begin
                        s_reg_6 <= Gaussian_value_out1;
                      end
                    6'd33, 6'd44, 6'd54: 
                      begin
                        s_reg_6 <= SobelFilter_N_Mux_24_2_53_4_83_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_32bx3i1c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_64
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd22, 6'd31, 6'd42, 6'd53: 
                  begin
                    s_reg_64 <= 32'd0000000000;
                  end
                6'd25: 
                  begin
                    s_reg_64 <= {11'b00000000000, SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1};
                  end
                6'd32, 6'd44, 6'd54: 
                  begin
                    s_reg_64 <= SobelFilter_Add2Mul2u32u32s32_4_68_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_32bx2i0c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_68
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd32, 6'd43, 6'd54: 
                  begin
                    s_reg_68 <= sharpening_out1;
                  end
                6'd34, 6'd45, 6'd56: 
                  begin
                    s_reg_68 <= SobelFilter_N_Mux_32_2_57_4_109_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_16bx2i0c
    // resource: regr_en_16
    always @(posedge i_clk)
      begin : drive_s_reg_70
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd10: 
                  begin
                    s_reg_70 <= {2'b00, SobelFilter_R33_20Mul2iLLu24_4_9_out1};
                  end
                6'd32, 6'd43, 6'd55: 
                  begin
                    s_reg_70 <= SobelFilter_N_Mux_16_2_55_4_71_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_3bx3i0c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_9
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd09: 
                  begin
                    s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_6_out1;
                  end
                6'd13: 
                  begin
                    if (s_reg_15) 
                      begin
                      end 
                    else 
                      begin
                        s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_6_out1;
                      end
                  end
                6'd21: 
                  begin
                    s_reg_9 <= {1'b0, SobelFilter_Add_2U_6_4_45_out1};
                  end
                6'd32: 
                  begin
                    s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_66_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_4bx10i9c
    always @(SobelFilter_Add2u2Mul2i3u2_4_7_out1 or gs_ctrl_do_filter_h23fe)
      begin : drive_expon_value_in1
        case (gs_ctrl_do_filter_h23fe) 
          4'd01: 
            begin
              expon_value_in1 = 4'd01;
            end
          4'd02: 
            begin
              expon_value_in1 = 4'd02;
            end
          4'd03: 
            begin
              expon_value_in1 = 4'd03;
            end
          4'd04: 
            begin
              expon_value_in1 = 4'd04;
            end
          4'd05: 
            begin
              expon_value_in1 = 4'd05;
            end
          4'd06: 
            begin
              expon_value_in1 = 4'd06;
            end
          4'd07: 
            begin
              expon_value_in1 = 4'd07;
            end
          4'd08: 
            begin
              expon_value_in1 = 4'd08;
            end
          4'd09: 
            begin
              expon_value_in1 = SobelFilter_Add2u2Mul2i3u2_4_7_out1;
            end
          default: 
            begin
              expon_value_in1 = 4'd00;
            end
        endcase
      end
    
    // resource: mux_24bx3i3c
    always @(gs_ctrl_do_filter_hba)
      begin : drive_expon_value_DIN
        case (gs_ctrl_do_filter_hba) 
          2'd1: 
            begin
              expon_value_DIN = 24'd00480073;
            end
          2'd2: 
            begin
              expon_value_DIN = 24'd01048576;
            end
          default: 
            begin
              expon_value_DIN = 24'd00219793;
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or s_reg_15 or SobelFilter_Lti3s3_4_14_out1 or gs_ctrl_do_filter_h23ff)
      begin : drive_expon_value_CE
        if (stall0) 
          begin
            expon_value_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h23ff) 
              2'd1: 
                begin
                  expon_value_CE = 1'b1;
                end
              2'd2: 
                begin
                  if (s_reg_15) 
                    begin
                      expon_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      if (SobelFilter_Lti3s3_4_14_out1) 
                        begin
                          expon_value_CE = 1'b1;
                        end 
                      else 
                        begin
                          expon_value_CE = 1'b0;
                        end
                    end
                end
              default: 
                begin
                  expon_value_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h1ff)
      begin : drive_expon_value_RW
        if (stall0) 
          begin
            expon_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h1ff) 
              begin
                expon_value_RW = 1'b1;
              end 
            else 
              begin
                expon_value_RW = 1'b0;
              end
          end
      end
    
    // resource: mux_2bx2i0c
    always @(s_reg_4[1:0] or s_reg_9[1:0] or gs_ctrl_do_filter_h2000)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_6_in2
        if (gs_ctrl_do_filter_h2000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_6_in2 = s_reg_9[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_6_in2 = s_reg_4[1:0];
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_6
    assign SobelFilter_Add_2Ux1U_3U_4_6_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_6_in2} + 3'd1;
    
    // resource: mux_2bx2i0c
    always @(s_reg_15 or s_reg_4[1:0] or s_reg_9[1:0] or gs_ctrl_do_filter_h2000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_7_in2
        if (gs_ctrl_do_filter_h2000) 
          begin
            if (s_reg_15) 
              begin
                SobelFilter_Add2u2Mul2i3u2_4_7_in2 = s_reg_4[1:0];
              end 
            else 
              begin
                SobelFilter_Add2u2Mul2i3u2_4_7_in2 = s_reg_9[1:0];
              end
          end 
        else 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_7_in2 = s_reg_4[1:0];
          end
      end
    
    // resource: mux_2bx2i1c
    always @(s_reg_15 or s_reg_54[1:0] or gs_ctrl_do_filter_h2000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_7_in1
        if (gs_ctrl_do_filter_h2000) 
          begin
            if (s_reg_15) 
              begin
                SobelFilter_Add2u2Mul2i3u2_4_7_in1 = s_reg_54[1:0];
              end 
            else 
              begin
                SobelFilter_Add2u2Mul2i3u2_4_7_in1 = 2'd0;
              end
          end 
        else 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_7_in1 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_7
    assign t_61 = {2'b00, SobelFilter_Add2u2Mul2i3u2_4_7_in2} * 4'd03;
    assign SobelFilter_Add2u2Mul2i3u2_4_7_out1 = t_61[3:0] + {2'b00, SobelFilter_Add2u2Mul2i3u2_4_7_in1};
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_8
    assign SobelFilter_Add_2Ux1U_3U_4_8_out1 = {1'b0, s_reg_38[1:0]} + 3'd1;
    
    // resource: SobelFilter_R33_20Mul2iLLu24_4  instance: SobelFilter_R33_20Mul2iLLu24_4_9
    assign bits001 = {10'b0000000000, expon_value_out1} * 34'd00000001019;
    assign SobelFilter_R33_20Mul2iLLu24_4_9_out1 = bits001[33:20];
    
    // resource: mux_32bx3i0c
    always @(s_reg_6 or s_reg_68 or s_reg_70 or gs_ctrl_do_filter_h901202400000000)
      begin : drive_SobelFilter_Add_33Ux33U_33U_4_10_in2_slice
        case (gs_ctrl_do_filter_h901202400000000) 
          2'd1: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_10_in2_slice = {s_reg_70, 16'd00000};
            end
          2'd2: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_10_in2_slice = s_reg_68;
            end
          default: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_10_in2_slice = {8'b00000000, s_reg_6};
            end
        endcase
      end
    
    // resource: mux_32bx3i0c
    always @(s_reg_43[31:0] or s_reg_6 or s_reg_70[13:0] or gs_ctrl_do_filter_h901202400000000)
      begin : drive_SobelFilter_Add_33Ux33U_33U_4_10_in1_slice
        case (gs_ctrl_do_filter_h901202400000000) 
          2'd1: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_10_in1_slice = {s_reg_6, 8'd000};
            end
          2'd2: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_10_in1_slice = s_reg_43[31:0];
            end
          default: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_10_in1_slice = {18'b000000000000000000, s_reg_70[13:0]};
            end
        endcase
      end
    
    // resource: SobelFilter_Add_33Ux33U_33U_4  instance: SobelFilter_Add_33Ux33U_33U_4_10
    assign SobelFilter_Add_33Ux33U_33U_4_10_out1 = {SobelFilter_Add_33Ux33U_33U_4_10_in2_slice[31], SobelFilter_Add_33Ux33U_33U_4_10_in2_slice} + {SobelFilter_Add_33Ux33U_33U_4_10_in1_slice[31], SobelFilter_Add_33Ux33U_33U_4_10_in1_slice};
    
    // resource: SobelFilter_Mul2i3u2_4  instance: SobelFilter_Mul2i3u2_4_11
    assign SobelFilter_Mul2i3u2_4_11_out1 = {2'b00, s_reg_4[1:0]} * 4'd03;
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_12
    assign SobelFilter_Lti3s3_4_12_out1 = s_reg_54[2] ^ s_reg_54 < 3'd3;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_13
    assign SobelFilter_Add_4Ux2U_5S_4_13_out1 = {1'b0, SobelFilter_Mul2i3u2_4_11_out1} + {3'b000, s_reg_38[1:0]};
    
    // resource: mux_4bx3i1c
    always @(s_reg_5[3:0] or SobelFilter_Add_4Ux2U_5S_4_13_out1[3:0] or gs_ctrl_do_filter_h2432000)
      begin : drive_Gaussian_value_in1
        case (gs_ctrl_do_filter_h2432000) 
          2'd1: 
            begin
              Gaussian_value_in1 = s_reg_5[3:0];
            end
          2'd2: 
            begin
              Gaussian_value_in1 = 4'd00;
            end
          default: 
            begin
              Gaussian_value_in1 = SobelFilter_Add_4Ux2U_5S_4_13_out1[3:0];
            end
        endcase
      end
    
    // resource: mux_24bx2i0c
    always @(s_reg_70[13:0] or SobelFilter_DivRem_4_16_out1[36:13] or gs_ctrl_do_filter_h10000)
      begin : drive_Gaussian_value_DIN
        if (gs_ctrl_do_filter_h10000) 
          begin
            Gaussian_value_DIN = SobelFilter_DivRem_4_16_out1[36:13];
          end 
        else 
          begin
            Gaussian_value_DIN = {10'b0000000000, s_reg_70[13:0]};
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or s_reg_15 or SobelFilter_Lti3s3_4_14_out1 or SobelFilter_Lti9s5_4_17_out1 or SobelFilter_Lti3u2_4_48_out1 or SobelFilter_Lti3u2_4_49_out1 or SobelFilter_Lti9s5_4_55_out1 or gs_ctrl_do_filter_h2433000)
      begin : drive_Gaussian_value_CE
        if (stall0) 
          begin
            Gaussian_value_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h2433000) 
              3'd1: 
                begin
                  Gaussian_value_CE = 1'b1;
                end
              3'd2: 
                begin
                  if (!(s_reg_15 || SobelFilter_Lti3s3_4_14_out1)) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd3: 
                begin
                  if (SobelFilter_Lti9s5_4_17_out1) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd4: 
                begin
                  if (!(SobelFilter_Lti3u2_4_48_out1 || SobelFilter_Lti3u2_4_49_out1)) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd5: 
                begin
                  if (SobelFilter_Lti9s5_4_55_out1) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              default: 
                begin
                  Gaussian_value_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h11000)
      begin : drive_Gaussian_value_RW
        if (stall0) 
          begin
            Gaussian_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h11000) 
              begin
                Gaussian_value_RW = 1'b1;
              end 
            else 
              begin
                Gaussian_value_RW = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_14
    assign SobelFilter_Lti3s3_4_14_out1 = s_reg_9[2] ^ s_reg_9 < 3'd3;
    
    // resource: SobelFilter_Add2i1u4_4  instance: SobelFilter_Add2i1u4_4_15
    assign SobelFilter_Add2i1u4_4_15_out1 = {1'b0, s_reg_5[3:0]} + 5'd01;
    
    // instance: drive_SobelFilter_DivRem_4_16_in1
    assign SobelFilter_DivRem_4_16_in1 = {Gaussian_value_out1, 25'd00000000};
    
    // resource: SobelFilter_Lti9s5_4  instance: SobelFilter_Lti9s5_4_17
    assign SobelFilter_Lti9s5_4_17_out1 = s_reg_5[4] ^ s_reg_5 < 5'd09;
    
    // resource: mux_32bx2i1c
    always @(s_reg_29 or gs_ctrl_do_filter_h2004000010000000)
      begin : drive_SobelFilter_Lti5s32_4_18_in1
        if (gs_ctrl_do_filter_h2004000010000000) 
          begin
            SobelFilter_Lti5s32_4_18_in1 = s_reg_29;
          end 
        else 
          begin
            SobelFilter_Lti5s32_4_18_in1 = 32'd0000000000;
          end
      end
    
    // resource: SobelFilter_Lti5s32_4  instance: SobelFilter_Lti5s32_4_18
    assign SobelFilter_Lti5s32_4_18_out1 = SobelFilter_Lti5s32_4_18_in1[31] ^ SobelFilter_Lti5s32_4_18_in1 < 32'd0000000005;
    
    // resource: SobelFilter_Gei5s32_4  instance: SobelFilter_Gei5s32_4_19
    assign SobelFilter_Gei5s32_4_19_out1 = SobelFilter_Lti5s32_4_18_in1[31] ^ SobelFilter_Lti5s32_4_18_in1 >= 32'd0000000005;
    
    // resource: SobelFilter_Lti10s32_4  instance: SobelFilter_Lti10s32_4_20
    assign SobelFilter_Lti10s32_4_20_out1 = SobelFilter_Lti5s32_4_18_in1[31] ^ SobelFilter_Lti5s32_4_18_in1 < 32'd0000000010;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_21
    assign SobelFilter_And_1Ux1U_1U_4_21_out1 = SobelFilter_Lti10s32_4_20_out1 & SobelFilter_Gei5s32_4_19_out1;
    
    // resource: mux_6bx2i1c
    always @(s_reg_29[5:0] or gs_ctrl_do_filter_h2004000010000000)
      begin : drive_SobelFilter_Mul2i3s6_4_22_in1
        if (gs_ctrl_do_filter_h2004000010000000) 
          begin
            SobelFilter_Mul2i3s6_4_22_in1 = s_reg_29[5:0];
          end 
        else 
          begin
            SobelFilter_Mul2i3s6_4_22_in1 = 6'd00;
          end
      end
    
    // resource: SobelFilter_Mul2i3s6_4  instance: SobelFilter_Mul2i3s6_4_22
    assign SobelFilter_Mul2i3s6_4_22_out1 = {{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} * 6'd03;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_24
    assign SobelFilter_Or_1Ux1U_1U_4_24_out1 = SobelFilter_And_1Ux1U_1U_4_21_out1 | SobelFilter_Lti5s32_4_18_out1;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_28
    assign SobelFilter_Not_1U_1U_4_28_out1 = !SobelFilter_Lti5s32_4_18_out1;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_29
    assign SobelFilter_Not_1U_1U_4_29_out1 = !SobelFilter_Or_1Ux1U_1U_4_24_out1;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_32
    assign SobelFilter_And_1Ux1U_1U_4_32_out1 = SobelFilter_Not_1U_1U_4_28_out1 & SobelFilter_And_1Ux1U_1U_4_21_out1;
    
    // resource: SobelFilter_Add2i15Mul2i3s6_4  instance: SobelFilter_Add2i15Mul2i3s6_4_33
    assign t_62 = {{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} * 6'd03;
    assign SobelFilter_Add2i15Mul2i3s6_4_33_out1 = t_62[5:0] + 6'd15;
    
    // resource: SobelFilter_Add2i1s32_4  instance: SobelFilter_Add2i1s32_4_34
    assign SobelFilter_Add2i1s32_4_34_out1 = SobelFilter_Lti5s32_4_18_in1 + 32'd0000000001;
    
    // resource: SobelFilter_Add2i2Mul2i3Subi10s6_4  instance: SobelFilter_Add2i2Mul2i3Subi10s6_4_35
    assign t_63 = ({{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} - 32'd0000000010) * 6'd03;
    assign SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1 = t_63[5:0] + 6'd02;
    
    // resource: SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4  instance: SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36
    assign t_64 = ({{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} - 32'd0000000010) * 6'd03;
    assign SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1 = t_64[5:0] + 6'd02 + 6'd15;
    
    // resource: SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4  instance: SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37
    assign t_65 = ({{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} - 32'd0000000010) * 6'd03;
    assign SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1 = t_65[5:0] + 6'd02 + 6'd30;
    
    // resource: SobelFilter_Add2i1Mul2i3Subi5s6_4  instance: SobelFilter_Add2i1Mul2i3Subi5s6_4_38
    assign t_66 = ({{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} - 32'd0000000005) * 6'd03;
    assign SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1 = t_66[5:0] + 6'd01;
    
    // resource: SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4  instance: SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39
    assign t_67 = ({{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} - 32'd0000000005) * 6'd03;
    assign SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1 = t_67[5:0] + 6'd01 + 6'd15;
    
    // resource: SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1  instance: SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40
    assign t_68 = ({{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} - 32'd0000000005) * 6'd03;
    assign SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1 = t_68[5:0] + 6'd01 + 6'd30;
    
    // resource: SobelFilter_Add2i30Mul2i3s6_4  instance: SobelFilter_Add2i30Mul2i3s6_4_41
    assign t_69 = {{ 26 {SobelFilter_Mul2i3s6_4_22_in1[5]}}, SobelFilter_Mul2i3s6_4_22_in1} * 6'd03;
    assign SobelFilter_Add2i30Mul2i3s6_4_41_out1 = t_69[5:0] + 6'd30;
    
    // resource: SobelFilter_Mul2i3u2_4  instance: SobelFilter_Mul2i3u2_4_42
    assign SobelFilter_Mul2i3u2_4_42_out1 = {2'b00, s_reg_4[1:0]} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_43
    assign SobelFilter_Add_4Ux2U_5U_4_43_out1 = {1'b0, SobelFilter_Mul2i3u2_4_42_out1} + {3'b000, s_reg_38[1:0]};
    
    // resource: SobelFilter_Add2i9Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i9Add2u2Mul2i3u2_4_44
    assign t_70 = {30'b000000000000000000000000000000, s_reg_4[1:0]} * 5'd03;
    assign SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1 = t_70[4:0] + {3'b000, s_reg_38[1:0]} + 5'd09;
    
    // resource: mux_5bx7i1c
    always @(s_reg_5[3:0] or SobelFilter_Add_4Ux2U_5U_4_43_out1 or SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1 or SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1 or SobelFilter_Add2i9u4_4_50_out1 or SobelFilter_Add2i18u4_4_53_out1 or gs_ctrl_do_filter_h3f00000)
      begin : drive_val_value_in1
        case (gs_ctrl_do_filter_h3f00000) 
          3'd1: 
            begin
              val_value_in1 = SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1;
            end
          3'd2: 
            begin
              val_value_in1 = SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1;
            end
          3'd3: 
            begin
              val_value_in1 = 5'd00;
            end
          3'd4: 
            begin
              val_value_in1 = SobelFilter_Add2i9u4_4_50_out1;
            end
          3'd5: 
            begin
              val_value_in1 = SobelFilter_Add2i18u4_4_53_out1;
            end
          3'd6: 
            begin
              val_value_in1 = {1'b0, s_reg_5[3:0]};
            end
          default: 
            begin
              val_value_in1 = SobelFilter_Add_4Ux2U_5U_4_43_out1;
            end
        endcase
      end
    
    // resource: mux_24bx3i0c
    always @(i_rgb_data[7:0] or s_reg_6[23:8] or gs_ctrl_do_filter_h300000)
      begin : drive_val_value_DIN
        case (gs_ctrl_do_filter_h300000) 
          2'd1: 
            begin
              val_value_DIN = {{4'b0000, s_reg_6[15:8]}, 12'd0000};
            end
          2'd2: 
            begin
              val_value_DIN = {{4'b0000, s_reg_6[23:16]}, 12'd0000};
            end
          default: 
            begin
              val_value_DIN = {{4'b0000, i_rgb_data[7:0]}, 12'd0000};
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or SobelFilter_Lti3u2_4_48_out1 or SobelFilter_Lti3u2_4_49_out1 or SobelFilter_Lti9s5_4_55_out1 or gs_ctrl_do_filter_h3f80000)
      begin : drive_val_value_CE
        if (stall0) 
          begin
            val_value_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h3f80000) 
              2'd1: 
                begin
                  val_value_CE = 1'b1;
                end
              2'd2: 
                begin
                  if (!(SobelFilter_Lti3u2_4_48_out1 || SobelFilter_Lti3u2_4_49_out1)) 
                    begin
                      val_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      val_value_CE = 1'b0;
                    end
                end
              2'd3: 
                begin
                  if (SobelFilter_Lti9s5_4_55_out1) 
                    begin
                      val_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      val_value_CE = 1'b0;
                    end
                end
              default: 
                begin
                  val_value_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h380000)
      begin : drive_val_value_RW
        if (stall0) 
          begin
            val_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h380000) 
              begin
                val_value_RW = 1'b1;
              end 
            else 
              begin
                val_value_RW = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Add_2U_6_4  instance: SobelFilter_Add_2U_6_4_45
    assign SobelFilter_Add_2U_6_4_45_out1 = s_reg_4[1:0] + 2'd1;
    
    // resource: SobelFilter_Add_2U_6_4  instance: SobelFilter_Add_2U_6_4_46
    assign SobelFilter_Add_2U_6_4_46_out1 = s_reg_38[1:0] + 2'd1;
    
    // resource: SobelFilter_Add2i18Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i18Add2u2Mul2i3u2_4_47
    assign t_71 = {30'b000000000000000000000000000000, s_reg_4[1:0]} * 5'd03;
    assign SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1 = t_71[4:0] + {3'b000, s_reg_38[1:0]} + 5'd18;
    
    // resource: SobelFilter_Lti3u2_4  instance: SobelFilter_Lti3u2_4_48
    assign SobelFilter_Lti3u2_4_48_out1 = s_reg_38[1:0] < 2'd3;
    
    // resource: SobelFilter_Lti3u2_4  instance: SobelFilter_Lti3u2_4_49
    assign SobelFilter_Lti3u2_4_49_out1 = s_reg_9[1:0] < 2'd3;
    
    // resource: SobelFilter_Add2i9u4_4  instance: SobelFilter_Add2i9u4_4_50
    assign SobelFilter_Add2i9u4_4_50_out1 = {1'b0, s_reg_5[3:0]} + 5'd09;
    
    // resource: mux_21bx3i0c
    always @(o_result_data[20:0] or s_reg_43[20:0] or s_reg_64[20:0] or gs_ctrl_do_filter_h3000000)
      begin : drive_SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3
        case (gs_ctrl_do_filter_h3000000) 
          2'd1: 
            begin
              SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 = s_reg_43[20:0];
            end
          2'd2: 
            begin
              SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 = s_reg_64[20:0];
            end
          default: 
            begin
              SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 = o_result_data[20:0];
            end
        endcase
      end
    
    // resource: mux_24bx2i0c
    always @(s_reg_6 or Gaussian_value_out1 or gs_ctrl_do_filter_h30000000)
      begin : drive_SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1
        if (gs_ctrl_do_filter_h30000000) 
          begin
            SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1 = s_reg_6;
          end 
        else 
          begin
            SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1 = Gaussian_value_out1;
          end
      end
    
    // resource: SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4  instance: SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51
    assign t_72 = {9'b000000000, val_value_out1} * {9'b000000000, SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1};
    assign bits002 = {SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3, 12'd0000} + t_72[32:0];
    assign SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1 = bits002[32:12];
    
    // resource: SobelFilter_Add2i1u4_4  instance: SobelFilter_Add2i1u4_4_52
    assign SobelFilter_Add2i1u4_4_52_out1 = {1'b0, s_reg_5[3:0]} + 5'd01;
    
    // resource: SobelFilter_Add2i18u4_4  instance: SobelFilter_Add2i18u4_4_53
    assign SobelFilter_Add2i18u4_4_53_out1 = {1'b0, s_reg_5[3:0]} + 5'd18;
    
    // resource: SobelFilter_Lti9s5_4  instance: SobelFilter_Lti9s5_4_55
    assign SobelFilter_Lti9s5_4_55_out1 = s_reg_5[4] ^ s_reg_5 < 5'd09;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_57
    assign SobelFilter_Not_1U_1U_4_57_out1 = !s_reg_22;
    
    // resource: mux_6bx15i0c
    always @(s_reg_15 or wire_s_reg_15_0 or s_reg_21 or s_reg_25 or wire_s_reg_25 or s_reg_28 or s_reg_32 or s_reg_33 or s_reg_34 or s_reg_35 or SobelFilter_Add3i6u2Mul2i3u2_4_61_out1 or SobelFilter_Add3i3u2Mul2i3u2_4_63_out1 or SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1 or SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1 or SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1 or 
SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1
     or SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1 or gs_ctrl_do_filter_h6f8df1bec000000)
      begin : drive_buffer_in1
        case (gs_ctrl_do_filter_h6f8df1bec000000) 
          4'd01: 
            begin
              if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                begin
                  buffer_in1 = s_reg_34;
                end 
              else 
                begin
                  buffer_in1 = s_reg_28;
                end
            end
          4'd02: 
            begin
              if (s_reg_15 && wire_s_reg_15_0) 
                begin
                  buffer_in1 = s_reg_32;
                end 
              else 
                begin
                  if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                    begin
                      buffer_in1 = s_reg_35;
                    end 
                  else 
                    begin
                      buffer_in1 = s_reg_32;
                    end
                end
            end
          4'd03: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add3i6u2Mul2i3u2_4_61_out1};
            end
          4'd04: 
            begin
              buffer_in1 = SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1;
            end
          4'd05: 
            begin
              buffer_in1 = SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1;
            end
          4'd06: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add3i3u2Mul2i3u2_4_63_out1};
            end
          4'd07: 
            begin
              buffer_in1 = SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1;
            end
          4'd08: 
            begin
              buffer_in1 = SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1;
            end
          4'd09: 
            begin
              buffer_in1 = SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1;
            end
          4'd10: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_4Ux2U_5U_4_79_out1};
            end
          4'd11: 
            begin
              buffer_in1 = SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1;
            end
          default: 
            begin
              if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                begin
                  buffer_in1 = s_reg_33;
                end 
              else 
                begin
                  buffer_in1 = s_reg_21;
                end
            end
        endcase
      end
    
    // resource: mux_32bx2i0c
    always @(o_result_data[20:12] or s_reg_43[20:12] or gs_ctrl_do_filter_h8010024000000)
      begin : drive_buffer_DIN
        if (gs_ctrl_do_filter_h8010024000000) 
          begin
            buffer_DIN = {23'b00000000000000000000000, s_reg_43[20:12]};
          end 
        else 
          begin
            buffer_DIN = {23'b00000000000000000000000, o_result_data[20:12]};
          end
      end
    
    // resource: mux_1bx6i2c
    always @(stall0 or s_reg_15 or wire_s_reg_15_0 or s_reg_24 or wire_s_reg_24 or s_reg_25 or wire_s_reg_25 or SobelFilter_Lti9s5_4_55_out1 or SobelFilter_Not_1U_1U_4_57_out1 or gs_ctrl_do_filter_h6f8df1bee000000)
      begin : drive_buffer_CE
        if (stall0) 
          begin
            buffer_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h6f8df1bee000000) 
              3'd1: 
                begin
                  if (SobelFilter_Lti9s5_4_55_out1) 
                    begin
                      buffer_CE = 1'b0;
                    end 
                  else 
                    begin
                      if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                        begin
                          buffer_CE = s_reg_25;
                        end 
                      else 
                        begin
                          if (s_reg_24 && !s_reg_15 && wire_s_reg_24) 
                            begin
                              buffer_CE = s_reg_24;
                            end 
                          else 
                            begin
                              if (s_reg_15 && wire_s_reg_15_0) 
                                begin
                                  buffer_CE = s_reg_15;
                                end 
                              else 
                                begin
                                  buffer_CE = 1'b0;
                                end
                            end
                        end
                    end
                end
              3'd2: 
                begin
                  if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                    begin
                      buffer_CE = s_reg_25;
                    end 
                  else 
                    begin
                      if (s_reg_24 && !s_reg_15 && SobelFilter_Not_1U_1U_4_57_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_57_out1;
                        end 
                      else 
                        begin
                          if (s_reg_15 && wire_s_reg_15_0) 
                            begin
                              buffer_CE = s_reg_15;
                            end 
                          else 
                            begin
                              buffer_CE = 1'b0;
                            end
                        end
                    end
                end
              3'd3: 
                begin
                  if (s_reg_15 && wire_s_reg_15_0) 
                    begin
                      buffer_CE = s_reg_15;
                    end 
                  else 
                    begin
                      if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                        begin
                          buffer_CE = s_reg_25;
                        end 
                      else 
                        begin
                          if (s_reg_24 && !s_reg_15 && SobelFilter_Not_1U_1U_4_57_out1) 
                            begin
                              buffer_CE = SobelFilter_Not_1U_1U_4_57_out1;
                            end 
                          else 
                            begin
                              buffer_CE = 1'b0;
                            end
                        end
                    end
                end
              3'd4: 
                begin
                  buffer_CE = 1'b1;
                end
              default: 
                begin
                  buffer_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx5i1c
    always @(stall0 or s_reg_15 or wire_s_reg_15_0 or s_reg_24 or wire_s_reg_24 or s_reg_25 or wire_s_reg_25 or SobelFilter_Lti9s5_4_55_out1 or SobelFilter_Not_1U_1U_4_57_out1 or gs_ctrl_do_filter_h1803006e000000)
      begin : drive_buffer_RW
        if (stall0) 
          begin
            buffer_RW = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h1803006e000000) 
              2'd1: 
                begin
                  if (SobelFilter_Lti9s5_4_55_out1) 
                    begin
                      buffer_RW = 1'b0;
                    end 
                  else 
                    begin
                      if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                        begin
                          buffer_RW = s_reg_25;
                        end 
                      else 
                        begin
                          if (s_reg_24 && !s_reg_15 && wire_s_reg_24) 
                            begin
                              buffer_RW = s_reg_24;
                            end 
                          else 
                            begin
                              if (s_reg_15 && wire_s_reg_15_0) 
                                begin
                                  buffer_RW = s_reg_15;
                                end 
                              else 
                                begin
                                  buffer_RW = 1'b0;
                                end
                            end
                        end
                    end
                end
              2'd2: 
                begin
                  if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                    begin
                      buffer_RW = s_reg_25;
                    end 
                  else 
                    begin
                      if (s_reg_24 && !s_reg_15 && SobelFilter_Not_1U_1U_4_57_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_57_out1;
                        end 
                      else 
                        begin
                          if (s_reg_15 && wire_s_reg_15_0) 
                            begin
                              buffer_RW = s_reg_15;
                            end 
                          else 
                            begin
                              buffer_RW = 1'b0;
                            end
                        end
                    end
                end
              2'd3: 
                begin
                  if (s_reg_15 && wire_s_reg_15_0) 
                    begin
                      buffer_RW = s_reg_15;
                    end 
                  else 
                    begin
                      if (s_reg_25 && !s_reg_15 && wire_s_reg_25) 
                        begin
                          buffer_RW = s_reg_25;
                        end 
                      else 
                        begin
                          if (s_reg_24 && !s_reg_15 && SobelFilter_Not_1U_1U_4_57_out1) 
                            begin
                              buffer_RW = SobelFilter_Not_1U_1U_4_57_out1;
                            end 
                          else 
                            begin
                              buffer_RW = 1'b0;
                            end
                        end
                    end
                end
              default: 
                begin
                  buffer_RW = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_2bx2i1c
    always @(s_reg_54[1:0] or gs_ctrl_do_filter_h400000000000000)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_59_in2
        if (gs_ctrl_do_filter_h400000000000000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_59_in2 = s_reg_54[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_59_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_59
    assign SobelFilter_Add_2Ux1U_3U_4_59_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_59_in2} + 3'd1;
    
    // resource: mux_2bx3i1c
    always @(s_reg_4[1:0] or s_reg_9[1:0] or gs_ctrl_do_filter_h1800000000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_60_in2
        case (gs_ctrl_do_filter_h1800000000) 
          2'd1: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_60_in2 = s_reg_4[1:0];
            end
          2'd2: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_60_in2 = s_reg_9[1:0];
            end
          default: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_60_in2 = 2'd0;
            end
        endcase
      end
    
    // resource: mux_2bx2i1c
    always @(s_reg_38[1:0] or gs_ctrl_do_filter_h800000000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_60_in1
        if (gs_ctrl_do_filter_h800000000) 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_60_in1 = s_reg_38[1:0];
          end 
        else 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_60_in1 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_60
    assign t_73 = {2'b00, SobelFilter_Add2u2Mul2i3u2_4_60_in2} * 4'd03;
    assign SobelFilter_Add2u2Mul2i3u2_4_60_out1 = t_73[3:0] + {2'b00, SobelFilter_Add2u2Mul2i3u2_4_60_in1};
    
    // resource: SobelFilter_Add3i6u2Mul2i3u2_4  instance: SobelFilter_Add3i6u2Mul2i3u2_4_61
    assign t_74 = {30'b000000000000000000000000000000, SobelFilter_Add2u2Mul2i3u2_4_60_in2} * 5'd03;
    assign SobelFilter_Add3i6u2Mul2i3u2_4_61_out1 = t_74[4:0] + {3'b000, SobelFilter_Add2u2Mul2i3u2_4_60_in1} + 5'd06;
    
    // resource: mux_2bx3i1c
    always @(s_reg_38[1:0] or s_reg_54[1:0] or gs_ctrl_do_filter_hc00000000000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_62_in2
        case (gs_ctrl_do_filter_hc00000000000) 
          2'd1: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_62_in2 = s_reg_38[1:0];
            end
          2'd2: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_62_in2 = s_reg_54[1:0];
            end
          default: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_62_in2 = 2'd0;
            end
        endcase
      end
    
    // resource: mux_2bx2i1c
    always @(s_reg_4[1:0] or gs_ctrl_do_filter_h400000000000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_62_in1
        if (gs_ctrl_do_filter_h400000000000) 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_62_in1 = s_reg_4[1:0];
          end 
        else 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_62_in1 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_62
    assign t_75 = {2'b00, SobelFilter_Add2u2Mul2i3u2_4_62_in2} * 4'd03;
    assign SobelFilter_Add2u2Mul2i3u2_4_62_out1 = t_75[3:0] + {2'b00, SobelFilter_Add2u2Mul2i3u2_4_62_in1};
    
    // resource: SobelFilter_Add3i3u2Mul2i3u2_4  instance: SobelFilter_Add3i3u2Mul2i3u2_4_63
    assign t_76 = {30'b000000000000000000000000000000, SobelFilter_Add2u2Mul2i3u2_4_62_in2} * 5'd03;
    assign SobelFilter_Add3i3u2Mul2i3u2_4_63_out1 = t_76[4:0] + {3'b000, SobelFilter_Add2u2Mul2i3u2_4_62_in1} + 5'd03;
    
    // resource: mux_2bx3i1c
    always @(s_reg_38[1:0] or s_reg_54[1:0] or gs_ctrl_do_filter_h600000000000000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_64_in2
        case (gs_ctrl_do_filter_h600000000000000) 
          2'd1: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_64_in2 = s_reg_38[1:0];
            end
          2'd2: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_64_in2 = s_reg_54[1:0];
            end
          default: 
            begin
              SobelFilter_Add2u2Mul2i3u2_4_64_in2 = 2'd0;
            end
        endcase
      end
    
    // resource: mux_2bx2i1c
    always @(s_reg_4[1:0] or gs_ctrl_do_filter_h200000000000000)
      begin : drive_SobelFilter_Add2u2Mul2i3u2_4_64_in1
        if (gs_ctrl_do_filter_h200000000000000) 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_64_in1 = s_reg_4[1:0];
          end 
        else 
          begin
            SobelFilter_Add2u2Mul2i3u2_4_64_in1 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_64
    assign t_77 = {2'b00, SobelFilter_Add2u2Mul2i3u2_4_64_in2} * 4'd03;
    assign SobelFilter_Add2u2Mul2i3u2_4_64_out1 = t_77[3:0] + {2'b00, SobelFilter_Add2u2Mul2i3u2_4_64_in1};
    
    // resource: SobelFilter_Add2i15Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i15Add2u2Mul2i3u2_4_65
    assign t_78 = {30'b000000000000000000000000000000, SobelFilter_Add2u2Mul2i3u2_4_64_in2} * 5'd03;
    assign SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1 = {1'b0, t_78[4:0] + {3'b000, SobelFilter_Add2u2Mul2i3u2_4_64_in1}} + 6'd15;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_66
    assign SobelFilter_Add_2Ux1U_3U_4_66_out1 = {1'b0, s_reg_4[1:0]} + 3'd1;
    
    // resource: SobelFilter_Add2i15Add3i6u2Mul2i3u2_4  instance: SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67
    assign t_79 = {30'b000000000000000000000000000000, s_reg_4[1:0]} * 5'd03;
    assign SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1 = {1'b0, t_79[4:0] + {3'b000, s_reg_38[1:0]} + 5'd06} + 6'd15;
    
    // resource: mux_4bx3i0c
    always @(SobelFilter_Add2u2Mul2i3u2_4_60_out1 or SobelFilter_Add2u2Mul2i3u2_4_62_out1 or SobelFilter_Add2u2Mul2i3u2_4_64_out1 or gs_ctrl_do_filter_h620c40000000000)
      begin : drive_sharpening_in1
        case (gs_ctrl_do_filter_h620c40000000000) 
          2'd1: 
            begin
              sharpening_in1 = SobelFilter_Add2u2Mul2i3u2_4_62_out1;
            end
          2'd2: 
            begin
              sharpening_in1 = SobelFilter_Add2u2Mul2i3u2_4_64_out1;
            end
          default: 
            begin
              sharpening_in1 = SobelFilter_Add2u2Mul2i3u2_4_60_out1;
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h620c41880000000)
      begin : drive_sharpening_CE
        if (stall0) 
          begin
            sharpening_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h620c41880000000) 
              begin
                sharpening_CE = 1'b1;
              end 
            else 
              begin
                sharpening_CE = 1'b0;
              end
          end
      end
    
    // resource: mux_32bx3i0c
    always @(o_result_data or s_reg_43[31:0] or s_reg_64 or gs_ctrl_do_filter_h180280600000000)
      begin : drive_SobelFilter_Add2Mul2u32u32s32_4_68_in3
        case (gs_ctrl_do_filter_h180280600000000) 
          2'd1: 
            begin
              SobelFilter_Add2Mul2u32u32s32_4_68_in3 = s_reg_43[31:0];
            end
          2'd2: 
            begin
              SobelFilter_Add2Mul2u32u32s32_4_68_in3 = o_result_data;
            end
          default: 
            begin
              SobelFilter_Add2Mul2u32u32s32_4_68_in3 = s_reg_64;
            end
        endcase
      end
    
    // resource: mux_32bx2i0c
    always @(s_reg_68 or sharpening_out1 or gs_ctrl_do_filter_h180300600000000)
      begin : drive_SobelFilter_Add2Mul2u32u32s32_4_68_in1
        if (gs_ctrl_do_filter_h180300600000000) 
          begin
            SobelFilter_Add2Mul2u32u32s32_4_68_in1 = s_reg_68;
          end 
        else 
          begin
            SobelFilter_Add2Mul2u32u32s32_4_68_in1 = sharpening_out1;
          end
      end
    
    // resource: SobelFilter_Add2Mul2u32u32s32_4  instance: SobelFilter_Add2Mul2u32u32s32_4_68
    assign t_80 = buffer_out1 * SobelFilter_Add2Mul2u32u32s32_4_68_in1;
    assign SobelFilter_Add2Mul2u32u32s32_4_68_out1 = SobelFilter_Add2Mul2u32u32s32_4_68_in3 + t_80[31:0];
    
    // resource: SobelFilter_Gti255s32_4  instance: SobelFilter_Gti255s32_4_69
    assign SobelFilter_Gti255s32_4_69_out1 = SobelFilter_Add2Mul2u32u32s32_4_68_out1[31] ^ SobelFilter_Add2Mul2u32u32s32_4_68_out1 > 32'd0000000255;
    
    // instance: drive_SobelFilter_N_Mux_16_2_54_4_70_ctrl1
    assign SobelFilter_N_Mux_16_2_54_4_70_ctrl1 = SobelFilter_Add2Mul2u32u32s32_4_68_out1[31];
    
    // resource: SobelFilter_N_Mux_16_2_54_4
    always @(SobelFilter_Add2Mul2u32u32s32_4_68_out1[15:0] or SobelFilter_N_Mux_16_2_54_4_70_ctrl1)
      begin : SobelFilter_N_Mux_16_2_54_4_70
        if (SobelFilter_N_Mux_16_2_54_4_70_ctrl1) 
          begin
            SobelFilter_N_Mux_16_2_54_4_70_out1 = 16'd00000;
          end 
        else 
          begin
            SobelFilter_N_Mux_16_2_54_4_70_out1 = SobelFilter_Add2Mul2u32u32s32_4_68_out1[15:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_16_2_55_4
    always @(SobelFilter_Gti255s32_4_69_out1 or SobelFilter_N_Mux_16_2_54_4_70_out1)
      begin : SobelFilter_N_Mux_16_2_55_4_71
        if (SobelFilter_Gti255s32_4_69_out1) 
          begin
            SobelFilter_N_Mux_16_2_55_4_71_out1 = 16'd00255;
          end 
        else 
          begin
            SobelFilter_N_Mux_16_2_55_4_71_out1 = SobelFilter_N_Mux_16_2_54_4_70_out1;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_72
    assign SobelFilter_Add_2Ux1U_3U_4_72_out1 = {1'b0, s_reg_38[1:0]} + 3'd1;
    
    // resource: SobelFilter_Add2i15Add3i3u2Mul2i3u2_4  instance: SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73
    assign t_81 = {30'b000000000000000000000000000000, s_reg_38[1:0]} * 5'd03;
    assign SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1 = {1'b0, t_81[4:0] + {3'b000, s_reg_4[1:0]} + 5'd03} + 6'd15;
    
    // resource: SobelFilter_Mul2i3u2_4  instance: SobelFilter_Mul2i3u2_4_78
    assign SobelFilter_Mul2i3u2_4_78_out1 = {2'b00, s_reg_38[1:0]} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_79
    assign SobelFilter_Add_4Ux2U_5U_4_79_out1 = {1'b0, SobelFilter_Mul2i3u2_4_78_out1} + {3'b000, s_reg_4[1:0]};
    
    // resource: SobelFilter_N_Mux_24_2_52_4
    always @(SobelFilter_Add2Mul2u32u32s32_4_68_out1[23:0] or SobelFilter_N_Mux_16_2_54_4_70_ctrl1)
      begin : SobelFilter_N_Mux_24_2_52_4_82
        if (SobelFilter_N_Mux_16_2_54_4_70_ctrl1) 
          begin
            SobelFilter_N_Mux_24_2_52_4_82_out1 = 24'd00000000;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_52_4_82_out1 = SobelFilter_Add2Mul2u32u32s32_4_68_out1[23:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_24_2_53_4
    always @(SobelFilter_Gti255s32_4_69_out1 or SobelFilter_N_Mux_24_2_52_4_82_out1)
      begin : SobelFilter_N_Mux_24_2_53_4_83
        if (SobelFilter_Gti255s32_4_69_out1) 
          begin
            SobelFilter_N_Mux_24_2_53_4_83_out1 = 24'd00000255;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_53_4_83_out1 = SobelFilter_N_Mux_24_2_52_4_82_out1;
          end
      end
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_84
    assign SobelFilter_Lti3s3_4_84_out1 = s_reg_9[2] ^ s_reg_9 < 3'd3;
    
    // resource: SobelFilter_Add2i30Add3i6u2Mul2i3u2_4  instance: SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85
    assign t_82 = {30'b000000000000000000000000000000, s_reg_4[1:0]} * 5'd03;
    assign SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1 = {1'b0, t_82[4:0] + {3'b000, s_reg_38[1:0]} + 5'd06} + 6'd30;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_86
    assign SobelFilter_Add_2Ux1U_3U_4_86_out1 = {1'b0, s_reg_38[1:0]} + 3'd1;
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_91
    assign SobelFilter_Lti3s3_4_91_out1 = s_reg_54[2] ^ s_reg_54 < 3'd3;
    
    // resource: SobelFilter_Add2i30Add3i3u2Mul2i3u2_4  instance: SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92
    assign t_83 = {30'b000000000000000000000000000000, s_reg_38[1:0]} * 5'd03;
    assign SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1 = {1'b0, t_83[4:0] + {3'b000, s_reg_4[1:0]} + 5'd03} + 6'd30;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_93
    assign SobelFilter_Add_2Ux1U_3U_4_93_out1 = {1'b0, s_reg_4[1:0]} + 3'd1;
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_98
    assign SobelFilter_Lti3s3_4_98_out1 = s_reg_54[2] ^ s_reg_54 < 3'd3;
    
    // resource: SobelFilter_Add2i30Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i30Add2u2Mul2i3u2_4_99
    assign t_84 = {30'b000000000000000000000000000000, s_reg_38[1:0]} * 5'd03;
    assign SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1 = {1'b0, t_84[4:0] + {3'b000, s_reg_4[1:0]}} + 6'd30;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_100
    assign SobelFilter_Add_2Ux1U_3U_4_100_out1 = {1'b0, s_reg_4[1:0]} + 3'd1;
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_105
    assign SobelFilter_Lti3s3_4_105_out1 = s_reg_38[2] ^ s_reg_38 < 3'd3;
    
    // resource: SobelFilter_N_Mux_32_2_56_4
    always @(SobelFilter_Add2Mul2u32u32s32_4_68_out1 or SobelFilter_N_Mux_16_2_54_4_70_ctrl1)
      begin : SobelFilter_N_Mux_32_2_56_4_108
        if (SobelFilter_N_Mux_16_2_54_4_70_ctrl1) 
          begin
            SobelFilter_N_Mux_32_2_56_4_108_out1 = 32'd0000000000;
          end 
        else 
          begin
            SobelFilter_N_Mux_32_2_56_4_108_out1 = SobelFilter_Add2Mul2u32u32s32_4_68_out1;
          end
      end
    
    // resource: SobelFilter_N_Mux_32_2_57_4
    always @(SobelFilter_Gti255s32_4_69_out1 or SobelFilter_N_Mux_32_2_56_4_108_out1)
      begin : SobelFilter_N_Mux_32_2_57_4_109
        if (SobelFilter_Gti255s32_4_69_out1) 
          begin
            SobelFilter_N_Mux_32_2_57_4_109_out1 = 32'd0000000255;
          end 
        else 
          begin
            SobelFilter_N_Mux_32_2_57_4_109_out1 = SobelFilter_N_Mux_32_2_56_4_108_out1;
          end
      end
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_111
    assign SobelFilter_Lti3s3_4_111_out1 = s_reg_4[2] ^ s_reg_4 < 3'd3;
    
    // resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_117
    assign SobelFilter_Lti3s3_4_117_out1 = s_reg_4[2] ^ s_reg_4 < 3'd3;
    
    // resource: regr_en_sc_6
    always @(posedge i_clk)
      begin : drive_global_state
        if (i_rst == 1'b0) 
          begin
            global_state <= 6'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // resource: mux_6bx17i16c
    always @(s_reg_15 or s_reg_22 or s_reg_29 or SobelFilter_Lti3s3_4_14_out1 or SobelFilter_Lti9s5_4_17_out1 or SobelFilter_Lti3u2_4_48_out1 or SobelFilter_Lti3u2_4_49_out1 or SobelFilter_Lti9s5_4_55_out1 or SobelFilter_Lti3s3_4_105_out1 or SobelFilter_Lti3s3_4_111_out1 or SobelFilter_Lti3s3_4_117_out1 or global_state)
      begin : drive_global_state_next
        case (global_state) 
          6'd13: 
            begin
              if (s_reg_15) 
                begin
                  global_state_next = 6'd10;
                end 
              else 
                begin
                  if (SobelFilter_Lti3s3_4_14_out1) 
                    begin
                      global_state_next = 6'd10;
                    end 
                  else 
                    begin
                      global_state_next = global_state + 6'd01;
                    end
                end
            end
          6'd17: 
            begin
              if (SobelFilter_Lti9s5_4_17_out1) 
                begin
                  global_state_next = 6'd14;
                end 
              else 
                begin
                  global_state_next = global_state + 6'd01;
                end
            end
          6'd18, 6'd28, 6'd39, 6'd50, 6'd61: 
            begin
              global_state_next = 6'd19;
            end
          6'd22: 
            begin
              if (SobelFilter_Lti3u2_4_48_out1) 
                begin
                  global_state_next = 6'd19;
                end 
              else 
                begin
                  if (SobelFilter_Lti3u2_4_49_out1) 
                    begin
                      global_state_next = 6'd19;
                    end 
                  else 
                    begin
                      global_state_next = global_state + 6'd01;
                    end
                end
            end
          6'd25: 
            begin
              if (SobelFilter_Lti9s5_4_55_out1) 
                begin
                  global_state_next = 6'd23;
                end 
              else 
                begin
                  /* state38 */
                  case (s_reg_29) 
                    32'd0000000013: 
                      begin
                        global_state_next = 6'd51;
                      end
                    32'd0000000014: 
                      begin
                        global_state_next = 6'd40;
                      end
                    32'd0000000015: 
                      begin
                        global_state_next = 6'd29;
                      end
                    default: 
                      begin
                        global_state_next = global_state + 6'd01;
                      end
                  endcase
                end
            end
          6'd31, 6'd35, 6'd36: 
            begin
              global_state_next = 6'd32;
            end
          6'd34: 
            begin
              if (SobelFilter_Lti3s3_4_105_out1) 
                begin
                  global_state_next = global_state + 6'd01;
                end 
              else 
                begin
                  if (s_reg_22) 
                    begin
                      global_state_next = 6'd36;
                    end 
                  else 
                    begin
                      global_state_next = 6'd37;
                    end
                end
            end
          6'd42, 6'd46, 6'd47: 
            begin
              global_state_next = 6'd43;
            end
          6'd45: 
            begin
              if (SobelFilter_Lti3s3_4_111_out1) 
                begin
                  global_state_next = global_state + 6'd01;
                end 
              else 
                begin
                  if (s_reg_22) 
                    begin
                      global_state_next = 6'd47;
                    end 
                  else 
                    begin
                      global_state_next = 6'd48;
                    end
                end
            end
          6'd53, 6'd57, 6'd58: 
            begin
              global_state_next = 6'd54;
            end
          6'd56: 
            begin
              if (SobelFilter_Lti3s3_4_117_out1) 
                begin
                  global_state_next = global_state + 6'd01;
                end 
              else 
                begin
                  if (s_reg_22) 
                    begin
                      global_state_next = 6'd58;
                    end 
                  else 
                    begin
                      global_state_next = 6'd59;
                    end
                end
            end
          default: 
            begin
              global_state_next = global_state + 6'd01;
            end
        endcase
      end
    
    // resource: mux_4bx10i10c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h23fe
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h23fe <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd01: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd01;
                      end
                    6'd02: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd02;
                      end
                    6'd03: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd03;
                      end
                    6'd04: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd04;
                      end
                    6'd05: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd05;
                      end
                    6'd06: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd06;
                      end
                    6'd07: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd07;
                      end
                    6'd08: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd08;
                      end
                    6'd09, 6'd13: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd09;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h23fe <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hba
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hba <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd01, 6'd03, 6'd05, 6'd07: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd1;
                      end
                    6'd04: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_ss_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h23ff
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h23ff <= 2'd1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd00, 6'd01, 6'd02, 6'd03, 6'd04, 6'd05, 6'd06, 6'd07, 6'd08, 6'd09: 
                      begin
                        gs_ctrl_do_filter_h23ff <= 2'd1;
                      end
                    6'd13: 
                      begin
                        gs_ctrl_do_filter_h23ff <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h23ff <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1ff
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1ff <= 1'b1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd00, 6'd01, 6'd02, 6'd03, 6'd04, 6'd05, 6'd06, 6'd07, 6'd08: 
                      begin
                        gs_ctrl_do_filter_h1ff <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1ff <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd13: 
                      begin
                        gs_ctrl_do_filter_h2000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h901202400000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h901202400000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd34, 6'd45, 6'd56: 
                      begin
                        gs_ctrl_do_filter_h901202400000000 <= 2'd1;
                      end
                    6'd37, 6'd48, 6'd59: 
                      begin
                        gs_ctrl_do_filter_h901202400000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h901202400000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2432000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2432000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd13, 6'd16, 6'd17, 6'd25: 
                      begin
                        gs_ctrl_do_filter_h2432000 <= 2'd1;
                      end
                    6'd22: 
                      begin
                        gs_ctrl_do_filter_h2432000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2432000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h10000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h10000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd16: 
                      begin
                        gs_ctrl_do_filter_h10000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h10000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2433000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2433000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd12, 6'd16: 
                      begin
                        gs_ctrl_do_filter_h2433000 <= 3'd1;
                      end
                    6'd13: 
                      begin
                        gs_ctrl_do_filter_h2433000 <= 3'd2;
                      end
                    6'd17: 
                      begin
                        gs_ctrl_do_filter_h2433000 <= 3'd3;
                      end
                    6'd22: 
                      begin
                        gs_ctrl_do_filter_h2433000 <= 3'd4;
                      end
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h2433000 <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2433000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h11000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h11000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd12, 6'd16: 
                      begin
                        gs_ctrl_do_filter_h11000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h11000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2004000010000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2004000010000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd28, 6'd50, 6'd61: 
                      begin
                        gs_ctrl_do_filter_h2004000010000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2004000010000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx7i7c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h3f00000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h3f00000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd20: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd1;
                      end
                    6'd21: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd2;
                      end
                    6'd22: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd3;
                      end
                    6'd23: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd4;
                      end
                    6'd24: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd5;
                      end
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd6;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h3f00000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h300000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h300000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd20: 
                      begin
                        gs_ctrl_do_filter_h300000 <= 2'd1;
                      end
                    6'd21: 
                      begin
                        gs_ctrl_do_filter_h300000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h300000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h3f80000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h3f80000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd19, 6'd20, 6'd21, 6'd23, 6'd24: 
                      begin
                        gs_ctrl_do_filter_h3f80000 <= 2'd1;
                      end
                    6'd22: 
                      begin
                        gs_ctrl_do_filter_h3f80000 <= 2'd2;
                      end
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h3f80000 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h3f80000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h380000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h380000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd19, 6'd20, 6'd21: 
                      begin
                        gs_ctrl_do_filter_h380000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h380000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h3000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h3000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd24: 
                      begin
                        gs_ctrl_do_filter_h3000000 <= 2'd1;
                      end
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h3000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h3000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h30000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h30000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd24, 6'd25: 
                      begin
                        gs_ctrl_do_filter_h30000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h30000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx12i12c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h6f8df1bec000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd26, 6'd29, 6'd40, 6'd51: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd01;
                      end
                    6'd27, 6'd30, 6'd41, 6'd52: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd02;
                      end
                    6'd31, 6'd35, 6'd36: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd03;
                      end
                    6'd32: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd04;
                      end
                    6'd33: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd05;
                      end
                    6'd42, 6'd46, 6'd47: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd06;
                      end
                    6'd43: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd07;
                      end
                    6'd44: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd08;
                      end
                    6'd53, 6'd57, 6'd58: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd09;
                      end
                    6'd54: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd10;
                      end
                    6'd55: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd11;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bec000000 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h8010024000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h8010024000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd26, 6'd29, 6'd40, 6'd51: 
                      begin
                        gs_ctrl_do_filter_h8010024000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h8010024000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx5i5c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h6f8df1bee000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h6f8df1bee000000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bee000000 <= 3'd1;
                      end
                    6'd26, 6'd29, 6'd40, 6'd51: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bee000000 <= 3'd2;
                      end
                    6'd27, 6'd30, 6'd41, 6'd52: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bee000000 <= 3'd3;
                      end
                    6'd31, 6'd32, 6'd33, 6'd35, 6'd36, 6'd42, 6'd43, 6'd44, 6'd46, 6'd47, 6'd53, 6'd54, 6'd55, 6'd57, 6'd58: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bee000000 <= 3'd4;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h6f8df1bee000000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1803006e000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1803006e000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h1803006e000000 <= 2'd1;
                      end
                    6'd26, 6'd29, 6'd40, 6'd51: 
                      begin
                        gs_ctrl_do_filter_h1803006e000000 <= 2'd2;
                      end
                    6'd27, 6'd30, 6'd41, 6'd52: 
                      begin
                        gs_ctrl_do_filter_h1803006e000000 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1803006e000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400000000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400000000000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd58: 
                      begin
                        gs_ctrl_do_filter_h400000000000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400000000000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1800000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1800000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd35: 
                      begin
                        gs_ctrl_do_filter_h1800000000 <= 2'd1;
                      end
                    6'd36: 
                      begin
                        gs_ctrl_do_filter_h1800000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1800000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h800000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h800000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd35: 
                      begin
                        gs_ctrl_do_filter_h800000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h800000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hc00000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hc00000000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd46: 
                      begin
                        gs_ctrl_do_filter_hc00000000000 <= 2'd1;
                      end
                    6'd47: 
                      begin
                        gs_ctrl_do_filter_hc00000000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hc00000000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400000000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd46: 
                      begin
                        gs_ctrl_do_filter_h400000000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400000000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h600000000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h600000000000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd57: 
                      begin
                        gs_ctrl_do_filter_h600000000000000 <= 2'd1;
                      end
                    6'd58: 
                      begin
                        gs_ctrl_do_filter_h600000000000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h600000000000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h200000000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h200000000000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd57: 
                      begin
                        gs_ctrl_do_filter_h200000000000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h200000000000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h620c40000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h620c40000000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd42, 6'd46, 6'd47: 
                      begin
                        gs_ctrl_do_filter_h620c40000000000 <= 2'd1;
                      end
                    6'd53, 6'd57, 6'd58: 
                      begin
                        gs_ctrl_do_filter_h620c40000000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h620c40000000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h620c41880000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h620c41880000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd31, 6'd35, 6'd36, 6'd42, 6'd46, 6'd47, 6'd53, 6'd57, 6'd58: 
                      begin
                        gs_ctrl_do_filter_h620c41880000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h620c41880000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h180280600000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h180280600000000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd33, 6'd45, 6'd55: 
                      begin
                        gs_ctrl_do_filter_h180280600000000 <= 2'd1;
                      end
                    6'd34, 6'd43, 6'd56: 
                      begin
                        gs_ctrl_do_filter_h180280600000000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h180280600000000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h180300600000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h180300600000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd33, 6'd34, 6'd44, 6'd45, 6'd55, 6'd56: 
                      begin
                        gs_ctrl_do_filter_h180300600000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h180300600000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // instance: drive_i_rgb_busy
    assign i_rgb_busy = SobelFilter_gen_busy_r_4_128_out1[2];
    
    // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_128 (4 concurrent statements)
      assign SobelFilter_gen_busy_r_4_128_out1 = {SobelFilter_gen_busy_r_4_128_gnew_req, {SobelFilter_gen_busy_r_4_128_gdiv, SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next}};
      assign SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~SobelFilter_gen_busy_r_4_128_gdiv;
      assign SobelFilter_gen_busy_r_4_128_gdiv = i_rgb_vld & !SobelFilter_gen_busy_r_4_128_gnew_req;
      assign SobelFilter_gen_busy_r_4_128_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);
    // (end of SobelFilter_gen_busy_r_4_128)
    
    // resource: regr_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_unvalidated_req
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_unvalidated_req <= 1'd1;
          end 
        else 
          begin
            i_rgb_m_unvalidated_req <= SobelFilter_N_Muxb_1_2_32_4_4_out1;
          end
      end
    
    // resource: SobelFilter_N_Muxb_1_2_32_4
    always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
      begin : SobelFilter_N_Muxb_1_2_32_4_4
        if (i_rgb_m_busy_req_0) 
          begin
            SobelFilter_N_Muxb_1_2_32_4_4_out1 = i_rgb_m_unvalidated_req;
          end 
        else 
          begin
            SobelFilter_N_Muxb_1_2_32_4_4_out1 = i_rgb_vld;
          end
      end
    
    // instance: drive_o_result_vld
    assign o_result_vld = SobelFilter_Or_1Ux1U_1U_4_2_out1;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
    assign SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_result_m_unacked_req
        if (i_rst == 1'b0) 
          begin
            o_result_m_unacked_req <= 1'd0;
          end 
        else 
          begin
            o_result_m_unacked_req <= SobelFilter_And_1Ux1U_1U_4_126_out1;
          end
      end
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_126
    assign SobelFilter_And_1Ux1U_1U_4_126_out1 = o_result_busy & o_result_vld;
    
    // resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
    assign SobelFilter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_result_m_req_m_prev_trig_req
        if (i_rst == 1'b0) 
          begin
            o_result_m_req_m_prev_trig_req <= 1'd0;
          end 
        else 
          begin
            o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
          end
      end
    
    // resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
    assign SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;

endmodule


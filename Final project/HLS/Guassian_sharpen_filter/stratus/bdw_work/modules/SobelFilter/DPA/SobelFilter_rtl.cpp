// Generated by stratus_hls 21.20-p100  (96289.240513)
// Fri May 26 12:39:30 2023
// from ../SobelFilter.cpp
#include "SobelFilter_rtl.h"

struct SobelFilter;
SobelFilter::SobelFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_result_busy("o_result_busy")
    ,o_result_vld("o_result_vld")
    ,o_result_data("o_result_data")
    ,o_result_m_req_m_prev_trig_req("o_result_m_req_m_prev_trig_req")
    ,SobelFilter_Xor_1Ux1U_1U_1_1_out1("SobelFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_result_m_unacked_req("o_result_m_unacked_req")
    ,SobelFilter_Or_1Ux1U_1U_4_2_out1("SobelFilter_Or_1Ux1U_1U_4_2_out1")
    ,SobelFilter_N_Muxb_1_2_32_4_4_out1("SobelFilter_N_Muxb_1_2_32_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,SobelFilter_gen_busy_r_4_128_gdiv("SobelFilter_gen_busy_r_4_128_gdiv")
    ,SobelFilter_gen_busy_r_4_128_gnew_req("SobelFilter_gen_busy_r_4_128_gnew_req")
    ,global_state_next("global_state_next")
    ,SobelFilter_N_Mux_32_2_56_4_108_out1("SobelFilter_N_Mux_32_2_56_4_108_out1")
    ,SobelFilter_N_Mux_24_2_52_4_82_out1("SobelFilter_N_Mux_24_2_52_4_82_out1")
    ,SobelFilter_Mul2i3u2_4_78_out1("SobelFilter_Mul2i3u2_4_78_out1")
    ,SobelFilter_N_Mux_16_2_54_4_70_out1("SobelFilter_N_Mux_16_2_54_4_70_out1")
    ,SobelFilter_N_Mux_16_2_54_4_70_ctrl1("SobelFilter_N_Mux_16_2_54_4_70_ctrl1")
    ,SobelFilter_Gti255s32_4_69_out1("SobelFilter_Gti255s32_4_69_out1")
    ,SobelFilter_Add2Mul2u32u32s32_4_68_in1("SobelFilter_Add2Mul2u32u32s32_4_68_in1")
    ,gs_ctrl_do_filter_h180300600000000("gs_ctrl_do_filter_h180300600000000")
    ,SobelFilter_Add2Mul2u32u32s32_4_68_in3("SobelFilter_Add2Mul2u32u32s32_4_68_in3")
    ,gs_ctrl_do_filter_h180280600000000("gs_ctrl_do_filter_h180280600000000")
    ,gs_ctrl_do_filter_h620c41880000000("gs_ctrl_do_filter_h620c41880000000")
    ,gs_ctrl_do_filter_h620c40000000000("gs_ctrl_do_filter_h620c40000000000")
    ,SobelFilter_Add2u2Mul2i3u2_4_64_out1("SobelFilter_Add2u2Mul2i3u2_4_64_out1")
    ,SobelFilter_Add2u2Mul2i3u2_4_64_in1("SobelFilter_Add2u2Mul2i3u2_4_64_in1")
    ,gs_ctrl_do_filter_h200000000000000("gs_ctrl_do_filter_h200000000000000")
    ,SobelFilter_Add2u2Mul2i3u2_4_64_in2("SobelFilter_Add2u2Mul2i3u2_4_64_in2")
    ,gs_ctrl_do_filter_h600000000000000("gs_ctrl_do_filter_h600000000000000")
    ,SobelFilter_Add2u2Mul2i3u2_4_62_out1("SobelFilter_Add2u2Mul2i3u2_4_62_out1")
    ,SobelFilter_Add2u2Mul2i3u2_4_62_in1("SobelFilter_Add2u2Mul2i3u2_4_62_in1")
    ,gs_ctrl_do_filter_h400000000000("gs_ctrl_do_filter_h400000000000")
    ,SobelFilter_Add2u2Mul2i3u2_4_62_in2("SobelFilter_Add2u2Mul2i3u2_4_62_in2")
    ,gs_ctrl_do_filter_hc00000000000("gs_ctrl_do_filter_hc00000000000")
    ,SobelFilter_Add2u2Mul2i3u2_4_60_out1("SobelFilter_Add2u2Mul2i3u2_4_60_out1")
    ,SobelFilter_Add2u2Mul2i3u2_4_60_in1("SobelFilter_Add2u2Mul2i3u2_4_60_in1")
    ,gs_ctrl_do_filter_h800000000("gs_ctrl_do_filter_h800000000")
    ,SobelFilter_Add2u2Mul2i3u2_4_60_in2("SobelFilter_Add2u2Mul2i3u2_4_60_in2")
    ,gs_ctrl_do_filter_h1800000000("gs_ctrl_do_filter_h1800000000")
    ,SobelFilter_Add_2Ux1U_3U_4_59_in2("SobelFilter_Add_2Ux1U_3U_4_59_in2")
    ,gs_ctrl_do_filter_h400000000000000("gs_ctrl_do_filter_h400000000000000")
    ,gs_ctrl_do_filter_h1803006e000000("gs_ctrl_do_filter_h1803006e000000")
    ,gs_ctrl_do_filter_h6f8df1bee000000("gs_ctrl_do_filter_h6f8df1bee000000")
    ,gs_ctrl_do_filter_h8010024000000("gs_ctrl_do_filter_h8010024000000")
    ,gs_ctrl_do_filter_h6f8df1bec000000("gs_ctrl_do_filter_h6f8df1bec000000")
    ,SobelFilter_Add3i6u2Mul2i3u2_4_61_out1("SobelFilter_Add3i6u2Mul2i3u2_4_61_out1")
    ,SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1("SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1")
    ,SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1("SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1")
    ,SobelFilter_Add3i3u2Mul2i3u2_4_63_out1("SobelFilter_Add3i3u2Mul2i3u2_4_63_out1")
    ,SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1("SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1")
    ,SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1("SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1")
    ,SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1("SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_79_out1("SobelFilter_Add_4Ux2U_5U_4_79_out1")
    ,SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1("SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1")
    ,SobelFilter_Not_1U_1U_4_57_out1("SobelFilter_Not_1U_1U_4_57_out1")
    ,bits002("bits002")
    ,SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1("SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1")
    ,gs_ctrl_do_filter_h30000000("gs_ctrl_do_filter_h30000000")
    ,SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3("SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3")
    ,gs_ctrl_do_filter_h3000000("gs_ctrl_do_filter_h3000000")
    ,gs_ctrl_do_filter_h380000("gs_ctrl_do_filter_h380000")
    ,gs_ctrl_do_filter_h3f80000("gs_ctrl_do_filter_h3f80000")
    ,gs_ctrl_do_filter_h300000("gs_ctrl_do_filter_h300000")
    ,gs_ctrl_do_filter_h3f00000("gs_ctrl_do_filter_h3f00000")
    ,SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1("SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1")
    ,SobelFilter_Add2i9u4_4_50_out1("SobelFilter_Add2i9u4_4_50_out1")
    ,SobelFilter_Add2i18u4_4_53_out1("SobelFilter_Add2i18u4_4_53_out1")
    ,SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1("SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_43_out1("SobelFilter_Add_4Ux2U_5U_4_43_out1")
    ,SobelFilter_Mul2i3u2_4_42_out1("SobelFilter_Mul2i3u2_4_42_out1")
    ,SobelFilter_Not_1U_1U_4_28_out1("SobelFilter_Not_1U_1U_4_28_out1")
    ,SobelFilter_Mul2i3s6_4_22_in1("SobelFilter_Mul2i3s6_4_22_in1")
    ,SobelFilter_And_1Ux1U_1U_4_21_out1("SobelFilter_And_1Ux1U_1U_4_21_out1")
    ,SobelFilter_Lti10s32_4_20_out1("SobelFilter_Lti10s32_4_20_out1")
    ,SobelFilter_Gei5s32_4_19_out1("SobelFilter_Gei5s32_4_19_out1")
    ,SobelFilter_Lti5s32_4_18_in1("SobelFilter_Lti5s32_4_18_in1")
    ,gs_ctrl_do_filter_h2004000010000000("gs_ctrl_do_filter_h2004000010000000")
    ,gs_ctrl_do_filter_h11000("gs_ctrl_do_filter_h11000")
    ,gs_ctrl_do_filter_h2433000("gs_ctrl_do_filter_h2433000")
    ,gs_ctrl_do_filter_h10000("gs_ctrl_do_filter_h10000")
    ,gs_ctrl_do_filter_h2432000("gs_ctrl_do_filter_h2432000")
    ,SobelFilter_Add_4Ux2U_5S_4_13_out1("SobelFilter_Add_4Ux2U_5S_4_13_out1")
    ,SobelFilter_Mul2i3u2_4_11_out1("SobelFilter_Mul2i3u2_4_11_out1")
    ,SobelFilter_Add_33Ux33U_33U_4_10_in1_slice("SobelFilter_Add_33Ux33U_33U_4_10_in1_slice")
    ,SobelFilter_Add_33Ux33U_33U_4_10_in2_slice("SobelFilter_Add_33Ux33U_33U_4_10_in2_slice")
    ,gs_ctrl_do_filter_h901202400000000("gs_ctrl_do_filter_h901202400000000")
    ,bits001("bits001")
    ,SobelFilter_Add2u2Mul2i3u2_4_7_in1("SobelFilter_Add2u2Mul2i3u2_4_7_in1")
    ,SobelFilter_Add2u2Mul2i3u2_4_7_in2("SobelFilter_Add2u2Mul2i3u2_4_7_in2")
    ,SobelFilter_Add_2Ux1U_3U_4_6_in2("SobelFilter_Add_2Ux1U_3U_4_6_in2")
    ,gs_ctrl_do_filter_h2000("gs_ctrl_do_filter_h2000")
    ,gs_ctrl_do_filter_h1ff("gs_ctrl_do_filter_h1ff")
    ,gs_ctrl_do_filter_h23ff("gs_ctrl_do_filter_h23ff")
    ,SobelFilter_Lti3s3_4_14_out1("SobelFilter_Lti3s3_4_14_out1")
    ,gs_ctrl_do_filter_hba("gs_ctrl_do_filter_hba")
    ,gs_ctrl_do_filter_h23fe("gs_ctrl_do_filter_h23fe")
    ,SobelFilter_Add2u2Mul2i3u2_4_7_out1("SobelFilter_Add2u2Mul2i3u2_4_7_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_66_out1("SobelFilter_Add_2Ux1U_3U_4_66_out1")
    ,SobelFilter_Add_2U_6_4_45_out1("SobelFilter_Add_2U_6_4_45_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_6_out1("SobelFilter_Add_2Ux1U_3U_4_6_out1")
    ,SobelFilter_N_Mux_16_2_55_4_71_out1("SobelFilter_N_Mux_16_2_55_4_71_out1")
    ,SobelFilter_R33_20Mul2iLLu24_4_9_out1("SobelFilter_R33_20Mul2iLLu24_4_9_out1")
    ,s_reg_70("s_reg_70")
    ,SobelFilter_N_Mux_32_2_57_4_109_out1("SobelFilter_N_Mux_32_2_57_4_109_out1")
    ,s_reg_68("s_reg_68")
    ,s_reg_64("s_reg_64")
    ,SobelFilter_N_Mux_24_2_53_4_83_out1("SobelFilter_N_Mux_24_2_53_4_83_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_59_out1("SobelFilter_Add_2Ux1U_3U_4_59_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_72_out1("SobelFilter_Add_2Ux1U_3U_4_72_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_8_out1("SobelFilter_Add_2Ux1U_3U_4_8_out1")
    ,SobelFilter_Add2i1u4_4_52_out1("SobelFilter_Add2i1u4_4_52_out1")
    ,SobelFilter_Add2i1u4_4_15_out1("SobelFilter_Add2i1u4_4_15_out1")
    ,s_reg_5("s_reg_5")
    ,SobelFilter_Lti3s3_4_111_out1("SobelFilter_Lti3s3_4_111_out1")
    ,s_reg_43("s_reg_43")
    ,SobelFilter_Add_2Ux1U_3U_4_100_out1("SobelFilter_Add_2Ux1U_3U_4_100_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_93_out1("SobelFilter_Add_2Ux1U_3U_4_93_out1")
    ,s_reg_9("s_reg_9")
    ,s_reg_4("s_reg_4")
    ,SobelFilter_Add_2Ux1U_3U_4_86_out1("SobelFilter_Add_2Ux1U_3U_4_86_out1")
    ,SobelFilter_Add_2U_6_4_46_out1("SobelFilter_Add_2U_6_4_46_out1")
    ,s_reg_54("s_reg_54")
    ,s_reg_38("s_reg_38")
    ,SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1("SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1")
    ,s_reg_35("s_reg_35")
    ,SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1("SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1")
    ,s_reg_34("s_reg_34")
    ,SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1("SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1")
    ,s_reg_33("s_reg_33")
    ,SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1("SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1")
    ,SobelFilter_Add2i30Mul2i3s6_4_41_out1("SobelFilter_Add2i30Mul2i3s6_4_41_out1")
    ,s_reg_32("s_reg_32")
    ,SobelFilter_Add2i1s32_4_34_out1("SobelFilter_Add2i1s32_4_34_out1")
    ,s_reg_29("s_reg_29")
    ,SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1("SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1")
    ,SobelFilter_Add2i15Mul2i3s6_4_33_out1("SobelFilter_Add2i15Mul2i3s6_4_33_out1")
    ,s_reg_28("s_reg_28")
    ,wire_s_reg_25("wire_s_reg_25")
    ,SobelFilter_And_1Ux1U_1U_4_32_out1("SobelFilter_And_1Ux1U_1U_4_32_out1")
    ,s_reg_25("s_reg_25")
    ,wire_s_reg_24("wire_s_reg_24")
    ,SobelFilter_Not_1U_1U_4_29_out1("SobelFilter_Not_1U_1U_4_29_out1")
    ,s_reg_24("s_reg_24")
    ,SobelFilter_Lti3s3_4_98_out1("SobelFilter_Lti3s3_4_98_out1")
    ,SobelFilter_Lti3s3_4_91_out1("SobelFilter_Lti3s3_4_91_out1")
    ,SobelFilter_Lti3s3_4_84_out1("SobelFilter_Lti3s3_4_84_out1")
    ,SobelFilter_Or_1Ux1U_1U_4_24_out1("SobelFilter_Or_1Ux1U_1U_4_24_out1")
    ,SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1("SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1")
    ,SobelFilter_Mul2i3s6_4_22_out1("SobelFilter_Mul2i3s6_4_22_out1")
    ,s_reg_21("s_reg_21")
    ,wire_s_reg_15_0("wire_s_reg_15_0")
    ,SobelFilter_Lti5s32_4_18_out1("SobelFilter_Lti5s32_4_18_out1")
    ,SobelFilter_Lti3s3_4_12_out1("SobelFilter_Lti3s3_4_12_out1")
    ,s_reg_15("s_reg_15")
    ,SobelFilter_gen_busy_r_4_128_out1("SobelFilter_gen_busy_r_4_128_out1")
    ,SobelFilter_And_1Ux1U_1U_4_126_out1("SobelFilter_And_1Ux1U_1U_4_126_out1")
    ,SobelFilter_Not_1U_1U_1_3_out1("SobelFilter_Not_1U_1U_1_3_out1")
    ,o_result_m_req_m_trig_req("o_result_m_req_m_trig_req")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,SobelFilter_Lti9s5_4_17_out1("SobelFilter_Lti9s5_4_17_out1")
    ,SobelFilter_Lti3s3_4_117_out1("SobelFilter_Lti3s3_4_117_out1")
    ,SobelFilter_Add_33Ux33U_33U_4_10_out1("SobelFilter_Add_33Ux33U_33U_4_10_out1")
    ,s_reg_22("s_reg_22")
    ,SobelFilter_Add2Mul2u32u32s32_4_68_out1("SobelFilter_Add2Mul2u32u32s32_4_68_out1")
    ,SobelFilter_Lti3s3_4_105_out1("SobelFilter_Lti3s3_4_105_out1")
    ,SobelFilter_Lti9s5_4_55_out1("SobelFilter_Lti9s5_4_55_out1")
    ,SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1("SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1")
    ,SobelFilter_Lti3u2_4_48_out1("SobelFilter_Lti3u2_4_48_out1")
    ,SobelFilter_Lti3u2_4_49_out1("SobelFilter_Lti3u2_4_49_out1")
    ,global_state("global_state")
    ,Gaussian_value_DIN("Gaussian_value_DIN")
    ,Gaussian_value_CE("Gaussian_value_CE")
    ,Gaussian_value_RW("Gaussian_value_RW")
    ,Gaussian_value_in1("Gaussian_value_in1")
    ,Gaussian_value_out1("Gaussian_value_out1")
    ,SobelFilter_DivRem_4_16_in1("SobelFilter_DivRem_4_16_in1")
    ,s_reg_6("s_reg_6")
    ,SobelFilter_DivRem_4_16_out1("SobelFilter_DivRem_4_16_out1")
    ,stall0("stall0")
    ,buffer_DIN("buffer_DIN")
    ,buffer_CE("buffer_CE")
    ,buffer_RW("buffer_RW")
    ,buffer_in1("buffer_in1")
    ,buffer_out1("buffer_out1")
    ,expon_value_DIN("expon_value_DIN")
    ,expon_value_CE("expon_value_CE")
    ,expon_value_RW("expon_value_RW")
    ,expon_value_in1("expon_value_in1")
    ,expon_value_out1("expon_value_out1")
    ,sharpening_CE("sharpening_CE")
    ,sharpening_in1("sharpening_in1")
    ,sharpening_out1("sharpening_out1")
    ,val_value_DIN("val_value_DIN")
    ,val_value_CE("val_value_CE")
    ,val_value_RW("val_value_RW")
    ,val_value_in1("val_value_in1")
    ,val_value_out1("val_value_out1")
{
  val_value = new SobelFilter_RAM_27X24_2("val_value");
  val_value->DIN(val_value_DIN);
  val_value->CE(val_value_CE);
  val_value->RW(val_value_RW);
  val_value->in1(val_value_in1);
  val_value->out1(val_value_out1);
  val_value->clk(i_clk);

  sharpening = new SobelFilter_ROM_9X32_sharpening("sharpening");
  sharpening->CE(sharpening_CE);
  sharpening->in1(sharpening_in1);
  sharpening->out1(sharpening_out1);
  sharpening->clk(i_clk);

  expon_value = new SobelFilter_RAM_9X24_1("expon_value");
  expon_value->DIN(expon_value_DIN);
  expon_value->CE(expon_value_CE);
  expon_value->RW(expon_value_RW);
  expon_value->in1(expon_value_in1);
  expon_value->out1(expon_value_out1);
  expon_value->clk(i_clk);

  buffer = new SobelFilter_RAM_45X32_4("buffer");
  buffer->DIN(buffer_DIN);
  buffer->CE(buffer_CE);
  buffer->RW(buffer_RW);
  buffer->in1(buffer_in1);
  buffer->out1(buffer_out1);
  buffer->clk(i_clk);

  SobelFilter_DivRem_4_16 = new SobelFilter_DivRem_4("SobelFilter_DivRem_4_16");
  SobelFilter_DivRem_4_16->in1(SobelFilter_DivRem_4_16_in1);
  SobelFilter_DivRem_4_16->in2(s_reg_6);
  SobelFilter_DivRem_4_16->out1(SobelFilter_DivRem_4_16_out1);
  SobelFilter_DivRem_4_16->clk(i_clk);
  SobelFilter_DivRem_4_16->stall(stall0);

  Gaussian_value = new SobelFilter_RAM_9X24_1("Gaussian_value");
  Gaussian_value->DIN(Gaussian_value_DIN);
  Gaussian_value->CE(Gaussian_value_CE);
  Gaussian_value->RW(Gaussian_value_RW);
  Gaussian_value->in1(Gaussian_value_in1);
  Gaussian_value->out1(Gaussian_value_out1);
  Gaussian_value->clk(i_clk);

  SC_METHOD(drive_o_result_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_result_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_gen_busy_r_4_128_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_126_out1 );

  SC_METHOD(drive_s_reg_15);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_15_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_21);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_22);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_25);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_28);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_34);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_35);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_38);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_4);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_43);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_5);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_54);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_64);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_68);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_70);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_expon_value_in1);
  sensitive << ( gs_ctrl_do_filter_h23fe );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_7_out1 );

  SC_METHOD(drive_expon_value_DIN);
  sensitive << ( gs_ctrl_do_filter_hba );

  SC_METHOD(drive_expon_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h23ff );
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_Lti3s3_4_14_out1 );

  SC_METHOD(drive_expon_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1ff );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_6_in2);
  sensitive << ( gs_ctrl_do_filter_h2000 );
  sensitive << ( s_reg_9 );
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_6);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_6_in2 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_7_in2);
  sensitive << ( gs_ctrl_do_filter_h2000 );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_4 );
  sensitive << ( s_reg_9 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_7_in1);
  sensitive << ( gs_ctrl_do_filter_h2000 );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_54 );

  SC_METHOD(SobelFilter_Add2u2Mul2i3u2_4_7);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_7_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_7_in2 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_8);
  sensitive << ( s_reg_38 );

  SC_METHOD(drive_bits001);
  sensitive << ( expon_value_out1 );

  SC_METHOD(SobelFilter_R33_20Mul2iLLu24_4_9);
  sensitive << ( bits001 );

  SC_METHOD(drive_SobelFilter_Add_33Ux33U_33U_4_10_in2_slice);
  sensitive << ( gs_ctrl_do_filter_h901202400000000 );
  sensitive << ( s_reg_6 );
  sensitive << ( s_reg_70 );
  sensitive << ( s_reg_68 );

  SC_METHOD(drive_SobelFilter_Add_33Ux33U_33U_4_10_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h901202400000000 );
  sensitive << ( s_reg_70 );
  sensitive << ( s_reg_6 );
  sensitive << ( s_reg_43 );

  SC_METHOD(SobelFilter_Add_33Ux33U_33U_4_10);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_10_in1_slice );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_10_in2_slice );

  SC_METHOD(SobelFilter_Mul2i3u2_4_11);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Lti3s3_4_12);
  sensitive << ( s_reg_54 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_13);
  sensitive << ( s_reg_38 );
  sensitive << ( SobelFilter_Mul2i3u2_4_11_out1 );

  SC_METHOD(drive_Gaussian_value_in1);
  sensitive << ( gs_ctrl_do_filter_h2432000 );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_13_out1 );
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_Gaussian_value_DIN);
  sensitive << ( gs_ctrl_do_filter_h10000 );
  sensitive << ( SobelFilter_DivRem_4_16_out1 );
  sensitive << ( s_reg_70 );

  SC_METHOD(drive_Gaussian_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h2433000 );
  sensitive << ( SobelFilter_Lti3s3_4_14_out1 );
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_Lti9s5_4_17_out1 );
  sensitive << ( SobelFilter_Lti3u2_4_49_out1 );
  sensitive << ( SobelFilter_Lti3u2_4_48_out1 );
  sensitive << ( SobelFilter_Lti9s5_4_55_out1 );

  SC_METHOD(drive_Gaussian_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h11000 );

  SC_METHOD(SobelFilter_Lti3s3_4_14);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add2i1u4_4_15);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_DivRem_4_16_in1);
  sensitive << ( Gaussian_value_out1 );

  SC_METHOD(SobelFilter_Lti9s5_4_17);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_Lti5s32_4_18_in1);
  sensitive << ( gs_ctrl_do_filter_h2004000010000000 );
  sensitive << ( s_reg_29 );

  SC_METHOD(SobelFilter_Lti5s32_4_18);
  sensitive << ( SobelFilter_Lti5s32_4_18_in1 );

  SC_METHOD(SobelFilter_Gei5s32_4_19);
  sensitive << ( SobelFilter_Lti5s32_4_18_in1 );

  SC_METHOD(SobelFilter_Lti10s32_4_20);
  sensitive << ( SobelFilter_Lti5s32_4_18_in1 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_21);
  sensitive << ( SobelFilter_Gei5s32_4_19_out1 );
  sensitive << ( SobelFilter_Lti10s32_4_20_out1 );

  SC_METHOD(drive_SobelFilter_Mul2i3s6_4_22_in1);
  sensitive << ( gs_ctrl_do_filter_h2004000010000000 );
  sensitive << ( s_reg_29 );

  SC_METHOD(SobelFilter_Mul2i3s6_4_22);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_24);
  sensitive << ( SobelFilter_Lti5s32_4_18_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_21_out1 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_28);
  sensitive << ( SobelFilter_Lti5s32_4_18_out1 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_29);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_24_out1 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_32);
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_21_out1 );
  sensitive << ( SobelFilter_Not_1U_1U_4_28_out1 );

  SC_METHOD(SobelFilter_Add2i15Mul2i3s6_4_33);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i1s32_4_34);
  sensitive << ( SobelFilter_Lti5s32_4_18_in1 );

  SC_METHOD(SobelFilter_Add2i2Mul2i3Subi10s6_4_35);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i1Mul2i3Subi5s6_4_38);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Add2i30Mul2i3s6_4_41);
  sensitive << ( SobelFilter_Mul2i3s6_4_22_in1 );

  SC_METHOD(SobelFilter_Mul2i3u2_4_42);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_43);
  sensitive << ( s_reg_38 );
  sensitive << ( SobelFilter_Mul2i3u2_4_42_out1 );

  SC_METHOD(SobelFilter_Add2i9Add2u2Mul2i3u2_4_44);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_4 );

  SC_METHOD(drive_val_value_in1);
  sensitive << ( gs_ctrl_do_filter_h3f00000 );
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_43_out1 );
  sensitive << ( SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1 );
  sensitive << ( SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1 );
  sensitive << ( SobelFilter_Add2i9u4_4_50_out1 );
  sensitive << ( SobelFilter_Add2i18u4_4_53_out1 );
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_val_value_DIN);
  sensitive << ( gs_ctrl_do_filter_h300000 );
  sensitive << ( i_rgb_data );
  sensitive << ( s_reg_6 );

  SC_METHOD(drive_val_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h3f80000 );
  sensitive << ( SobelFilter_Lti3u2_4_49_out1 );
  sensitive << ( SobelFilter_Lti3u2_4_48_out1 );
  sensitive << ( SobelFilter_Lti9s5_4_55_out1 );

  SC_METHOD(drive_val_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h380000 );

  SC_METHOD(SobelFilter_Add_2U_6_4_45);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add_2U_6_4_46);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add2i18Add2u2Mul2i3u2_4_47);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Lti3u2_4_48);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Lti3u2_4_49);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add2i9u4_4_50);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3);
  sensitive << ( gs_ctrl_do_filter_h3000000 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_43 );
  sensitive << ( s_reg_64 );

  SC_METHOD(drive_SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1);
  sensitive << ( gs_ctrl_do_filter_h30000000 );
  sensitive << ( s_reg_6 );
  sensitive << ( Gaussian_value_out1 );

  SC_METHOD(drive_bits002);
  sensitive << ( SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1 );
  sensitive << ( val_value_out1 );
  sensitive << ( SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 );

  SC_METHOD(SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51);
  sensitive << ( bits002 );

  SC_METHOD(SobelFilter_Add2i1u4_4_52);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add2i18u4_4_53);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Lti9s5_4_55);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_57);
  sensitive << ( s_reg_22 );

  SC_METHOD(drive_buffer_in1);
  sensitive << ( gs_ctrl_do_filter_h6f8df1bec000000 );
  sensitive << ( wire_s_reg_25 );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_33 );
  sensitive << ( s_reg_21 );
  sensitive << ( s_reg_34 );
  sensitive << ( s_reg_28 );
  sensitive << ( wire_s_reg_15_0 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_35 );
  sensitive << ( SobelFilter_Add3i6u2Mul2i3u2_4_61_out1 );
  sensitive << ( SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1 );
  sensitive << ( SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1 );
  sensitive << ( SobelFilter_Add3i3u2Mul2i3u2_4_63_out1 );
  sensitive << ( SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1 );
  sensitive << ( SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1 );
  sensitive << ( SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1 );

  SC_METHOD(drive_buffer_DIN);
  sensitive << ( gs_ctrl_do_filter_h8010024000000 );
  sensitive << ( s_reg_43 );
  sensitive << ( o_result_data );

  SC_METHOD(drive_buffer_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h6f8df1bee000000 );
  sensitive << ( SobelFilter_Lti9s5_4_55_out1 );
  sensitive << ( wire_s_reg_25 );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_25 );
  sensitive << ( wire_s_reg_24 );
  sensitive << ( s_reg_24 );
  sensitive << ( wire_s_reg_15_0 );
  sensitive << ( SobelFilter_Not_1U_1U_4_57_out1 );

  SC_METHOD(drive_buffer_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1803006e000000 );
  sensitive << ( SobelFilter_Lti9s5_4_55_out1 );
  sensitive << ( wire_s_reg_25 );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_25 );
  sensitive << ( wire_s_reg_24 );
  sensitive << ( s_reg_24 );
  sensitive << ( wire_s_reg_15_0 );
  sensitive << ( SobelFilter_Not_1U_1U_4_57_out1 );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_59_in2);
  sensitive << ( gs_ctrl_do_filter_h400000000000000 );
  sensitive << ( s_reg_54 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_59);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_59_in2 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_60_in2);
  sensitive << ( gs_ctrl_do_filter_h1800000000 );
  sensitive << ( s_reg_4 );
  sensitive << ( s_reg_9 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_60_in1);
  sensitive << ( gs_ctrl_do_filter_h800000000 );
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add2u2Mul2i3u2_4_60);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_60_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_60_in2 );

  SC_METHOD(SobelFilter_Add3i6u2Mul2i3u2_4_61);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_60_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_60_in2 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_62_in2);
  sensitive << ( gs_ctrl_do_filter_hc00000000000 );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_54 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_62_in1);
  sensitive << ( gs_ctrl_do_filter_h400000000000 );
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add2u2Mul2i3u2_4_62);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_62_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_62_in2 );

  SC_METHOD(SobelFilter_Add3i3u2Mul2i3u2_4_63);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_62_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_62_in2 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_64_in2);
  sensitive << ( gs_ctrl_do_filter_h600000000000000 );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_54 );

  SC_METHOD(drive_SobelFilter_Add2u2Mul2i3u2_4_64_in1);
  sensitive << ( gs_ctrl_do_filter_h200000000000000 );
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add2u2Mul2i3u2_4_64);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_64_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_64_in2 );

  SC_METHOD(SobelFilter_Add2i15Add2u2Mul2i3u2_4_65);
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_64_in1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_64_in2 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_66);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_4 );

  SC_METHOD(drive_sharpening_in1);
  sensitive << ( gs_ctrl_do_filter_h620c40000000000 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_60_out1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_62_out1 );
  sensitive << ( SobelFilter_Add2u2Mul2i3u2_4_64_out1 );

  SC_METHOD(drive_sharpening_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h620c41880000000 );

  SC_METHOD(drive_SobelFilter_Add2Mul2u32u32s32_4_68_in3);
  sensitive << ( gs_ctrl_do_filter_h180280600000000 );
  sensitive << ( s_reg_64 );
  sensitive << ( s_reg_43 );
  sensitive << ( o_result_data );

  SC_METHOD(drive_SobelFilter_Add2Mul2u32u32s32_4_68_in1);
  sensitive << ( gs_ctrl_do_filter_h180300600000000 );
  sensitive << ( s_reg_68 );
  sensitive << ( sharpening_out1 );

  SC_METHOD(SobelFilter_Add2Mul2u32u32s32_4_68);
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_in1 );
  sensitive << ( buffer_out1 );
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_in3 );

  SC_METHOD(SobelFilter_Gti255s32_4_69);
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_out1 );

  SC_METHOD(drive_SobelFilter_N_Mux_16_2_54_4_70_ctrl1);
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_out1 );

  SC_METHOD(SobelFilter_N_Mux_16_2_54_4_70);
  sensitive << ( SobelFilter_N_Mux_16_2_54_4_70_ctrl1 );
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_out1 );

  SC_METHOD(SobelFilter_N_Mux_16_2_55_4_71);
  sensitive << ( SobelFilter_Gti255s32_4_69_out1 );
  sensitive << ( SobelFilter_N_Mux_16_2_54_4_70_out1 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_72);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73);
  sensitive << ( s_reg_4 );
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Mul2i3u2_4_78);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_79);
  sensitive << ( s_reg_4 );
  sensitive << ( SobelFilter_Mul2i3u2_4_78_out1 );

  SC_METHOD(SobelFilter_N_Mux_24_2_52_4_82);
  sensitive << ( SobelFilter_N_Mux_16_2_54_4_70_ctrl1 );
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_out1 );

  SC_METHOD(SobelFilter_N_Mux_24_2_53_4_83);
  sensitive << ( SobelFilter_Gti255s32_4_69_out1 );
  sensitive << ( SobelFilter_N_Mux_24_2_52_4_82_out1 );

  SC_METHOD(SobelFilter_Lti3s3_4_84);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_86);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Lti3s3_4_91);
  sensitive << ( s_reg_54 );

  SC_METHOD(SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92);
  sensitive << ( s_reg_4 );
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_93);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Lti3s3_4_98);
  sensitive << ( s_reg_54 );

  SC_METHOD(SobelFilter_Add2i30Add2u2Mul2i3u2_4_99);
  sensitive << ( s_reg_4 );
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_100);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Lti3s3_4_105);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_N_Mux_32_2_56_4_108);
  sensitive << ( SobelFilter_N_Mux_16_2_54_4_70_ctrl1 );
  sensitive << ( SobelFilter_Add2Mul2u32u32s32_4_68_out1 );

  SC_METHOD(SobelFilter_N_Mux_32_2_57_4_109);
  sensitive << ( SobelFilter_Gti255s32_4_69_out1 );
  sensitive << ( SobelFilter_N_Mux_32_2_56_4_108_out1 );

  SC_METHOD(SobelFilter_Lti3s3_4_111);
  sensitive << ( s_reg_4 );

  SC_METHOD(SobelFilter_Lti3s3_4_117);
  sensitive << ( s_reg_4 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_Lti3s3_4_14_out1 );
  sensitive << ( SobelFilter_Lti9s5_4_17_out1 );
  sensitive << ( SobelFilter_Lti3u2_4_48_out1 );
  sensitive << ( SobelFilter_Lti3u2_4_49_out1 );
  sensitive << ( SobelFilter_Lti9s5_4_55_out1 );
  sensitive << ( s_reg_29 );
  sensitive << ( SobelFilter_Lti3s3_4_105_out1 );
  sensitive << ( s_reg_22 );
  sensitive << ( SobelFilter_Lti3s3_4_111_out1 );
  sensitive << ( SobelFilter_Lti3s3_4_117_out1 );

  SC_METHOD(drive_gs_ctrl_do_filter_h23fe);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hba);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h23ff);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1ff);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h901202400000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2432000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h10000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2433000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h11000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2004000010000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h3f00000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h300000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h3f80000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h380000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h3000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h30000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h6f8df1bec000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8010024000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h6f8df1bee000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1803006e000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h400000000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1800000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h800000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hc00000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h400000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h600000000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h200000000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h620c40000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h620c41880000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h180280600000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h180300600000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( SobelFilter_gen_busy_r_4_128_out1 );

  SC_METHOD(SobelFilter_gen_busy_r_4_128_p7);
  sensitive << ( 
  SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( SobelFilter_gen_busy_r_4_128_gdiv );
  sensitive << ( SobelFilter_gen_busy_r_4_128_gnew_req );

  SC_METHOD(SobelFilter_gen_busy_r_4_128_p6);
  sensitive << ( SobelFilter_gen_busy_r_4_128_gdiv );

  SC_METHOD(SobelFilter_gen_busy_r_4_128_p5);
  sensitive << ( SobelFilter_gen_busy_r_4_128_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(SobelFilter_gen_busy_r_4_128_p4);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_N_Muxb_1_2_32_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_result_vld);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( SobelFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_result_m_unacked_req );

  SC_METHOD(drive_o_result_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_126);
  sensitive << ( o_result_vld );
  sensitive << ( o_result_busy );

  SC_METHOD(SobelFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_result_m_req_m_prev_trig_req );
  sensitive << ( o_result_m_req_m_trig_req );

  SC_METHOD(drive_o_result_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_1_3);
  sensitive << ( o_result_m_req_m_trig_req );

}
// resource: mux_32bx5i1c
// resource: regr_en_32
void SobelFilter::drive_o_result_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 22ULL: 
      if ( !( (SobelFilter_Lti3u2_4_48_out1.read()||SobelFilter_Lti3u2_4_49_out1
           .read()) ) ) {
        o_result_data = 0ULL;
      } 
      break;
    case 23ULL: 
      o_result_data = (sc_uint<32> ) (
                      SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1.read()
                      );
      break;
    case 25ULL: 
      if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
        o_result_data = (sc_uint<32> ) ((sc_uint<21> )o_result_data.read());
      } else {
        o_result_data = (sc_uint<32> ) (
                        SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1
                        .read());
      }
      break;
    case 31ULL: case 42ULL: case 53ULL: 
      o_result_data = 0ULL;
      break;
    case 34ULL: 
      if ( SobelFilter_Lti3s3_4_105_out1.read() ) {
        /* state50 */
        o_result_data = (sc_uint<32> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1
                        .read());
      } else {
        if ( s_reg_22.read() ) {
          /* state53 */
          o_result_data = (sc_uint<32> ) (
                          SobelFilter_Add2Mul2u32u32s32_4_68_out1.read());
        } 
      }
      break;
    case 37ULL: case 48ULL: case 59ULL: 
      o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_10_out1.read()
      ;
      break;
    case 43ULL: 
      o_result_data = (sc_uint<32> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1
                      .read());
      break;
    case 56ULL: 
      if ( SobelFilter_Lti3s3_4_117_out1.read() ) {
        /* state82 */
        o_result_data = (sc_uint<32> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1
                        .read());
      } else {
        if ( s_reg_22.read() ) {
          /* state85 */
          o_result_data = (sc_uint<32> ) (
                          SobelFilter_Add2Mul2u32u32s32_4_68_out1.read());
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_1
void SobelFilter::drive_i_rgb_m_busy_req_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 17ULL: 
      if ( SobelFilter_Lti9s5_4_17_out1.read() );
      else {
        i_rgb_m_busy_req_0 = 1ULL;
      }
      break;
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      i_rgb_m_busy_req_0 = 0ULL;
      break;
    case 19ULL: 
      i_rgb_m_busy_req_0 = 1ULL;
      break;
    case 22ULL: 
      if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
        i_rgb_m_busy_req_0 = 0ULL;
      } else {
        if ( SobelFilter_Lti3u2_4_49_out1.read() ) {
          i_rgb_m_busy_req_0 = 0ULL;
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i1c
// resource: regr_en_1
void SobelFilter::drive_o_result_m_req_m_trig_req(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 17ULL: 
      if ( SobelFilter_Lti9s5_4_17_out1.read() );
      else {
        o_result_m_req_m_trig_req = 0ULL;
      }
      break;
    case 37ULL: case 48ULL: case 59ULL: 
      o_result_m_req_m_trig_req = (sc_uint<1> ) (SobelFilter_Not_1U_1U_1_3_out1
                                  .read());
      break;
    }
    break;
  }
}
// resource: mux_1bx3i1c
void SobelFilter::drive_stall0(){
  switch( (sc_uint<6>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 19ULL: 
    stall0 = (sc_uint<1> )SobelFilter_gen_busy_r_4_128_out1.read();
    break;
  case 38ULL: case 49ULL: case 60ULL: 
    stall0 = SobelFilter_And_1Ux1U_1U_4_126_out1.read();
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_15(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 12ULL: 
      s_reg_15 = SobelFilter_Lti3s3_4_12_out1.read();
      break;
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_15 = SobelFilter_Lti5s32_4_18_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_15_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      wire_s_reg_15_0 = SobelFilter_Lti5s32_4_18_out1.read();
      break;
    case 22ULL: 
      if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
        /* state30 */
        wire_s_reg_15_0 = s_reg_15.read();
      } else {
        if ( SobelFilter_Lti3u2_4_49_out1.read() ) {
          wire_s_reg_15_0 = s_reg_15.read();
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_6bx2i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_21(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      if ( SobelFilter_Lti5s32_4_18_out1.read() ) {
        s_reg_21 = (sc_uint<6> ) (SobelFilter_Mul2i3s6_4_22_out1.read());
      } else {
        s_reg_21 = (sc_uint<6> ) (SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1
                   .read());
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx4i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_22(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_22 = SobelFilter_Or_1Ux1U_1U_4_24_out1.read();
      break;
    case 33ULL: 
      s_reg_22 = SobelFilter_Lti3s3_4_84_out1.read();
      break;
    case 44ULL: 
      s_reg_22 = SobelFilter_Lti3s3_4_91_out1.read();
      break;
    case 55ULL: 
      s_reg_22 = SobelFilter_Lti3s3_4_98_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_24(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_24 = SobelFilter_Not_1U_1U_4_29_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_24(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      wire_s_reg_24 = SobelFilter_Not_1U_1U_4_29_out1.read();
      break;
    case 22ULL: 
      if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
        wire_s_reg_24 = s_reg_24.read();
      } else {
        if ( SobelFilter_Lti3u2_4_49_out1.read() ) {
          wire_s_reg_24 = s_reg_24.read();
        } 
      }
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_25(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_25 = SobelFilter_And_1Ux1U_1U_4_32_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_25(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      wire_s_reg_25 = SobelFilter_And_1Ux1U_1U_4_32_out1.read();
      break;
    case 22ULL: 
      if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
        wire_s_reg_25 = s_reg_25.read();
      } else {
        if ( SobelFilter_Lti3u2_4_49_out1.read() ) {
          wire_s_reg_25 = s_reg_25.read();
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_6bx2i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_28(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      if ( SobelFilter_Lti5s32_4_18_out1.read() ) {
        s_reg_28 = SobelFilter_Add2i15Mul2i3s6_4_33_out1.read();
      } else {
        s_reg_28 = SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1.read();
      }
      break;
    }
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_29(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_29 = (sc_uint<32> ) (SobelFilter_Add2i1s32_4_34_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_6bx2i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_32(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      if ( SobelFilter_Lti5s32_4_18_out1.read() ) {
        s_reg_32 = SobelFilter_Add2i30Mul2i3s6_4_41_out1.read();
      } else {
        s_reg_32 = SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1.read();
      }
      break;
    }
    break;
  }
}
// resource: regr_en_6
void SobelFilter::drive_s_reg_33(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_33 = (sc_uint<6> ) (SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1.read()
                 );
      break;
    }
    break;
  }
}
// resource: regr_en_6
void SobelFilter::drive_s_reg_34(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_34 = SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_6
void SobelFilter::drive_s_reg_35(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
      s_reg_35 = SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_3bx5i1c
// resource: regr_en_3
void SobelFilter::drive_s_reg_38(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 9ULL: case 18ULL: case 28ULL: case 31ULL: case 36ULL: case 39ULL: case 
    42ULL: case 50ULL: case 53ULL: case 61ULL: 
      s_reg_38 = 0ULL;
      break;
    case 13ULL: 
      if ( s_reg_15.read() ) {
        s_reg_38 = s_reg_54.read();
      } else {
        s_reg_38 = 0ULL;
      }
      break;
    case 21ULL: 
      s_reg_38 = (sc_uint<3> ) (SobelFilter_Add_2U_6_4_46_out1.read());
      break;
    case 22ULL: 
      if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
        s_reg_38 = (sc_uint<3> ) ((sc_uint<2> )s_reg_38.read());
      } else {
        s_reg_38 = 0ULL;
      }
      break;
    case 33ULL: 
      s_reg_38 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_86_out1.read());
      break;
    case 47ULL: case 58ULL: 
      s_reg_38 = s_reg_54.read();
      break;
    }
    break;
  }
}
// resource: mux_3bx6i1c
// resource: regr_en_sc_3
void SobelFilter::drive_s_reg_4(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state.read()) ) {
      case 13ULL: 
        if ( s_reg_15.read() );
        else {
          s_reg_4 = s_reg_9.read();
        }
        break;
      case 18ULL: case 28ULL: case 31ULL: case 39ULL: case 42ULL: case 47ULL: 
      case 50ULL: case 53ULL: case 58ULL: case 61ULL: 
        s_reg_4 = 0ULL;
        break;
      case 22ULL: 
        if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
          s_reg_4 = (sc_uint<3> ) ((sc_uint<2> )s_reg_4.read());
        } else {
          s_reg_4 = (sc_uint<3> ) ((sc_uint<2> )s_reg_9.read());
        }
        break;
      case 36ULL: 
        s_reg_4 = s_reg_9.read();
        break;
      case 44ULL: 
        s_reg_4 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_93_out1.read());
        break;
      case 55ULL: 
        s_reg_4 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_100_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: mux_33bx6i1c
// resource: regr_en_33
void SobelFilter::drive_s_reg_43(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 22ULL: case 31ULL: case 42ULL: case 53ULL: 
      s_reg_43 = 0ULL;
      break;
    case 24ULL: 
      s_reg_43 = (sc_uint<33> ) (
                 SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1.read());
      break;
    case 25ULL: 
      if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
        s_reg_43 = (sc_uint<33> ) ((sc_uint<21> )s_reg_43.read());
      } 
      break;
    case 33ULL: case 55ULL: 
      s_reg_43 = (sc_uint<33> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1.read())
      ;
      break;
    case 34ULL: 
      if ( !( (SobelFilter_Lti3s3_4_105_out1.read()||s_reg_22.read()) ) ) {
        /* state55 */
        s_reg_43 = SobelFilter_Add_33Ux33U_33U_4_10_out1.read();
      } 
      break;
    case 35ULL: case 36ULL: case 46ULL: case 47ULL: case 57ULL: case 58ULL: 
      s_reg_43 = (sc_uint<33> ) ((sc_int<32> )s_reg_43.read());
      break;
    case 45ULL: 
      if ( SobelFilter_Lti3s3_4_111_out1.read() ) {
        /* state66 */
        s_reg_43 = (sc_uint<33> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1
                   .read());
      } else {
        if ( s_reg_22.read() ) {
          /* state69 */
          s_reg_43 = (sc_uint<33> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1
                     .read());
        } else {
          /* state71 */
          s_reg_43 = SobelFilter_Add_33Ux33U_33U_4_10_out1.read();
        }
      }
      break;
    case 56ULL: 
      if ( !( (SobelFilter_Lti3s3_4_117_out1.read()||s_reg_22.read()) ) ) {
        /* state87 */
        s_reg_43 = SobelFilter_Add_33Ux33U_33U_4_10_out1.read();
      } 
      break;
    }
    break;
  }
}
// resource: mux_5bx3i1c
// resource: regr_en_sc_5
void SobelFilter::drive_s_reg_5(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state.read()) ) {
      case 16ULL: 
        s_reg_5 = (sc_uint<5> ) (SobelFilter_Add2i1u4_4_15_out1.read());
        break;
      case 22ULL: 
        s_reg_5 = 0ULL;
        break;
      case 24ULL: 
        s_reg_5 = (sc_uint<5> ) (SobelFilter_Add2i1u4_4_52_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx3i0c
// resource: regr_en_3
void SobelFilter::drive_s_reg_54(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 10ULL: 
      s_reg_54 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_8_out1.read());
      break;
    case 43ULL: 
      s_reg_54 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_72_out1.read());
      break;
    case 53ULL: case 58ULL: 
      s_reg_54 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_59_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_24bx4i0c
// resource: regr_en_sc_24
void SobelFilter::drive_s_reg_6(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state.read()) ) {
      case 11ULL: 
        s_reg_6 = (sc_uint<24> )SobelFilter_Add_33Ux33U_33U_4_10_out1.read();
        break;
      case 19ULL: 
        s_reg_6 = i_rgb_data.read();
        break;
      case 23ULL: 
        s_reg_6 = Gaussian_value_out1.read();
        break;
      case 33ULL: case 44ULL: case 54ULL: 
        s_reg_6 = (sc_uint<24> ) (SobelFilter_N_Mux_24_2_53_4_83_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx3i1c
// resource: regr_en_32
void SobelFilter::drive_s_reg_64(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 22ULL: case 31ULL: case 42ULL: case 53ULL: 
      s_reg_64 = 0ULL;
      break;
    case 25ULL: 
      s_reg_64 = (sc_uint<32> ) (
                 SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1.read());
      break;
    case 32ULL: case 44ULL: case 54ULL: 
      s_reg_64 = (sc_uint<32> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1.read())
      ;
      break;
    }
    break;
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_32
void SobelFilter::drive_s_reg_68(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 32ULL: case 43ULL: case 54ULL: 
      s_reg_68 = sharpening_out1.read();
      break;
    case 34ULL: case 45ULL: case 56ULL: 
      s_reg_68 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_57_4_109_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_16bx2i0c
// resource: regr_en_16
void SobelFilter::drive_s_reg_70(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 10ULL: 
      s_reg_70 = (sc_uint<16> ) (SobelFilter_R33_20Mul2iLLu24_4_9_out1.read());
      break;
    case 32ULL: case 43ULL: case 55ULL: 
      s_reg_70 = (sc_uint<16> ) (SobelFilter_N_Mux_16_2_55_4_71_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_3bx3i0c
// resource: regr_en_3
void SobelFilter::drive_s_reg_9(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<6>)(global_state.read()) ) {
    case 9ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_6_out1.read());
      break;
    case 13ULL: 
      if ( s_reg_15.read() );
      else {
        s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_6_out1.read());
      }
      break;
    case 21ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2U_6_4_45_out1.read());
      break;
    case 32ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_66_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_4bx10i9c
void SobelFilter::drive_expon_value_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h23fe.read()) ) {
  default:
    expon_value_in1 = 0ULL;
    break;
  case 1ULL: 
    expon_value_in1 = 1ULL;
    break;
  case 2ULL: 
    expon_value_in1 = 2ULL;
    break;
  case 3ULL: 
    expon_value_in1 = 3ULL;
    break;
  case 4ULL: 
    expon_value_in1 = 4ULL;
    break;
  case 5ULL: 
    expon_value_in1 = 5ULL;
    break;
  case 6ULL: 
    expon_value_in1 = 6ULL;
    break;
  case 7ULL: 
    expon_value_in1 = 7ULL;
    break;
  case 8ULL: 
    expon_value_in1 = 8ULL;
    break;
  case 9ULL: 
    expon_value_in1 = SobelFilter_Add2u2Mul2i3u2_4_7_out1.read();
    break;
  }
}
// resource: mux_24bx3i3c
void SobelFilter::drive_expon_value_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_hba.read()) ) {
  default:
    expon_value_DIN = 219793ULL;
    break;
  case 1ULL: 
    expon_value_DIN = 480073ULL;
    break;
  case 2ULL: 
    expon_value_DIN = 1048576ULL;
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_expon_value_CE(){
  if ( stall0.read() ) {
    expon_value_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h23ff.read()) ) {
    default:
      expon_value_CE = 0ULL;
      break;
    case 1ULL: 
      expon_value_CE = 1ULL;
      break;
    case 2ULL: 
      if ( s_reg_15.read() ) {
        expon_value_CE = 1ULL;
      } else {
        if ( SobelFilter_Lti3s3_4_14_out1.read() ) {
          expon_value_CE = 1ULL;
        } else {
          expon_value_CE = 0ULL;
        }
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_expon_value_RW(){
  if ( stall0.read() ) {
    expon_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h1ff.read() ) {
      expon_value_RW = 1ULL;
    } else {
      expon_value_RW = 0ULL;
    }
  }
}
// resource: mux_2bx2i0c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_6_in2(){
  if ( gs_ctrl_do_filter_h2000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_6_in2 = (sc_uint<2> )s_reg_9.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_6_in2 = (sc_uint<2> )s_reg_4.read();
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_6
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_6(){
  SobelFilter_Add_2Ux1U_3U_4_6_out1 = (/*cliff*/sc_uint<32>)(
                                      SobelFilter_Add_2Ux1U_3U_4_6_in2.read() + 
                                      1ULL);
}
// resource: mux_2bx2i0c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_7_in2(){
  if ( gs_ctrl_do_filter_h2000.read() ) {
    if ( s_reg_15.read() ) {
      SobelFilter_Add2u2Mul2i3u2_4_7_in2 = (sc_uint<2> )s_reg_4.read();
    } else {
      SobelFilter_Add2u2Mul2i3u2_4_7_in2 = (sc_uint<2> )s_reg_9.read();
    }
  } else {
    SobelFilter_Add2u2Mul2i3u2_4_7_in2 = (sc_uint<2> )s_reg_4.read();
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_7_in1(){
  if ( gs_ctrl_do_filter_h2000.read() ) {
    if ( s_reg_15.read() ) {
      SobelFilter_Add2u2Mul2i3u2_4_7_in1 = (sc_uint<2> )s_reg_54.read();
    } else {
      SobelFilter_Add2u2Mul2i3u2_4_7_in1 = 0ULL;
    }
  } else {
    SobelFilter_Add2u2Mul2i3u2_4_7_in1 = 0ULL;
  }
}
// resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_7
void SobelFilter::SobelFilter_Add2u2Mul2i3u2_4_7(){
  SobelFilter_Add2u2Mul2i3u2_4_7_out1 = (SobelFilter_Add2u2Mul2i3u2_4_7_in2
                                        .read() * 3ULL + 
                                        SobelFilter_Add2u2Mul2i3u2_4_7_in1
                                        .read());
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_8
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_8(){
  SobelFilter_Add_2Ux1U_3U_4_8_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                      s_reg_38.read() + 1ULL);
}
// resource: SobelFilter_R33_20Mul2iLLu24_4  instance: SobelFilter_R33_20Mul2iLLu24_4_9
void SobelFilter::drive_bits001(){
  bits001 = expon_value_out1.read() * 1019ULL;
}
// resource: SobelFilter_R33_20Mul2iLLu24_4  instance: SobelFilter_R33_20Mul2iLLu24_4_9
void SobelFilter::SobelFilter_R33_20Mul2iLLu24_4_9(){
  SobelFilter_R33_20Mul2iLLu24_4_9_out1 = (sc_uint<14> ) (bits001.read().range(
                                          33,20));
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_33Ux33U_33U_4_10_in2_slice(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h901202400000000.read()) ) {
  default:
    SobelFilter_Add_33Ux33U_33U_4_10_in2_slice = (sc_int<32> )s_reg_6.read();
    break;
  case 1ULL: 
    SobelFilter_Add_33Ux33U_33U_4_10_in2_slice = (sc_int<32> ) (( (sc_uint<32> )
                                                 (sc_bv<32>)((sc_bv<16>)((
                                                 sc_uint<16> )s_reg_70.read()), 
                                                 (sc_bv<16>)(0ULL)) ));
    break;
  case 2ULL: 
    SobelFilter_Add_33Ux33U_33U_4_10_in2_slice = (sc_int<32> ) (s_reg_68.read())
    ;
    break;
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_33Ux33U_33U_4_10_in1_slice(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h901202400000000.read()) ) {
  default:
    SobelFilter_Add_33Ux33U_33U_4_10_in1_slice = (sc_int<32> )((sc_uint<14> )
                                                 s_reg_70.read());
    break;
  case 1ULL: 
    SobelFilter_Add_33Ux33U_33U_4_10_in1_slice = (sc_int<32> ) (( (sc_uint<32> )
                                                 (sc_bv<32>)((sc_bv<24>)((
                                                 sc_uint<24> )s_reg_6.read()), 
                                                 (sc_bv<8>)(0ULL)) ));
    break;
  case 2ULL: 
    SobelFilter_Add_33Ux33U_33U_4_10_in1_slice = (sc_int<32> )s_reg_43.read();
    break;
  }
}
// resource: SobelFilter_Add_33Ux33U_33U_4  instance: SobelFilter_Add_33Ux33U_33U_4_10
void SobelFilter::SobelFilter_Add_33Ux33U_33U_4_10(){
  SobelFilter_Add_33Ux33U_33U_4_10_out1 = ((sc_uint<33> )SobelFilter_Add_33Ux33U_33U_4_10_in2_slice
                                          .read() + (sc_uint<33> )SobelFilter_Add_33Ux33U_33U_4_10_in1_slice
                                          .read());
}
// resource: SobelFilter_Mul2i3u2_4  instance: SobelFilter_Mul2i3u2_4_11
void SobelFilter::SobelFilter_Mul2i3u2_4_11(){
  SobelFilter_Mul2i3u2_4_11_out1 = (sc_uint<2> )s_reg_4.read() * 3ULL;
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_12
void SobelFilter::SobelFilter_Lti3s3_4_12(){
  SobelFilter_Lti3s3_4_12_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_54.read()
                                  < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_13
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_13(){
  SobelFilter_Add_4Ux2U_5S_4_13_out1 = (SobelFilter_Mul2i3u2_4_11_out1.read() + 
                                       (sc_uint<2> )s_reg_38.read());
}
// resource: mux_4bx3i1c
void SobelFilter::drive_Gaussian_value_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h2432000.read()) ) {
  default:
    Gaussian_value_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_13_out1.read();
    break;
  case 1ULL: 
    Gaussian_value_in1 = (sc_uint<4> )s_reg_5.read();
    break;
  case 2ULL: 
    Gaussian_value_in1 = 0ULL;
    break;
  }
}
// resource: mux_24bx2i0c
void SobelFilter::drive_Gaussian_value_DIN(){
  if ( gs_ctrl_do_filter_h10000.read() ) {
    Gaussian_value_DIN = (sc_uint<24> ) (SobelFilter_DivRem_4_16_out1.read()
                         .range(36,13));
  } else {
    Gaussian_value_DIN = (sc_uint<24> ) ((sc_uint<14> )s_reg_70.read());
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_Gaussian_value_CE(){
  if ( stall0.read() ) {
    Gaussian_value_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h2433000.read()) ) {
    default:
      Gaussian_value_CE = 0ULL;
      break;
    case 1ULL: 
      Gaussian_value_CE = 1ULL;
      break;
    case 2ULL: 
      if ( !( (s_reg_15.read()||SobelFilter_Lti3s3_4_14_out1.read()) ) ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( SobelFilter_Lti9s5_4_17_out1.read() ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 4ULL: 
      if ( !( (SobelFilter_Lti3u2_4_48_out1.read()||SobelFilter_Lti3u2_4_49_out1
           .read()) ) ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 5ULL: 
      if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_Gaussian_value_RW(){
  if ( stall0.read() ) {
    Gaussian_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h11000.read() ) {
      Gaussian_value_RW = 1ULL;
    } else {
      Gaussian_value_RW = 0ULL;
    }
  }
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_14
void SobelFilter::SobelFilter_Lti3s3_4_14(){
  SobelFilter_Lti3s3_4_14_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_9.read()
                                  < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add2i1u4_4  instance: SobelFilter_Add2i1u4_4_15
void SobelFilter::SobelFilter_Add2i1u4_4_15(){
  SobelFilter_Add2i1u4_4_15_out1 = (/*cliff*/sc_uint<32>)((sc_uint<4> )s_reg_5
                                   .read() + 1ULL);
}
void SobelFilter::drive_SobelFilter_DivRem_4_16_in1(){
  SobelFilter_DivRem_4_16_in1 = ( (sc_uint<49> )(sc_bv<49>)((sc_bv<24>)(
                                Gaussian_value_out1.read()), 
                                (sc_bv<25>)(0ULL)) );
}
// resource: SobelFilter_Lti9s5_4  instance: SobelFilter_Lti9s5_4_17
void SobelFilter::SobelFilter_Lti9s5_4_17(){
  SobelFilter_Lti9s5_4_17_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )s_reg_5.read()
                                  < (sc_int<5> )9LL);
}
// resource: mux_32bx2i1c
void SobelFilter::drive_SobelFilter_Lti5s32_4_18_in1(){
  if ( gs_ctrl_do_filter_h2004000010000000.read() ) {
    SobelFilter_Lti5s32_4_18_in1 = (sc_int<32> ) (s_reg_29.read());
  } else {
    SobelFilter_Lti5s32_4_18_in1 = 0LL;
  }
}
// resource: SobelFilter_Lti5s32_4  instance: SobelFilter_Lti5s32_4_18
void SobelFilter::SobelFilter_Lti5s32_4_18(){
  SobelFilter_Lti5s32_4_18_out1 = (/*imp*/sc_uint<1>)(
                                  SobelFilter_Lti5s32_4_18_in1.read() < (
                                  sc_int<4> )5LL);
}
// resource: SobelFilter_Gei5s32_4  instance: SobelFilter_Gei5s32_4_19
void SobelFilter::SobelFilter_Gei5s32_4_19(){
  SobelFilter_Gei5s32_4_19_out1 = (/*imp*/sc_uint<1>)(
                                  SobelFilter_Lti5s32_4_18_in1.read() >= (
                                  sc_int<4> )5LL);
}
// resource: SobelFilter_Lti10s32_4  instance: SobelFilter_Lti10s32_4_20
void SobelFilter::SobelFilter_Lti10s32_4_20(){
  SobelFilter_Lti10s32_4_20_out1 = (/*imp*/sc_uint<1>)(
                                   SobelFilter_Lti5s32_4_18_in1.read() < (
                                   sc_int<5> )10LL);
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_21
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_21(){
  SobelFilter_And_1Ux1U_1U_4_21_out1 = SobelFilter_Lti10s32_4_20_out1.read() & 
                                       SobelFilter_Gei5s32_4_19_out1.read();
}
// resource: mux_6bx2i1c
void SobelFilter::drive_SobelFilter_Mul2i3s6_4_22_in1(){
  if ( gs_ctrl_do_filter_h2004000010000000.read() ) {
    SobelFilter_Mul2i3s6_4_22_in1 = (sc_int<6> )s_reg_29.read();
  } else {
    SobelFilter_Mul2i3s6_4_22_in1 = 0LL;
  }
}
// resource: SobelFilter_Mul2i3s6_4  instance: SobelFilter_Mul2i3s6_4_22
void SobelFilter::SobelFilter_Mul2i3s6_4_22(){
  SobelFilter_Mul2i3s6_4_22_out1 = (/*cliff*/sc_int<32>)
                                   SobelFilter_Mul2i3s6_4_22_in1.read() * 3ULL;
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_24
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_24(){
  SobelFilter_Or_1Ux1U_1U_4_24_out1 = SobelFilter_And_1Ux1U_1U_4_21_out1.read()
                                       | SobelFilter_Lti5s32_4_18_out1.read();
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_28
void SobelFilter::SobelFilter_Not_1U_1U_4_28(){
  SobelFilter_Not_1U_1U_4_28_out1 = !SobelFilter_Lti5s32_4_18_out1.read();
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_29
void SobelFilter::SobelFilter_Not_1U_1U_4_29(){
  SobelFilter_Not_1U_1U_4_29_out1 = !SobelFilter_Or_1Ux1U_1U_4_24_out1.read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_32
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_32(){
  SobelFilter_And_1Ux1U_1U_4_32_out1 = SobelFilter_Not_1U_1U_4_28_out1.read() & 
                                       SobelFilter_And_1Ux1U_1U_4_21_out1.read()
  ;
}
// resource: SobelFilter_Add2i15Mul2i3s6_4  instance: SobelFilter_Add2i15Mul2i3s6_4_33
void SobelFilter::SobelFilter_Add2i15Mul2i3s6_4_33(){
  SobelFilter_Add2i15Mul2i3s6_4_33_out1 = ((sc_uint<6> )(( (/*cliff*/sc_int<32>)
                                          SobelFilter_Mul2i3s6_4_22_in1.read()
                                           * 3ULL )) + 15ULL);
}
// resource: SobelFilter_Add2i1s32_4  instance: SobelFilter_Add2i1s32_4_34
void SobelFilter::SobelFilter_Add2i1s32_4_34(){
  SobelFilter_Add2i1s32_4_34_out1 = (/*cliff*/sc_int<32>)(
                                    SobelFilter_Lti5s32_4_18_in1.read() + 1ULL);
}
// resource: SobelFilter_Add2i2Mul2i3Subi10s6_4  instance: SobelFilter_Add2i2Mul2i3Subi10s6_4_35
void SobelFilter::SobelFilter_Add2i2Mul2i3Subi10s6_4_35(){
  SobelFilter_Add2i2Mul2i3Subi10s6_4_35_out1 = (/*cliff*/sc_int<32>)(
                                               (/*cliff*/sc_int<32>)( 
                                               (/*cliff*/sc_int<32>)
                                               SobelFilter_Mul2i3s6_4_22_in1
                                               .read() - 10ULL ) * 3ULL + 2ULL);
}
// resource: SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4  instance: SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36
void SobelFilter::SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36(){
  SobelFilter_Add2i15Add2i2Mul2i3Subi10s6_4_36_out1 = ((sc_uint<6> )(( 
                                                      (/*cliff*/sc_int<32>)(
                                                      (/*cliff*/sc_int<32>)( 
                                                      (/*cliff*/sc_int<32>)SobelFilter_Mul2i3s6_4_22_in1
                                                      .read() - 10ULL ) * 3ULL
                                                       + 2ULL) )) + 15ULL);
}
// resource: SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4  instance: SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37
void SobelFilter::SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37(){
  SobelFilter_Add2i30Add2i2Mul2i3Subi10s6_4_37_out1 = ((sc_uint<6> )(( 
                                                      (/*cliff*/sc_int<32>)(
                                                      (/*cliff*/sc_int<32>)( 
                                                      (/*cliff*/sc_int<32>)SobelFilter_Mul2i3s6_4_22_in1
                                                      .read() - 10ULL ) * 3ULL
                                                       + 2ULL) )) + 30ULL);
}
// resource: SobelFilter_Add2i1Mul2i3Subi5s6_4  instance: SobelFilter_Add2i1Mul2i3Subi5s6_4_38
void SobelFilter::SobelFilter_Add2i1Mul2i3Subi5s6_4_38(){
  SobelFilter_Add2i1Mul2i3Subi5s6_4_38_out1 = (/*cliff*/sc_int<32>)(
                                              (/*cliff*/sc_int<32>)( 
                                              (/*cliff*/sc_int<32>)
                                              SobelFilter_Mul2i3s6_4_22_in1
                                              .read() - 5ULL ) * 3ULL + 1ULL);
}
// resource: SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4  instance: SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39
void SobelFilter::SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39(){
  SobelFilter_Add2i15Add2i1Mul2i3Subi5s6_4_39_out1 = ((sc_uint<6> )(( 
                                                     (/*cliff*/sc_int<32>)(
                                                     (/*cliff*/sc_int<32>)( 
                                                     (/*cliff*/sc_int<32>)SobelFilter_Mul2i3s6_4_22_in1
                                                     .read() - 5ULL ) * 3ULL + 
                                                     1ULL) )) + 15ULL);
}
// resource: SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1  instance: SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40
void SobelFilter::SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40(){
  SobelFilter_Add2i30Add2i1Mul2i3Subi5s6_1_40_out1 = ((sc_uint<6> )(( 
                                                     (/*cliff*/sc_int<32>)(
                                                     (/*cliff*/sc_int<32>)( 
                                                     (/*cliff*/sc_int<32>)SobelFilter_Mul2i3s6_4_22_in1
                                                     .read() - 5ULL ) * 3ULL + 
                                                     1ULL) )) + 30ULL);
}
// resource: SobelFilter_Add2i30Mul2i3s6_4  instance: SobelFilter_Add2i30Mul2i3s6_4_41
void SobelFilter::SobelFilter_Add2i30Mul2i3s6_4_41(){
  SobelFilter_Add2i30Mul2i3s6_4_41_out1 = ((sc_uint<6> )(( (/*cliff*/sc_int<32>)
                                          SobelFilter_Mul2i3s6_4_22_in1.read()
                                           * 3ULL )) + 30ULL);
}
// resource: SobelFilter_Mul2i3u2_4  instance: SobelFilter_Mul2i3u2_4_42
void SobelFilter::SobelFilter_Mul2i3u2_4_42(){
  SobelFilter_Mul2i3u2_4_42_out1 = (sc_uint<2> )s_reg_4.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_43
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_43(){
  SobelFilter_Add_4Ux2U_5U_4_43_out1 = (SobelFilter_Mul2i3u2_4_42_out1.read() + 
                                       (sc_uint<2> )s_reg_38.read());
}
// resource: SobelFilter_Add2i9Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i9Add2u2Mul2i3u2_4_44
void SobelFilter::SobelFilter_Add2i9Add2u2Mul2i3u2_4_44(){
  SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1 = ((sc_uint<5> )(( 
                                               (/*cliff*/sc_uint<32>)(
                                               (/*cliff*/sc_uint<32>)(
                                               sc_uint<2> )s_reg_4.read() * 3ULL
                                                + (sc_uint<2> )s_reg_38.read())
                                                )) + 9ULL);
}
// resource: mux_5bx7i1c
void SobelFilter::drive_val_value_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h3f00000.read()) ) {
  default:
    val_value_in1 = SobelFilter_Add_4Ux2U_5U_4_43_out1.read();
    break;
  case 1ULL: 
    val_value_in1 = SobelFilter_Add2i9Add2u2Mul2i3u2_4_44_out1.read();
    break;
  case 2ULL: 
    val_value_in1 = SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1.read();
    break;
  case 3ULL: 
    val_value_in1 = 0ULL;
    break;
  case 4ULL: 
    val_value_in1 = SobelFilter_Add2i9u4_4_50_out1.read();
    break;
  case 5ULL: 
    val_value_in1 = SobelFilter_Add2i18u4_4_53_out1.read();
    break;
  case 6ULL: 
    val_value_in1 = (sc_uint<5> ) ((sc_uint<4> )s_reg_5.read());
    break;
  }
}
// resource: mux_24bx3i0c
void SobelFilter::drive_val_value_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h300000.read()) ) {
  default:
    val_value_DIN = (sc_uint<24> ) (( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)((
                    sc_uint<8> )i_rgb_data.read()), 
                    (sc_bv<12>)(0ULL)) ));
    break;
  case 1ULL: 
    val_value_DIN = (sc_uint<24> ) (( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)(
                    s_reg_6.read().range(15,8)), 
                    (sc_bv<12>)(0ULL)) ));
    break;
  case 2ULL: 
    val_value_DIN = (sc_uint<24> ) (( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)(
                    s_reg_6.read().range(23,16)), 
                    (sc_bv<12>)(0ULL)) ));
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_val_value_CE(){
  if ( stall0.read() ) {
    val_value_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h3f80000.read()) ) {
    default:
      val_value_CE = 0ULL;
      break;
    case 1ULL: 
      val_value_CE = 1ULL;
      break;
    case 2ULL: 
      if ( !( (SobelFilter_Lti3u2_4_48_out1.read()||SobelFilter_Lti3u2_4_49_out1
           .read()) ) ) {
        val_value_CE = 1ULL;
      } else {
        val_value_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
        val_value_CE = 1ULL;
      } else {
        val_value_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_val_value_RW(){
  if ( stall0.read() ) {
    val_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h380000.read() ) {
      val_value_RW = 1ULL;
    } else {
      val_value_RW = 0ULL;
    }
  }
}
// resource: SobelFilter_Add_2U_6_4  instance: SobelFilter_Add_2U_6_4_45
void SobelFilter::SobelFilter_Add_2U_6_4_45(){
  SobelFilter_Add_2U_6_4_45_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )s_reg_4
                                   .read() + 1ULL);
}
// resource: SobelFilter_Add_2U_6_4  instance: SobelFilter_Add_2U_6_4_46
void SobelFilter::SobelFilter_Add_2U_6_4_46(){
  SobelFilter_Add_2U_6_4_46_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )s_reg_38
                                   .read() + 1ULL);
}
// resource: SobelFilter_Add2i18Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i18Add2u2Mul2i3u2_4_47
void SobelFilter::SobelFilter_Add2i18Add2u2Mul2i3u2_4_47(){
  SobelFilter_Add2i18Add2u2Mul2i3u2_4_47_out1 = ((sc_uint<5> )(( 
                                                (/*cliff*/sc_uint<32>)(
                                                (/*cliff*/sc_uint<32>)(
                                                sc_uint<2> )s_reg_4.read() * 
                                                3ULL + (sc_uint<2> )s_reg_38
                                                .read()) )) + 18ULL);
}
// resource: SobelFilter_Lti3u2_4  instance: SobelFilter_Lti3u2_4_48
void SobelFilter::SobelFilter_Lti3u2_4_48(){
  SobelFilter_Lti3u2_4_48_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )s_reg_38
                                 .read() < (sc_uint<2> )3ULL);
}
// resource: SobelFilter_Lti3u2_4  instance: SobelFilter_Lti3u2_4_49
void SobelFilter::SobelFilter_Lti3u2_4_49(){
  SobelFilter_Lti3u2_4_49_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )s_reg_9.read()
                                  < (sc_uint<2> )3ULL);
}
// resource: SobelFilter_Add2i9u4_4  instance: SobelFilter_Add2i9u4_4_50
void SobelFilter::SobelFilter_Add2i9u4_4_50(){
  SobelFilter_Add2i9u4_4_50_out1 = ((sc_uint<4> )s_reg_5.read() + 9ULL);
}
// resource: mux_21bx3i0c
void SobelFilter::drive_SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h3000000.read()) ) {
  default:
    SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 = (sc_uint<21> )
                                                         o_result_data.read();
    break;
  case 1ULL: 
    SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 = (sc_uint<21> )s_reg_43
                                                         .read();
    break;
  case 2ULL: 
    SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3 = (sc_uint<21> )s_reg_64
                                                         .read();
    break;
  }
}
// resource: mux_24bx2i0c
void SobelFilter::drive_SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1(){
  if ( gs_ctrl_do_filter_h30000000.read() ) {
    SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1 = s_reg_6.read();
  } else {
    SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1 = Gaussian_value_out1
                                                         .read();
  }
}
// resource: SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4  instance: SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51
void SobelFilter::drive_bits002(){
  bits002 = (( (sc_uint<33> )(sc_bv<33>)((sc_bv<21>)(
            SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in3.read()), 
            (sc_bv<12>)(0ULL)) ) + val_value_out1.read() * 
            SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_in1.read());
}
// resource: SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4  instance: SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51
void SobelFilter::SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51(){
  SobelFilter_R32_12Add2Mul2u24u24CatiLLu21_4_51_out1 = (sc_uint<21> ) (bits002
                                                        .read().range(32,12));
}
// resource: SobelFilter_Add2i1u4_4  instance: SobelFilter_Add2i1u4_4_52
void SobelFilter::SobelFilter_Add2i1u4_4_52(){
  SobelFilter_Add2i1u4_4_52_out1 = (/*cliff*/sc_uint<32>)((sc_uint<4> )s_reg_5
                                   .read() + 1ULL);
}
// resource: SobelFilter_Add2i18u4_4  instance: SobelFilter_Add2i18u4_4_53
void SobelFilter::SobelFilter_Add2i18u4_4_53(){
  SobelFilter_Add2i18u4_4_53_out1 = ((sc_uint<4> )s_reg_5.read() + 18ULL);
}
// resource: SobelFilter_Lti9s5_4  instance: SobelFilter_Lti9s5_4_55
void SobelFilter::SobelFilter_Lti9s5_4_55(){
  SobelFilter_Lti9s5_4_55_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )s_reg_5.read()
                                  < (sc_int<5> )9LL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_57
void SobelFilter::SobelFilter_Not_1U_1U_4_57(){
  SobelFilter_Not_1U_1U_4_57_out1 = !s_reg_22.read();
}
// resource: mux_6bx15i0c
void SobelFilter::drive_buffer_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h6f8df1bec000000.read()) ) {
  default:
    if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
      buffer_in1 = s_reg_33.read();
    } else {
      buffer_in1 = s_reg_21.read();
    }
    break;
  case 1ULL: 
    if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
      buffer_in1 = s_reg_34.read();
    } else {
      buffer_in1 = s_reg_28.read();
    }
    break;
  case 2ULL: 
    if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
      buffer_in1 = s_reg_32.read();
    } else {
      if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
        buffer_in1 = s_reg_35.read();
      } else {
        buffer_in1 = s_reg_32.read();
      }
    }
    break;
  case 3ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )
                 SobelFilter_Add3i6u2Mul2i3u2_4_61_out1.read());
    break;
  case 4ULL: 
    buffer_in1 = SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1.read();
    break;
  case 5ULL: 
    buffer_in1 = SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1.read();
    break;
  case 6ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )
                 SobelFilter_Add3i3u2Mul2i3u2_4_63_out1.read());
    break;
  case 7ULL: 
    buffer_in1 = SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1.read();
    break;
  case 8ULL: 
    buffer_in1 = SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1.read();
    break;
  case 9ULL: 
    buffer_in1 = SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1.read();
    break;
  case 10ULL: 
    buffer_in1 = (sc_uint<6> ) (SobelFilter_Add_4Ux2U_5U_4_79_out1.read());
    break;
  case 11ULL: 
    buffer_in1 = SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1.read();
    break;
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_buffer_DIN(){
  if ( gs_ctrl_do_filter_h8010024000000.read() ) {
    buffer_DIN = (sc_uint<32> ) (s_reg_43.read().range(20,12));
  } else {
    buffer_DIN = (sc_uint<32> ) (o_result_data.read().range(20,12));
  }
}
// resource: mux_1bx6i2c
void SobelFilter::drive_buffer_CE(){
  if ( stall0.read() ) {
    buffer_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h6f8df1bee000000.read()) ) {
    default:
      buffer_CE = 0ULL;
      break;
    case 1ULL: 
      if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
        buffer_CE = 0ULL;
      } else {
        if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
          buffer_CE = s_reg_25.read();
        } else {
          if ( ((s_reg_24.read() && !s_reg_15.read()) && wire_s_reg_24.read()) )
           {
            buffer_CE = s_reg_24.read();
          } else {
            if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
              buffer_CE = s_reg_15.read();
            } else {
              buffer_CE = 0ULL;
            }
          }
        }
      }
      break;
    case 2ULL: 
      if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
        buffer_CE = s_reg_25.read();
      } else {
        if ( ((s_reg_24.read() && !s_reg_15.read()) && 
             SobelFilter_Not_1U_1U_4_57_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_57_out1.read();
        } else {
          if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
            buffer_CE = s_reg_15.read();
          } else {
            buffer_CE = 0ULL;
          }
        }
      }
      break;
    case 3ULL: 
      if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
        buffer_CE = s_reg_15.read();
      } else {
        if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
          buffer_CE = s_reg_25.read();
        } else {
          if ( ((s_reg_24.read() && !s_reg_15.read()) && 
               SobelFilter_Not_1U_1U_4_57_out1.read()) ) {
            buffer_CE = SobelFilter_Not_1U_1U_4_57_out1.read();
          } else {
            buffer_CE = 0ULL;
          }
        }
      }
      break;
    case 4ULL: 
      buffer_CE = 1ULL;
      break;
    }
  }
}
// resource: mux_1bx5i1c
void SobelFilter::drive_buffer_RW(){
  if ( stall0.read() ) {
    buffer_RW = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h1803006e000000.read()) ) {
    default:
      buffer_RW = 0ULL;
      break;
    case 1ULL: 
      if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
        buffer_RW = 0ULL;
      } else {
        if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
          buffer_RW = s_reg_25.read();
        } else {
          if ( ((s_reg_24.read() && !s_reg_15.read()) && wire_s_reg_24.read()) )
           {
            buffer_RW = s_reg_24.read();
          } else {
            if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
              buffer_RW = s_reg_15.read();
            } else {
              buffer_RW = 0ULL;
            }
          }
        }
      }
      break;
    case 2ULL: 
      if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
        buffer_RW = s_reg_25.read();
      } else {
        if ( ((s_reg_24.read() && !s_reg_15.read()) && 
             SobelFilter_Not_1U_1U_4_57_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_57_out1.read();
        } else {
          if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
            buffer_RW = s_reg_15.read();
          } else {
            buffer_RW = 0ULL;
          }
        }
      }
      break;
    case 3ULL: 
      if ( (s_reg_15.read() && wire_s_reg_15_0.read()) ) {
        buffer_RW = s_reg_15.read();
      } else {
        if ( ((s_reg_25.read() && !s_reg_15.read()) && wire_s_reg_25.read()) ) {
          buffer_RW = s_reg_25.read();
        } else {
          if ( ((s_reg_24.read() && !s_reg_15.read()) && 
               SobelFilter_Not_1U_1U_4_57_out1.read()) ) {
            buffer_RW = SobelFilter_Not_1U_1U_4_57_out1.read();
          } else {
            buffer_RW = 0ULL;
          }
        }
      }
      break;
    }
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_59_in2(){
  if ( gs_ctrl_do_filter_h400000000000000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_59_in2 = (sc_uint<2> )s_reg_54.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_59_in2 = 0ULL;
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_59
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_59(){
  SobelFilter_Add_2Ux1U_3U_4_59_out1 = (/*cliff*/sc_uint<32>)(
                                       SobelFilter_Add_2Ux1U_3U_4_59_in2.read()
                                        + 1ULL);
}
// resource: mux_2bx3i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_60_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h1800000000.read()) ) {
  default:
    SobelFilter_Add2u2Mul2i3u2_4_60_in2 = 0ULL;
    break;
  case 1ULL: 
    SobelFilter_Add2u2Mul2i3u2_4_60_in2 = (sc_uint<2> )s_reg_4.read();
    break;
  case 2ULL: 
    SobelFilter_Add2u2Mul2i3u2_4_60_in2 = (sc_uint<2> )s_reg_9.read();
    break;
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_60_in1(){
  if ( gs_ctrl_do_filter_h800000000.read() ) {
    SobelFilter_Add2u2Mul2i3u2_4_60_in1 = (sc_uint<2> )s_reg_38.read();
  } else {
    SobelFilter_Add2u2Mul2i3u2_4_60_in1 = 0ULL;
  }
}
// resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_60
void SobelFilter::SobelFilter_Add2u2Mul2i3u2_4_60(){
  SobelFilter_Add2u2Mul2i3u2_4_60_out1 = (SobelFilter_Add2u2Mul2i3u2_4_60_in2
                                         .read() * 3ULL + 
                                         SobelFilter_Add2u2Mul2i3u2_4_60_in1
                                         .read());
}
// resource: SobelFilter_Add3i6u2Mul2i3u2_4  instance: SobelFilter_Add3i6u2Mul2i3u2_4_61
void SobelFilter::SobelFilter_Add3i6u2Mul2i3u2_4_61(){
  SobelFilter_Add3i6u2Mul2i3u2_4_61_out1 = (/*cliff*/sc_uint<32>)(( 
                                           (/*cliff*/sc_uint<32>)(
                                           (/*cliff*/sc_uint<32>)
                                           SobelFilter_Add2u2Mul2i3u2_4_60_in2
                                           .read() * 3ULL + 
                                           SobelFilter_Add2u2Mul2i3u2_4_60_in1
                                           .read()) ) + 6ULL);
}
// resource: mux_2bx3i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_62_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_hc00000000000.read()) ) {
  default:
    SobelFilter_Add2u2Mul2i3u2_4_62_in2 = 0ULL;
    break;
  case 1ULL: 
    SobelFilter_Add2u2Mul2i3u2_4_62_in2 = (sc_uint<2> )s_reg_38.read();
    break;
  case 2ULL: 
    SobelFilter_Add2u2Mul2i3u2_4_62_in2 = (sc_uint<2> )s_reg_54.read();
    break;
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_62_in1(){
  if ( gs_ctrl_do_filter_h400000000000.read() ) {
    SobelFilter_Add2u2Mul2i3u2_4_62_in1 = (sc_uint<2> )s_reg_4.read();
  } else {
    SobelFilter_Add2u2Mul2i3u2_4_62_in1 = 0ULL;
  }
}
// resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_62
void SobelFilter::SobelFilter_Add2u2Mul2i3u2_4_62(){
  SobelFilter_Add2u2Mul2i3u2_4_62_out1 = (SobelFilter_Add2u2Mul2i3u2_4_62_in2
                                         .read() * 3ULL + 
                                         SobelFilter_Add2u2Mul2i3u2_4_62_in1
                                         .read());
}
// resource: SobelFilter_Add3i3u2Mul2i3u2_4  instance: SobelFilter_Add3i3u2Mul2i3u2_4_63
void SobelFilter::SobelFilter_Add3i3u2Mul2i3u2_4_63(){
  SobelFilter_Add3i3u2Mul2i3u2_4_63_out1 = (/*cliff*/sc_uint<32>)(( 
                                           (/*cliff*/sc_uint<32>)(
                                           (/*cliff*/sc_uint<32>)
                                           SobelFilter_Add2u2Mul2i3u2_4_62_in2
                                           .read() * 3ULL + 
                                           SobelFilter_Add2u2Mul2i3u2_4_62_in1
                                           .read()) ) + 3ULL);
}
// resource: mux_2bx3i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_64_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h600000000000000.read()) ) {
  default:
    SobelFilter_Add2u2Mul2i3u2_4_64_in2 = 0ULL;
    break;
  case 1ULL: 
    SobelFilter_Add2u2Mul2i3u2_4_64_in2 = (sc_uint<2> )s_reg_38.read();
    break;
  case 2ULL: 
    SobelFilter_Add2u2Mul2i3u2_4_64_in2 = (sc_uint<2> )s_reg_54.read();
    break;
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add2u2Mul2i3u2_4_64_in1(){
  if ( gs_ctrl_do_filter_h200000000000000.read() ) {
    SobelFilter_Add2u2Mul2i3u2_4_64_in1 = (sc_uint<2> )s_reg_4.read();
  } else {
    SobelFilter_Add2u2Mul2i3u2_4_64_in1 = 0ULL;
  }
}
// resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_64
void SobelFilter::SobelFilter_Add2u2Mul2i3u2_4_64(){
  SobelFilter_Add2u2Mul2i3u2_4_64_out1 = (SobelFilter_Add2u2Mul2i3u2_4_64_in2
                                         .read() * 3ULL + 
                                         SobelFilter_Add2u2Mul2i3u2_4_64_in1
                                         .read());
}
// resource: SobelFilter_Add2i15Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i15Add2u2Mul2i3u2_4_65
void SobelFilter::SobelFilter_Add2i15Add2u2Mul2i3u2_4_65(){
  SobelFilter_Add2i15Add2u2Mul2i3u2_4_65_out1 = ((sc_uint<5> )(( 
                                                (/*cliff*/sc_uint<32>)(
                                                (/*cliff*/sc_uint<32>)SobelFilter_Add2u2Mul2i3u2_4_64_in2
                                                .read() * 3ULL + SobelFilter_Add2u2Mul2i3u2_4_64_in1
                                                .read()) )) + 15ULL);
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_66
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_66(){
  SobelFilter_Add_2Ux1U_3U_4_66_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                       s_reg_4.read() + 1ULL);
}
// resource: SobelFilter_Add2i15Add3i6u2Mul2i3u2_4  instance: SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67
void SobelFilter::SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67(){
  SobelFilter_Add2i15Add3i6u2Mul2i3u2_4_67_out1 = ((sc_uint<5> )(( 
                                                  (/*cliff*/sc_uint<32>)(( 
                                                  (/*cliff*/sc_uint<32>)(
                                                  (/*cliff*/sc_uint<32>)(
                                                  sc_uint<2> )s_reg_4.read() * 
                                                  3ULL + (sc_uint<2> )s_reg_38
                                                  .read()) ) + 6ULL) )) + 15ULL)
  ;
}
// resource: mux_4bx3i0c
void SobelFilter::drive_sharpening_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h620c40000000000.read()) ) {
  default:
    sharpening_in1 = SobelFilter_Add2u2Mul2i3u2_4_60_out1.read();
    break;
  case 1ULL: 
    sharpening_in1 = SobelFilter_Add2u2Mul2i3u2_4_62_out1.read();
    break;
  case 2ULL: 
    sharpening_in1 = SobelFilter_Add2u2Mul2i3u2_4_64_out1.read();
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_sharpening_CE(){
  if ( stall0.read() ) {
    sharpening_CE = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h620c41880000000.read() ) {
      sharpening_CE = 1ULL;
    } else {
      sharpening_CE = 0ULL;
    }
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add2Mul2u32u32s32_4_68_in3(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h180280600000000.read()) ) {
  default:
    SobelFilter_Add2Mul2u32u32s32_4_68_in3 = (sc_int<32> ) (s_reg_64.read());
    break;
  case 1ULL: 
    SobelFilter_Add2Mul2u32u32s32_4_68_in3 = (sc_int<32> )s_reg_43.read();
    break;
  case 2ULL: 
    SobelFilter_Add2Mul2u32u32s32_4_68_in3 = (sc_int<32> ) (o_result_data.read()
                                             );
    break;
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add2Mul2u32u32s32_4_68_in1(){
  if ( gs_ctrl_do_filter_h180300600000000.read() ) {
    SobelFilter_Add2Mul2u32u32s32_4_68_in1 = (sc_uint<32> ) (s_reg_68.read());
  } else {
    SobelFilter_Add2Mul2u32u32s32_4_68_in1 = (sc_uint<32> ) (sharpening_out1
                                             .read());
  }
}
// resource: SobelFilter_Add2Mul2u32u32s32_4  instance: SobelFilter_Add2Mul2u32u32s32_4_68
void SobelFilter::SobelFilter_Add2Mul2u32u32s32_4_68(){
  SobelFilter_Add2Mul2u32u32s32_4_68_out1 = (/*cliff*/sc_int<32>)(SobelFilter_Add2Mul2u32u32s32_4_68_in3
                                            .read() + (/*cliff*/sc_uint<32>)(
                                            sc_uint<32> )buffer_out1.read() * SobelFilter_Add2Mul2u32u32s32_4_68_in1
                                            .read());
}
// resource: SobelFilter_Gti255s32_4  instance: SobelFilter_Gti255s32_4_69
void SobelFilter::SobelFilter_Gti255s32_4_69(){
  SobelFilter_Gti255s32_4_69_out1 = (/*imp*/sc_uint<1>)(
                                    SobelFilter_Add2Mul2u32u32s32_4_68_out1
                                    .read() > (sc_int<9> )255LL);
}
void SobelFilter::drive_SobelFilter_N_Mux_16_2_54_4_70_ctrl1(){
  SobelFilter_N_Mux_16_2_54_4_70_ctrl1 = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
                                         SobelFilter_Add2Mul2u32u32s32_4_68_out1
                                         .read().range(31,31)));
}
// resource: SobelFilter_N_Mux_16_2_54_4
void SobelFilter::SobelFilter_N_Mux_16_2_54_4_70(){
  if ( SobelFilter_N_Mux_16_2_54_4_70_ctrl1.read() ) {
    SobelFilter_N_Mux_16_2_54_4_70_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_16_2_54_4_70_out1 = (sc_uint<16> )SobelFilter_Add2Mul2u32u32s32_4_68_out1
                                          .read();
  }
}
// resource: SobelFilter_N_Mux_16_2_55_4
void SobelFilter::SobelFilter_N_Mux_16_2_55_4_71(){
  if ( SobelFilter_Gti255s32_4_69_out1.read() ) {
    SobelFilter_N_Mux_16_2_55_4_71_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_16_2_55_4_71_out1 = SobelFilter_N_Mux_16_2_54_4_70_out1
                                          .read();
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_72
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_72(){
  SobelFilter_Add_2Ux1U_3U_4_72_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                       s_reg_38.read() + 1ULL);
}
// resource: SobelFilter_Add2i15Add3i3u2Mul2i3u2_4  instance: SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73
void SobelFilter::SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73(){
  SobelFilter_Add2i15Add3i3u2Mul2i3u2_4_73_out1 = ((sc_uint<5> )(( 
                                                  (/*cliff*/sc_uint<32>)(( 
                                                  (/*cliff*/sc_uint<32>)(
                                                  (/*cliff*/sc_uint<32>)(
                                                  sc_uint<2> )s_reg_38.read() * 
                                                  3ULL + (sc_uint<2> )s_reg_4
                                                  .read()) ) + 3ULL) )) + 15ULL)
  ;
}
// resource: SobelFilter_Mul2i3u2_4  instance: SobelFilter_Mul2i3u2_4_78
void SobelFilter::SobelFilter_Mul2i3u2_4_78(){
  SobelFilter_Mul2i3u2_4_78_out1 = (sc_uint<2> )s_reg_38.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_79
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_79(){
  SobelFilter_Add_4Ux2U_5U_4_79_out1 = (SobelFilter_Mul2i3u2_4_78_out1.read() + 
                                       (sc_uint<2> )s_reg_4.read());
}
// resource: SobelFilter_N_Mux_24_2_52_4
void SobelFilter::SobelFilter_N_Mux_24_2_52_4_82(){
  if ( SobelFilter_N_Mux_16_2_54_4_70_ctrl1.read() ) {
    SobelFilter_N_Mux_24_2_52_4_82_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_24_2_52_4_82_out1 = (sc_uint<24> )SobelFilter_Add2Mul2u32u32s32_4_68_out1
                                          .read();
  }
}
// resource: SobelFilter_N_Mux_24_2_53_4
void SobelFilter::SobelFilter_N_Mux_24_2_53_4_83(){
  if ( SobelFilter_Gti255s32_4_69_out1.read() ) {
    SobelFilter_N_Mux_24_2_53_4_83_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_24_2_53_4_83_out1 = SobelFilter_N_Mux_24_2_52_4_82_out1
                                          .read();
  }
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_84
void SobelFilter::SobelFilter_Lti3s3_4_84(){
  SobelFilter_Lti3s3_4_84_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_9.read()
                                  < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add2i30Add3i6u2Mul2i3u2_4  instance: SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85
void SobelFilter::SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85(){
  SobelFilter_Add2i30Add3i6u2Mul2i3u2_4_85_out1 = ((sc_uint<5> )(( 
                                                  (/*cliff*/sc_uint<32>)(( 
                                                  (/*cliff*/sc_uint<32>)(
                                                  (/*cliff*/sc_uint<32>)(
                                                  sc_uint<2> )s_reg_4.read() * 
                                                  3ULL + (sc_uint<2> )s_reg_38
                                                  .read()) ) + 6ULL) )) + 30ULL)
  ;
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_86
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_86(){
  SobelFilter_Add_2Ux1U_3U_4_86_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                       s_reg_38.read() + 1ULL);
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_91
void SobelFilter::SobelFilter_Lti3s3_4_91(){
  SobelFilter_Lti3s3_4_91_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_54.read()
                                  < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add2i30Add3i3u2Mul2i3u2_4  instance: SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92
void SobelFilter::SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92(){
  SobelFilter_Add2i30Add3i3u2Mul2i3u2_4_92_out1 = ((sc_uint<5> )(( 
                                                  (/*cliff*/sc_uint<32>)(( 
                                                  (/*cliff*/sc_uint<32>)(
                                                  (/*cliff*/sc_uint<32>)(
                                                  sc_uint<2> )s_reg_38.read() * 
                                                  3ULL + (sc_uint<2> )s_reg_4
                                                  .read()) ) + 3ULL) )) + 30ULL)
  ;
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_93
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_93(){
  SobelFilter_Add_2Ux1U_3U_4_93_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                       s_reg_4.read() + 1ULL);
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_98
void SobelFilter::SobelFilter_Lti3s3_4_98(){
  SobelFilter_Lti3s3_4_98_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_54.read()
                                  < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add2i30Add2u2Mul2i3u2_4  instance: SobelFilter_Add2i30Add2u2Mul2i3u2_4_99
void SobelFilter::SobelFilter_Add2i30Add2u2Mul2i3u2_4_99(){
  SobelFilter_Add2i30Add2u2Mul2i3u2_4_99_out1 = ((sc_uint<5> )(( 
                                                (/*cliff*/sc_uint<32>)(
                                                (/*cliff*/sc_uint<32>)(
                                                sc_uint<2> )s_reg_38.read() * 
                                                3ULL + (sc_uint<2> )s_reg_4
                                                .read()) )) + 30ULL);
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_100
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_100(){
  SobelFilter_Add_2Ux1U_3U_4_100_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                        s_reg_4.read() + 1ULL);
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_105
void SobelFilter::SobelFilter_Lti3s3_4_105(){
  SobelFilter_Lti3s3_4_105_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_38
                                  .read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_N_Mux_32_2_56_4
void SobelFilter::SobelFilter_N_Mux_32_2_56_4_108(){
  if ( SobelFilter_N_Mux_16_2_54_4_70_ctrl1.read() ) {
    SobelFilter_N_Mux_32_2_56_4_108_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_32_2_56_4_108_out1 = (sc_uint<32> ) (SobelFilter_Add2Mul2u32u32s32_4_68_out1
                                           .read());
  }
}
// resource: SobelFilter_N_Mux_32_2_57_4
void SobelFilter::SobelFilter_N_Mux_32_2_57_4_109(){
  if ( SobelFilter_Gti255s32_4_69_out1.read() ) {
    SobelFilter_N_Mux_32_2_57_4_109_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_32_2_57_4_109_out1 = SobelFilter_N_Mux_32_2_56_4_108_out1
                                           .read();
  }
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_111
void SobelFilter::SobelFilter_Lti3s3_4_111(){
  SobelFilter_Lti3s3_4_111_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_4.read()
                                   < (sc_int<3> )3LL);
}
// resource: SobelFilter_Lti3s3_4  instance: SobelFilter_Lti3s3_4_117
void SobelFilter::SobelFilter_Lti3s3_4_117(){
  SobelFilter_Lti3s3_4_117_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )s_reg_4.read()
                                   < (sc_int<3> )3LL);
}
// resource: regr_en_sc_6
void SobelFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_6bx17i16c
void SobelFilter::drive_global_state_next(){
  switch( (sc_uint<6>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 13ULL: 
    if ( s_reg_15.read() ) {
      global_state_next = 10ULL;
    } else {
      if ( SobelFilter_Lti3s3_4_14_out1.read() ) {
        global_state_next = 10ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    }
    break;
  case 17ULL: 
    if ( SobelFilter_Lti9s5_4_17_out1.read() ) {
      global_state_next = 14ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 18ULL: case 28ULL: case 39ULL: case 50ULL: case 61ULL: 
    global_state_next = 19ULL;
    break;
  case 22ULL: 
    if ( SobelFilter_Lti3u2_4_48_out1.read() ) {
      global_state_next = 19ULL;
    } else {
      if ( SobelFilter_Lti3u2_4_49_out1.read() ) {
        global_state_next = 19ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    }
    break;
  case 25ULL: 
    if ( SobelFilter_Lti9s5_4_55_out1.read() ) {
      global_state_next = 23ULL;
    } else {
      /* state38 */
      switch( (sc_uint<32>)(s_reg_29.read()) ) {
      default:
        global_state_next = (global_state.read() + 1ULL);
        break;
      case 13ULL: 
        global_state_next = 51ULL;
        break;
      case 14ULL: 
        global_state_next = 40ULL;
        break;
      case 15ULL: 
        global_state_next = 29ULL;
        break;
      }
    }
    break;
  case 31ULL: case 35ULL: case 36ULL: 
    global_state_next = 32ULL;
    break;
  case 34ULL: 
    if ( SobelFilter_Lti3s3_4_105_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      if ( s_reg_22.read() ) {
        global_state_next = 36ULL;
      } else {
        global_state_next = 37ULL;
      }
    }
    break;
  case 42ULL: case 46ULL: case 47ULL: 
    global_state_next = 43ULL;
    break;
  case 45ULL: 
    if ( SobelFilter_Lti3s3_4_111_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      if ( s_reg_22.read() ) {
        global_state_next = 47ULL;
      } else {
        global_state_next = 48ULL;
      }
    }
    break;
  case 53ULL: case 57ULL: case 58ULL: 
    global_state_next = 54ULL;
    break;
  case 56ULL: 
    if ( SobelFilter_Lti3s3_4_117_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      if ( s_reg_22.read() ) {
        global_state_next = 58ULL;
      } else {
        global_state_next = 59ULL;
      }
    }
    break;
  }
}
// resource: mux_4bx10i10c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_h23fe(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h23fe = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h23fe = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h23fe = 1ULL;
        break;
      case 2ULL: 
        gs_ctrl_do_filter_h23fe = 2ULL;
        break;
      case 3ULL: 
        gs_ctrl_do_filter_h23fe = 3ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_h23fe = 4ULL;
        break;
      case 5ULL: 
        gs_ctrl_do_filter_h23fe = 5ULL;
        break;
      case 6ULL: 
        gs_ctrl_do_filter_h23fe = 6ULL;
        break;
      case 7ULL: 
        gs_ctrl_do_filter_h23fe = 7ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h23fe = 8ULL;
        break;
      case 9ULL: case 13ULL: 
        gs_ctrl_do_filter_h23fe = 9ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_hba(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hba = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hba = 0ULL;
        break;
      case 1ULL: case 3ULL: case 5ULL: case 7ULL: 
        gs_ctrl_do_filter_hba = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_hba = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_ss_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h23ff(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h23ff = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h23ff = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 
      6ULL: case 7ULL: case 8ULL: case 9ULL: 
        gs_ctrl_do_filter_h23ff = 1ULL;
        break;
      case 13ULL: 
        gs_ctrl_do_filter_h23ff = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_gs_ctrl_do_filter_h1ff(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1ff = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1ff = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 
      6ULL: case 7ULL: case 8ULL: 
        gs_ctrl_do_filter_h1ff = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h2000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2000 = 0ULL;
        break;
      case 13ULL: 
        gs_ctrl_do_filter_h2000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h901202400000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h901202400000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h901202400000000 = 0ULL;
        break;
      case 34ULL: case 45ULL: case 56ULL: 
        gs_ctrl_do_filter_h901202400000000 = 1ULL;
        break;
      case 37ULL: case 48ULL: case 59ULL: 
        gs_ctrl_do_filter_h901202400000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h2432000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2432000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2432000 = 0ULL;
        break;
      case 13ULL: case 16ULL: case 17ULL: case 25ULL: 
        gs_ctrl_do_filter_h2432000 = 1ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h2432000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h10000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h10000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h10000 = 0ULL;
        break;
      case 16ULL: 
        gs_ctrl_do_filter_h10000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h2433000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2433000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2433000 = 0ULL;
        break;
      case 12ULL: case 16ULL: 
        gs_ctrl_do_filter_h2433000 = 1ULL;
        break;
      case 13ULL: 
        gs_ctrl_do_filter_h2433000 = 2ULL;
        break;
      case 17ULL: 
        gs_ctrl_do_filter_h2433000 = 3ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h2433000 = 4ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h2433000 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h11000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h11000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h11000 = 0ULL;
        break;
      case 12ULL: case 16ULL: 
        gs_ctrl_do_filter_h11000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h2004000010000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2004000010000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2004000010000000 = 0ULL;
        break;
      case 28ULL: case 50ULL: case 61ULL: 
        gs_ctrl_do_filter_h2004000010000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx7i7c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h3f00000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h3f00000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h3f00000 = 0ULL;
        break;
      case 20ULL: 
        gs_ctrl_do_filter_h3f00000 = 1ULL;
        break;
      case 21ULL: 
        gs_ctrl_do_filter_h3f00000 = 2ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h3f00000 = 3ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h3f00000 = 4ULL;
        break;
      case 24ULL: 
        gs_ctrl_do_filter_h3f00000 = 5ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h3f00000 = 6ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h300000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h300000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h300000 = 0ULL;
        break;
      case 20ULL: 
        gs_ctrl_do_filter_h300000 = 1ULL;
        break;
      case 21ULL: 
        gs_ctrl_do_filter_h300000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h3f80000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h3f80000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h3f80000 = 0ULL;
        break;
      case 19ULL: case 20ULL: case 21ULL: case 23ULL: case 24ULL: 
        gs_ctrl_do_filter_h3f80000 = 1ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h3f80000 = 2ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h3f80000 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h380000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h380000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h380000 = 0ULL;
        break;
      case 19ULL: case 20ULL: case 21ULL: 
        gs_ctrl_do_filter_h380000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h3000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h3000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h3000000 = 0ULL;
        break;
      case 24ULL: 
        gs_ctrl_do_filter_h3000000 = 1ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h3000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h30000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h30000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h30000000 = 0ULL;
        break;
      case 24ULL: case 25ULL: 
        gs_ctrl_do_filter_h30000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx12i12c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_h6f8df1bec000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h6f8df1bec000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h6f8df1bec000000 = 0ULL;
        break;
      case 26ULL: case 29ULL: case 40ULL: case 51ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 1ULL;
        break;
      case 27ULL: case 30ULL: case 41ULL: case 52ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 2ULL;
        break;
      case 31ULL: case 35ULL: case 36ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 3ULL;
        break;
      case 32ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 4ULL;
        break;
      case 33ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 5ULL;
        break;
      case 42ULL: case 46ULL: case 47ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 6ULL;
        break;
      case 43ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 7ULL;
        break;
      case 44ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 8ULL;
        break;
      case 53ULL: case 57ULL: case 58ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 9ULL;
        break;
      case 54ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 10ULL;
        break;
      case 55ULL: 
        gs_ctrl_do_filter_h6f8df1bec000000 = 11ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h8010024000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8010024000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8010024000000 = 0ULL;
        break;
      case 26ULL: case 29ULL: case 40ULL: case 51ULL: 
        gs_ctrl_do_filter_h8010024000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx5i5c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h6f8df1bee000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h6f8df1bee000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h6f8df1bee000000 = 0ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h6f8df1bee000000 = 1ULL;
        break;
      case 26ULL: case 29ULL: case 40ULL: case 51ULL: 
        gs_ctrl_do_filter_h6f8df1bee000000 = 2ULL;
        break;
      case 27ULL: case 30ULL: case 41ULL: case 52ULL: 
        gs_ctrl_do_filter_h6f8df1bee000000 = 3ULL;
        break;
      case 31ULL: case 32ULL: case 33ULL: case 35ULL: case 36ULL: case 42ULL: 
      case 43ULL: case 44ULL: case 46ULL: case 47ULL: case 53ULL: case 54ULL: 
      case 55ULL: case 57ULL: case 58ULL: 
        gs_ctrl_do_filter_h6f8df1bee000000 = 4ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h1803006e000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1803006e000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1803006e000000 = 0ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h1803006e000000 = 1ULL;
        break;
      case 26ULL: case 29ULL: case 40ULL: case 51ULL: 
        gs_ctrl_do_filter_h1803006e000000 = 2ULL;
        break;
      case 27ULL: case 30ULL: case 41ULL: case 52ULL: 
        gs_ctrl_do_filter_h1803006e000000 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h400000000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h400000000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h400000000000000 = 0ULL;
        break;
      case 58ULL: 
        gs_ctrl_do_filter_h400000000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h1800000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1800000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1800000000 = 0ULL;
        break;
      case 35ULL: 
        gs_ctrl_do_filter_h1800000000 = 1ULL;
        break;
      case 36ULL: 
        gs_ctrl_do_filter_h1800000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h800000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h800000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h800000000 = 0ULL;
        break;
      case 35ULL: 
        gs_ctrl_do_filter_h800000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_hc00000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hc00000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hc00000000000 = 0ULL;
        break;
      case 46ULL: 
        gs_ctrl_do_filter_hc00000000000 = 1ULL;
        break;
      case 47ULL: 
        gs_ctrl_do_filter_hc00000000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h400000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h400000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h400000000000 = 0ULL;
        break;
      case 46ULL: 
        gs_ctrl_do_filter_h400000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h600000000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h600000000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h600000000000000 = 0ULL;
        break;
      case 57ULL: 
        gs_ctrl_do_filter_h600000000000000 = 1ULL;
        break;
      case 58ULL: 
        gs_ctrl_do_filter_h600000000000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h200000000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h200000000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h200000000000000 = 0ULL;
        break;
      case 57ULL: 
        gs_ctrl_do_filter_h200000000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h620c40000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h620c40000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h620c40000000000 = 0ULL;
        break;
      case 42ULL: case 46ULL: case 47ULL: 
        gs_ctrl_do_filter_h620c40000000000 = 1ULL;
        break;
      case 53ULL: case 57ULL: case 58ULL: 
        gs_ctrl_do_filter_h620c40000000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h620c41880000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h620c41880000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h620c41880000000 = 0ULL;
        break;
      case 31ULL: case 35ULL: case 36ULL: case 42ULL: case 46ULL: case 47ULL: 
      case 53ULL: case 57ULL: case 58ULL: 
        gs_ctrl_do_filter_h620c41880000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h180280600000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h180280600000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h180280600000000 = 0ULL;
        break;
      case 33ULL: case 45ULL: case 55ULL: 
        gs_ctrl_do_filter_h180280600000000 = 1ULL;
        break;
      case 34ULL: case 43ULL: case 56ULL: 
        gs_ctrl_do_filter_h180280600000000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h180300600000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h180300600000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<6>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h180300600000000 = 0ULL;
        break;
      case 33ULL: case 34ULL: case 44ULL: case 45ULL: case 55ULL: case 56ULL: 
        gs_ctrl_do_filter_h180300600000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
void SobelFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               SobelFilter_gen_busy_r_4_128_out1.read().range(2,2)));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_128
void SobelFilter::SobelFilter_gen_busy_r_4_128_p7(){
  SobelFilter_gen_busy_r_4_128_out1 = (sc_uint<3> ) (( (sc_biguint<3> )
                                      (sc_bv<3>)((sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_128_gnew_req
                                      .read()), 
                                      (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                      (sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_128_gdiv.read())
                                      , 
                                      (sc_bv<1>)(SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                      .read())) ))) ));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_128
void SobelFilter::SobelFilter_gen_busy_r_4_128_p6(){
  SobelFilter_gen_busy_r_4_128_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)SobelFilter_gen_busy_r_4_128_gdiv.read()
  ;
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_128
void SobelFilter::SobelFilter_gen_busy_r_4_128_p5(){
  SobelFilter_gen_busy_r_4_128_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld
                                      .read() & !
                                      SobelFilter_gen_busy_r_4_128_gnew_req
                                      .read());
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_128
void SobelFilter::SobelFilter_gen_busy_r_4_128_p4(){
  SobelFilter_gen_busy_r_4_128_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                          i_rgb_m_busy_req_0.read() & ( 
                                          i_rgb_m_unvalidated_req.read() | 
                                          i_rgb_vld.read() ));
}
// resource: regr_ss_1
void SobelFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (SobelFilter_N_Muxb_1_2_32_4_4_out1
                              .read());
  }
}
// resource: SobelFilter_N_Muxb_1_2_32_4
void SobelFilter::SobelFilter_N_Muxb_1_2_32_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    SobelFilter_N_Muxb_1_2_32_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                         .read());
  } else {
    SobelFilter_N_Muxb_1_2_32_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void SobelFilter::drive_o_result_vld(){
  o_result_vld = (sc_uint<1> ) (SobelFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_2(){
  SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req.read() | (
                                     sc_uint<1>)
                                     SobelFilter_Xor_1Ux1U_1U_1_1_out1.read();
}
// resource: regr_sc_1
void SobelFilter::drive_o_result_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_unacked_req = 0ULL;
  } else {
    o_result_m_unacked_req = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_126_out1
                             .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_126
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_126(){
  SobelFilter_And_1Ux1U_1U_4_126_out1 = o_result_busy.read() & o_result_vld
                                        .read();
}
// resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
void SobelFilter::SobelFilter_Xor_1Ux1U_1U_1_1(){
  SobelFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_result_m_req_m_trig_req
                                      .read() ^ o_result_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_result_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_result_m_req_m_prev_trig_req = o_result_m_req_m_trig_req.read();
  }
}
// resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
void SobelFilter::SobelFilter_Not_1U_1U_1_3(){
  SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req.read();
}

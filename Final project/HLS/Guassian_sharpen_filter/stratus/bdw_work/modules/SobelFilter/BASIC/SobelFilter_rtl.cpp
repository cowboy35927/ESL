// Generated by stratus_hls 21.20-p100  (96289.240513)
// Fri May 26 07:05:17 2023
// from ../SobelFilter.cpp
#include "SobelFilter_rtl.h"

struct SobelFilter;
SobelFilter::SobelFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_result_busy("o_result_busy")
    ,o_result_vld("o_result_vld")
    ,o_result_data("o_result_data")
    ,o_result_m_req_m_prev_trig_req("o_result_m_req_m_prev_trig_req")
    ,SobelFilter_Xor_1Ux1U_1U_1_1_out1("SobelFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_result_m_unacked_req("o_result_m_unacked_req")
    ,SobelFilter_Or_1Ux1U_1U_4_2_out1("SobelFilter_Or_1Ux1U_1U_4_2_out1")
    ,SobelFilter_N_Muxb_1_2_6_4_4_out1("SobelFilter_N_Muxb_1_2_6_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,SobelFilter_gen_busy_r_4_186_gdiv("SobelFilter_gen_busy_r_4_186_gdiv")
    ,SobelFilter_gen_busy_r_4_186_gnew_req("SobelFilter_gen_busy_r_4_186_gnew_req")
    ,global_state_next("global_state_next")
    ,SobelFilter_N_Mux_32_2_4_4_142_out1("SobelFilter_N_Mux_32_2_4_4_142_out1")
    ,SobelFilter_N_Mux_24_2_0_4_134_out1("SobelFilter_N_Mux_24_2_0_4_134_out1")
    ,SobelFilter_N_Mux_16_2_2_4_126_out1("SobelFilter_N_Mux_16_2_2_4_126_out1")
    ,SobelFilter_N_Mux_16_2_2_4_126_ctrl1("SobelFilter_N_Mux_16_2_2_4_126_ctrl1")
    ,SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1("SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1")
    ,gs_ctrl_do_filter_h800004000040("gs_ctrl_do_filter_h800004000040")
    ,gs_ctrl_do_filter_h4000040("gs_ctrl_do_filter_h4000040")
    ,SobelFilter_Mul_2Ux2U_4U_4_98_out1("SobelFilter_Mul_2Ux2U_4U_4_98_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_90_out1("SobelFilter_Mul_2Ux2U_4U_4_90_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_88_out1("SobelFilter_Mul_2Ux2U_4U_4_88_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_87_in2("SobelFilter_Add_2Ux1U_3U_4_87_in2")
    ,gs_ctrl_do_filter_h800000000("gs_ctrl_do_filter_h800000000")
    ,SobelFilter_Add_2Ux1U_3U_4_86_in2("SobelFilter_Add_2Ux1U_3U_4_86_in2")
    ,gs_ctrl_do_filter_h8000("gs_ctrl_do_filter_h8000")
    ,SobelFilter_Add_2Ux1U_3U_4_85_in2("SobelFilter_Add_2Ux1U_3U_4_85_in2")
    ,gs_ctrl_do_filter_h100000000000000("gs_ctrl_do_filter_h100000000000000")
    ,SobelFilter_Mul_6Sx2U_6S_4_75_out1("SobelFilter_Mul_6Sx2U_6S_4_75_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_74_out1("SobelFilter_Mul_6Sx2U_6S_4_74_out1")
    ,gs_ctrl_do_filter_he00003df80f00001("gs_ctrl_do_filter_he00003df80f00001")
    ,gs_ctrl_do_filter_he00b03dfd8f00581("gs_ctrl_do_filter_he00b03dfd8f00581")
    ,SobelFilter_Not_1U_1U_4_79_out1("SobelFilter_Not_1U_1U_4_79_out1")
    ,SobelFilter_Not_1U_1U_4_82_out1("SobelFilter_Not_1U_1U_4_82_out1")
    ,gs_ctrl_do_filter_he00003de00f00001("gs_ctrl_do_filter_he00003de00f00001")
    ,gs_ctrl_do_filter_he00b03de58f00581("gs_ctrl_do_filter_he00b03de58f00581")
    ,SobelFilter_Add_6Ux5U_7S_4_76_out1("SobelFilter_Add_6Ux5U_7S_4_76_out1")
    ,SobelFilter_Add_6Sx1U_6S_4_78_out1("SobelFilter_Add_6Sx1U_6S_4_78_out1")
    ,SobelFilter_Add_6Sx2U_6S_4_77_out1("SobelFilter_Add_6Sx2U_6S_4_77_out1")
    ,SobelFilter_Add_6Ux4U_7S_4_81_out1("SobelFilter_Add_6Ux4U_7S_4_81_out1")
    ,SobelFilter_Add_6Ux4U_7S_4_80_out1("SobelFilter_Add_6Ux4U_7S_4_80_out1")
    ,SobelFilter_Add_6Ux5U_7S_4_84_out1("SobelFilter_Add_6Ux5U_7S_4_84_out1")
    ,SobelFilter_Add_6Ux5U_7S_4_83_out1("SobelFilter_Add_6Ux5U_7S_4_83_out1")
    ,SobelFilter_Add_5Ux3U_5U_4_115_out1("SobelFilter_Add_5Ux3U_5U_4_115_out1")
    ,SobelFilter_Add_5Ux4U_6U_4_118_out1("SobelFilter_Add_5Ux4U_6U_4_118_out1")
    ,SobelFilter_Add_5Ux5U_6U_4_128_out1("SobelFilter_Add_5Ux5U_6U_4_128_out1")
    ,SobelFilter_Add_5Ux2U_5U_4_116_out1("SobelFilter_Add_5Ux2U_5U_4_116_out1")
    ,SobelFilter_Add_5Ux4U_6U_4_119_out1("SobelFilter_Add_5Ux4U_6U_4_119_out1")
    ,SobelFilter_Add_5Ux5U_6U_4_129_out1("SobelFilter_Add_5Ux5U_6U_4_129_out1")
    ,SobelFilter_Add_5Ux4U_6U_4_108_out1("SobelFilter_Add_5Ux4U_6U_4_108_out1")
    ,SobelFilter_Add_5Ux5U_6U_4_117_out1("SobelFilter_Add_5Ux5U_6U_4_117_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_71_out1("SobelFilter_Mul_6Sx2U_6S_4_71_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_70_out1("SobelFilter_Mul_6Sx2U_6S_4_70_out1")
    ,SobelFilter_Add_6Ux4U_7S_4_69_out1("SobelFilter_Add_6Ux4U_7S_4_69_out1")
    ,SobelFilter_Not_1U_1U_4_48_out1("SobelFilter_Not_1U_1U_4_48_out1")
    ,SobelFilter_Not_1U_1U_4_40_out1("SobelFilter_Not_1U_1U_4_40_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_39_out1("SobelFilter_Mul_6Sx2U_6S_4_39_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_38_out1("SobelFilter_Mul_6Sx2U_6S_4_38_out1")
    ,SobelFilter_Sub_6Sx4U_6S_4_34_in1("SobelFilter_Sub_6Sx4U_6S_4_34_in1")
    ,gs_ctrl_do_filter_h1500000("gs_ctrl_do_filter_h1500000")
    ,gs_ctrl_do_filter_hab500000("gs_ctrl_do_filter_hab500000")
    ,gs_ctrl_do_filter_h1400000("gs_ctrl_do_filter_h1400000")
    ,gs_ctrl_do_filter_hab400000("gs_ctrl_do_filter_hab400000")
    ,SobelFilter_Add_5Ux5U_5U_4_27_out1("SobelFilter_Add_5Ux5U_5U_4_27_out1")
    ,SobelFilter_Add_5Ux5U_5U_4_32_out1("SobelFilter_Add_5Ux5U_5U_4_32_out1")
    ,SobelFilter_Add_4Ux4U_5U_4_53_out1("SobelFilter_Add_4Ux4U_5U_4_53_out1")
    ,SobelFilter_Add_5Ux5U_5U_4_59_out1("SobelFilter_Add_5Ux5U_5U_4_59_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_30_out1("SobelFilter_Mul_2Ux2U_4U_4_30_out1")
    ,SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice("SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice")
    ,gs_ctrl_do_filter_h2000000("gs_ctrl_do_filter_h2000000")
    ,SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1("SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1")
    ,SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2("SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2")
    ,gs_ctrl_do_filter_h100000a000080000("gs_ctrl_do_filter_h100000a000080000")
    ,gs_ctrl_do_filter_h21000("gs_ctrl_do_filter_h21000")
    ,gs_ctrl_do_filter_h82063000("gs_ctrl_do_filter_h82063000")
    ,gs_ctrl_do_filter_h20000("gs_ctrl_do_filter_h20000")
    ,gs_ctrl_do_filter_h82062000("gs_ctrl_do_filter_h82062000")
    ,SobelFilter_Add_33Ux33U_33U_4_15_in1("SobelFilter_Add_33Ux33U_33U_4_15_in1")
    ,gs_ctrl_do_filter_h6e00037d00370000("gs_ctrl_do_filter_h6e00037d00370000")
    ,SobelFilter_Add_33Ux33U_33U_4_15_in2("SobelFilter_Add_33Ux33U_33U_4_15_in2")
    ,gs_ctrl_do_filter_h6e00037d0037000("gs_ctrl_do_filter_h6e00037d0037000")
    ,SobelFilter_Mul_33Sx32U_35S_4_13_in1("SobelFilter_Mul_33Sx32U_35S_4_13_in1")
    ,gs_ctrl_do_filter_he00007540070000("gs_ctrl_do_filter_he00007540070000")
    ,SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice("SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice")
    ,gs_ctrl_do_filter_he0000754007000("gs_ctrl_do_filter_he0000754007000")
    ,SobelFilter_Add_4Ux2U_5S_4_12_out1("SobelFilter_Add_4Ux2U_5S_4_12_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_6_in2("SobelFilter_Add_2Ux1U_3U_4_6_in2")
    ,gs_ctrl_do_filter_h4000("gs_ctrl_do_filter_h4000")
    ,gs_ctrl_do_filter_h1ff("gs_ctrl_do_filter_h1ff")
    ,gs_ctrl_do_filter_h9ff("gs_ctrl_do_filter_h9ff")
    ,gs_ctrl_do_filter_hba("gs_ctrl_do_filter_hba")
    ,gs_ctrl_do_filter_h9fe("gs_ctrl_do_filter_h9fe")
    ,SobelFilter_Add_4Ux2U_5S_4_10_out1("SobelFilter_Add_4Ux2U_5S_4_10_out1")
    ,s_reg_96("s_reg_96")
    ,s_reg_92("s_reg_92")
    ,SobelFilter_Add_2Ux1U_3U_4_87_out1("SobelFilter_Add_2Ux1U_3U_4_87_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_86_out1("SobelFilter_Add_2Ux1U_3U_4_86_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_85_out1("SobelFilter_Add_2Ux1U_3U_4_85_out1")
    ,SobelFilter_Add_2Ux1U_2U_4_28_out1("SobelFilter_Add_2Ux1U_2U_4_28_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_6_out1("SobelFilter_Add_2Ux1U_3U_4_6_out1")
    ,SobelFilter_N_Mux_32_2_5_4_143_out1("SobelFilter_N_Mux_32_2_5_4_143_out1")
    ,s_reg_69("s_reg_69")
    ,SobelFilter_Add_6Sx1U_6S_4_73_out1("SobelFilter_Add_6Sx1U_6S_4_73_out1")
    ,s_reg_61("s_reg_61")
    ,SobelFilter_N_Mux_24_2_1_4_135_out1("SobelFilter_N_Mux_24_2_1_4_135_out1")
    ,SobelFilter_Add_6Sx2U_6S_4_72_out1("SobelFilter_Add_6Sx2U_6S_4_72_out1")
    ,s_reg_52("s_reg_52")
    ,SobelFilter_Sub_6Sx4U_6S_4_34_out1("SobelFilter_Sub_6Sx4U_6S_4_34_out1")
    ,SobelFilter_Add_4Ux1U_5U_4_47_out1("SobelFilter_Add_4Ux1U_5U_4_47_out1")
    ,SobelFilter_Add_4Ux1U_5U_4_16_out1("SobelFilter_Add_4Ux1U_5U_4_16_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_14_out1("SobelFilter_LessThan_3Sx3S_1U_4_14_out1")
    ,SobelFilter_Not_1U_1U_4_55_out1("SobelFilter_Not_1U_1U_4_55_out1")
    ,s_reg_48("s_reg_48")
    ,s_reg_47("s_reg_47")
    ,SobelFilter_And_1Ux1U_1U_4_50_out1("SobelFilter_And_1Ux1U_1U_4_50_out1")
    ,s_reg_45("s_reg_45")
    ,s_reg_44("s_reg_44")
    ,SobelFilter_Or_1Ux1U_1U_4_54_out1("SobelFilter_Or_1Ux1U_1U_4_54_out1")
    ,s_reg_41("s_reg_41")
    ,s_reg_9("s_reg_9")
    ,s_reg_4_slice("s_reg_4_slice")
    ,s_reg_39("s_reg_39")
    ,SobelFilter_N_Mux_16_2_3_4_127_out1("SobelFilter_N_Mux_16_2_3_4_127_out1")
    ,SobelFilter_Mul_33Sx32U_35S_4_13_out1("SobelFilter_Mul_33Sx32U_35S_4_13_out1")
    ,s_reg_38("s_reg_38")
    ,SobelFilter_Add_5Ux2U_5U_4_101_out1("SobelFilter_Add_5Ux2U_5U_4_101_out1")
    ,SobelFilter_Add_5Ux3U_5U_4_100_out1("SobelFilter_Add_5Ux3U_5U_4_100_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_51_out1("SobelFilter_Mul_6Sx2U_6S_4_51_out1")
    ,SobelFilter_Add_6Sx2U_6S_4_44_out1("SobelFilter_Add_6Sx2U_6S_4_44_out1")
    ,SobelFilter_Add_6Sx1U_6S_4_45_out1("SobelFilter_Add_6Sx1U_6S_4_45_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_8_out1("SobelFilter_Add_2Ux1U_3U_4_8_out1")
    ,wire_s_reg_33("wire_s_reg_33")
    ,SobelFilter_And_1Ux1U_1U_4_43_out1("SobelFilter_And_1Ux1U_1U_4_43_out1")
    ,s_reg_33("s_reg_33")
    ,wire_s_reg_32("wire_s_reg_32")
    ,SobelFilter_LessThan_3Sx3S_1U_4_130_out1("SobelFilter_LessThan_3Sx3S_1U_4_130_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_160_out1("SobelFilter_LessThan_3Sx3S_1U_4_160_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_154_out1("SobelFilter_LessThan_3Sx3S_1U_4_154_out1")
    ,SobelFilter_LessThan_32Sx5S_1U_4_20_out1("SobelFilter_LessThan_32Sx5S_1U_4_20_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_120_out1("SobelFilter_Add_2Ux1U_3U_4_120_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_137_out1("SobelFilter_Add_2Ux1U_3U_4_137_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_136_out1("SobelFilter_Add_2Ux1U_3U_4_136_out1")
    ,SobelFilter_Add_2Ux1U_2U_4_29_out1("SobelFilter_Add_2Ux1U_2U_4_29_out1")
    ,s_reg_35("s_reg_35")
    ,s_reg_26("s_reg_26")
    ,SobelFilter_Add_32Sx1U_32S_4_22_out1("SobelFilter_Add_32Sx1U_32S_4_22_out1")
    ,s_reg_24("s_reg_24")
    ,SobelFilter_And_1Ux1U_1U_4_21_out1("SobelFilter_And_1Ux1U_1U_4_21_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_11_out1("SobelFilter_LessThan_3Sx3S_1U_4_11_out1")
    ,s_reg_15("s_reg_15")
    ,SobelFilter_Add_4Ux2U_6S_4_99_out1("SobelFilter_Add_4Ux2U_6S_4_99_out1")
    ,SobelFilter_Add_5Ux2U_5U_4_122_out1("SobelFilter_Add_5Ux2U_5U_4_122_out1")
    ,SobelFilter_Add_4Ux2U_6S_4_91_out1("SobelFilter_Add_4Ux2U_6S_4_91_out1")
    ,SobelFilter_Add_5Ux3U_5U_4_121_out1("SobelFilter_Add_5Ux3U_5U_4_121_out1")
    ,SobelFilter_Add_4Ux2U_6S_4_89_out1("SobelFilter_Add_4Ux2U_6S_4_89_out1")
    ,s_reg_5("s_reg_5")
    ,SobelFilter_Add_4Ux2U_5U_4_31_out1("SobelFilter_Add_4Ux2U_5U_4_31_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_9_out1("SobelFilter_Mul_2Ux2U_4U_4_9_out1")
    ,s_reg_12("s_reg_12")
    ,s_reg_102("s_reg_102")
    ,SobelFilter_gen_busy_r_4_186_out1("SobelFilter_gen_busy_r_4_186_out1")
    ,SobelFilter_And_1Ux1U_1U_4_184_out1("SobelFilter_And_1Ux1U_1U_4_184_out1")
    ,SobelFilter_Not_1U_1U_1_3_out1("SobelFilter_Not_1U_1U_1_3_out1")
    ,o_result_m_req_m_trig_req("o_result_m_req_m_trig_req")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,SobelFilter_LessThan_5Sx5S_1U_4_18_out1("SobelFilter_LessThan_5Sx5S_1U_4_18_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_138_out1("SobelFilter_LessThan_3Sx3S_1U_4_138_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_172_out1("SobelFilter_LessThan_3Sx3S_1U_4_172_out1")
    ,s_reg_32("s_reg_32")
    ,SobelFilter_LessThan_3Sx3S_1U_4_166_out1("SobelFilter_LessThan_3Sx3S_1U_4_166_out1")
    ,SobelFilter_LessThan_5Sx5S_1U_4_64_out1("SobelFilter_LessThan_5Sx5S_1U_4_64_out1")
    ,SobelFilter_Add_33Ux33U_33U_4_15_out1("SobelFilter_Add_33Ux33U_33U_4_15_out1")
    ,SobelFilter_LessThan_2Ux2U_1U_4_33_out1("SobelFilter_LessThan_2Ux2U_1U_4_33_out1")
    ,SobelFilter_LessThan_2Ux2U_1U_4_36_out1("SobelFilter_LessThan_2Ux2U_1U_4_36_out1")
    ,global_state("global_state")
    ,Gaussian_value_DIN("Gaussian_value_DIN")
    ,Gaussian_value_CE("Gaussian_value_CE")
    ,Gaussian_value_RW("Gaussian_value_RW")
    ,Gaussian_value_in1("Gaussian_value_in1")
    ,Gaussian_value_out1("Gaussian_value_out1")
    ,SobelFilter_DivRem_4_17_in1("SobelFilter_DivRem_4_17_in1")
    ,s_reg_6("s_reg_6")
    ,SobelFilter_DivRem_4_17_out1("SobelFilter_DivRem_4_17_out1")
    ,stall0("stall0")
    ,buffer_DIN("buffer_DIN")
    ,buffer_CE("buffer_CE")
    ,buffer_RW("buffer_RW")
    ,buffer_in1("buffer_in1")
    ,buffer_out1("buffer_out1")
    ,expon_value_DIN("expon_value_DIN")
    ,expon_value_CE("expon_value_CE")
    ,expon_value_RW("expon_value_RW")
    ,expon_value_in1("expon_value_in1")
    ,expon_value_out1("expon_value_out1")
    ,sharpening_CE("sharpening_CE")
    ,sharpening_in1("sharpening_in1")
    ,sharpening_out1("sharpening_out1")
    ,val_value_DIN("val_value_DIN")
    ,val_value_CE("val_value_CE")
    ,val_value_RW("val_value_RW")
    ,val_value_in1("val_value_in1")
    ,val_value_out1("val_value_out1")
{
  val_value = new SobelFilter_RAM_27X24_2("val_value");
  val_value->DIN(val_value_DIN);
  val_value->CE(val_value_CE);
  val_value->RW(val_value_RW);
  val_value->in1(val_value_in1);
  val_value->out1(val_value_out1);
  val_value->clk(i_clk);

  sharpening = new SobelFilter_ROM_9X32_sharpening("sharpening");
  sharpening->CE(sharpening_CE);
  sharpening->in1(sharpening_in1);
  sharpening->out1(sharpening_out1);
  sharpening->clk(i_clk);

  expon_value = new SobelFilter_RAM_9X24_1("expon_value");
  expon_value->DIN(expon_value_DIN);
  expon_value->CE(expon_value_CE);
  expon_value->RW(expon_value_RW);
  expon_value->in1(expon_value_in1);
  expon_value->out1(expon_value_out1);
  expon_value->clk(i_clk);

  buffer = new SobelFilter_RAM_45X32_4("buffer");
  buffer->DIN(buffer_DIN);
  buffer->CE(buffer_CE);
  buffer->RW(buffer_RW);
  buffer->in1(buffer_in1);
  buffer->out1(buffer_out1);
  buffer->clk(i_clk);

  SobelFilter_DivRem_4_17 = new SobelFilter_DivRem_4("SobelFilter_DivRem_4_17");
  SobelFilter_DivRem_4_17->in1(SobelFilter_DivRem_4_17_in1);
  SobelFilter_DivRem_4_17->in2(s_reg_6);
  SobelFilter_DivRem_4_17->out1(SobelFilter_DivRem_4_17_out1);
  SobelFilter_DivRem_4_17->clk(i_clk);
  SobelFilter_DivRem_4_17->stall(stall0);

  Gaussian_value = new SobelFilter_RAM_9X24_1("Gaussian_value");
  Gaussian_value->DIN(Gaussian_value_DIN);
  Gaussian_value->CE(Gaussian_value_CE);
  Gaussian_value->RW(Gaussian_value_RW);
  Gaussian_value->in1(Gaussian_value_in1);
  Gaussian_value->out1(Gaussian_value_out1);
  Gaussian_value->clk(i_clk);

  SC_METHOD(drive_o_result_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_result_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_gen_busy_r_4_186_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_184_out1 );

  SC_METHOD(drive_s_reg_102);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_15);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_35);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_38);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_39);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_4_slice);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_41);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_44);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_45);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_47);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_48);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_5);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_52);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_61);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_69);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_92);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_96);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_expon_value_in1);
  sensitive << ( gs_ctrl_do_filter_h9fe );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_10_out1 );

  SC_METHOD(drive_expon_value_DIN);
  sensitive << ( gs_ctrl_do_filter_hba );

  SC_METHOD(drive_expon_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h9ff );

  SC_METHOD(drive_expon_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1ff );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_6_in2);
  sensitive << ( gs_ctrl_do_filter_h4000 );
  sensitive << ( s_reg_9 );
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_6);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_6_in2 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_9);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_8);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_10);
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_11);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_12);
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_12 );

  SC_METHOD(drive_SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice);
  sensitive << ( gs_ctrl_do_filter_he0000754007000 );
  sensitive << ( expon_value_out1 );
  sensitive << ( val_value_out1 );
  sensitive << ( s_reg_92 );
  sensitive << ( s_reg_96 );
  sensitive << ( s_reg_102 );

  SC_METHOD(drive_SobelFilter_Mul_33Sx32U_35S_4_13_in1);
  sensitive << ( gs_ctrl_do_filter_he00007540070000 );
  sensitive << ( Gaussian_value_out1 );
  sensitive << ( s_reg_6 );
  sensitive << ( s_reg_39 );

  SC_METHOD(SobelFilter_Mul_33Sx32U_35S_4_13);
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_13_in1 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_14);
  sensitive << ( s_reg_35 );

  SC_METHOD(drive_SobelFilter_Add_33Ux33U_33U_4_15_in2);
  sensitive << ( gs_ctrl_do_filter_h6e00037d0037000 );
  sensitive << ( s_reg_6 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_39 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_13_out1 );
  sensitive << ( s_reg_69 );

  SC_METHOD(drive_SobelFilter_Add_33Ux33U_33U_4_15_in1);
  sensitive << ( gs_ctrl_do_filter_h6e00037d00370000 );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_44 );
  sensitive << ( s_reg_69 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_6 );

  SC_METHOD(SobelFilter_Add_33Ux33U_33U_4_15);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_in1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_in2 );

  SC_METHOD(drive_Gaussian_value_in1);
  sensitive << ( gs_ctrl_do_filter_h82062000 );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_12_out1 );
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_Gaussian_value_DIN);
  sensitive << ( gs_ctrl_do_filter_h20000 );
  sensitive << ( SobelFilter_DivRem_4_17_out1 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_13_out1 );

  SC_METHOD(drive_Gaussian_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h82063000 );
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_14_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_18_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_36_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1 );

  SC_METHOD(drive_Gaussian_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h21000 );

  SC_METHOD(SobelFilter_Add_4Ux1U_5U_4_16);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_DivRem_4_17_in1);
  sensitive << ( Gaussian_value_out1 );

  SC_METHOD(SobelFilter_LessThan_5Sx5S_1U_4_18);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2);
  sensitive << ( gs_ctrl_do_filter_h100000a000080000 );
  sensitive << ( s_reg_69 );
  sensitive << ( s_reg_24 );

  SC_METHOD(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19);
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 );

  SC_METHOD(drive_SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h2000000 );

  SC_METHOD(SobelFilter_LessThan_32Sx5S_1U_4_20);
  sensitive << ( SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice );
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_21);
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1 );
  sensitive << ( SobelFilter_LessThan_32Sx5S_1U_4_20_out1 );

  SC_METHOD(SobelFilter_Add_32Sx1U_32S_4_22);
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_30);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_31);
  sensitive << ( s_reg_26 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_30_out1 );

  SC_METHOD(drive_val_value_in1);
  sensitive << ( gs_ctrl_do_filter_hab400000 );
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_31_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_5U_4_27_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_5U_4_32_out1 );
  sensitive << ( SobelFilter_Add_4Ux4U_5U_4_53_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_5U_4_59_out1 );
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_val_value_DIN);
  sensitive << ( gs_ctrl_do_filter_h1400000 );
  sensitive << ( i_rgb_data );
  sensitive << ( s_reg_6 );

  SC_METHOD(drive_val_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_hab500000 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_36_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1 );

  SC_METHOD(drive_val_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1500000 );

  SC_METHOD(SobelFilter_Add_5Ux5U_5U_4_27);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Add_2Ux1U_2U_4_28);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_2Ux1U_2U_4_29);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_Add_5Ux5U_5U_4_32);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_LessThan_2Ux2U_1U_4_33);
  sensitive << ( s_reg_26 );

  SC_METHOD(drive_SobelFilter_Sub_6Sx4U_6S_4_34_in1);
  sensitive << ( s_reg_15 );

  SC_METHOD(SobelFilter_Sub_6Sx4U_6S_4_34);
  sensitive << ( SobelFilter_Sub_6Sx4U_6S_4_34_in1 );
  sensitive << ( s_reg_69 );

  SC_METHOD(SobelFilter_LessThan_2Ux2U_1U_4_36);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_38);
  sensitive << ( SobelFilter_Sub_6Sx4U_6S_4_34_out1 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_39);
  sensitive << ( SobelFilter_Sub_6Sx4U_6S_4_34_out1 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_40);
  sensitive << ( SobelFilter_LessThan_32Sx5S_1U_4_20_out1 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_43);
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_Not_1U_1U_4_40_out1 );

  SC_METHOD(SobelFilter_Add_6Sx2U_6S_4_44);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_38_out1 );

  SC_METHOD(SobelFilter_Add_6Sx1U_6S_4_45);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_39_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_54);
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_15 );

  SC_METHOD(SobelFilter_Add_4Ux1U_5U_4_47);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_48);
  sensitive << ( s_reg_32 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_50);
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_Not_1U_1U_4_48_out1 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_51);
  sensitive << ( s_reg_69 );

  SC_METHOD(SobelFilter_Add_4Ux4U_5U_4_53);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_55);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_54_out1 );

  SC_METHOD(SobelFilter_Add_5Ux5U_5U_4_59);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_LessThan_5Sx5S_1U_4_64);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_6Ux4U_7S_4_69);
  sensitive << ( s_reg_52 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_70);
  sensitive << ( s_reg_52 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_71);
  sensitive << ( s_reg_52 );

  SC_METHOD(drive_buffer_in1);
  sensitive << ( gs_ctrl_do_filter_he00b03de58f00581 );
  sensitive << ( s_reg_35 );
  sensitive << ( SobelFilter_Add_6Ux4U_7S_4_69_out1 );
  sensitive << ( wire_s_reg_32 );
  sensitive << ( s_reg_32 );
  sensitive << ( SobelFilter_Add_6Ux5U_7S_4_76_out1 );
  sensitive << ( s_reg_45 );
  sensitive << ( SobelFilter_Add_6Sx1U_6S_4_78_out1 );
  sensitive << ( SobelFilter_Add_6Sx2U_6S_4_77_out1 );
  sensitive << ( wire_s_reg_33 );
  sensitive << ( SobelFilter_Add_6Ux4U_7S_4_81_out1 );
  sensitive << ( SobelFilter_Add_6Ux4U_7S_4_80_out1 );
  sensitive << ( SobelFilter_Add_6Ux5U_7S_4_84_out1 );
  sensitive << ( SobelFilter_Add_6Ux5U_7S_4_83_out1 );
  sensitive << ( SobelFilter_Add_5Ux3U_5U_4_115_out1 );
  sensitive << ( SobelFilter_Add_5Ux4U_6U_4_118_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_6U_4_128_out1 );
  sensitive << ( SobelFilter_Add_5Ux2U_5U_4_116_out1 );
  sensitive << ( SobelFilter_Add_5Ux4U_6U_4_119_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_6U_4_129_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_6S_4_99_out1 );
  sensitive << ( SobelFilter_Add_5Ux4U_6U_4_108_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_6U_4_117_out1 );

  SC_METHOD(drive_buffer_DIN);
  sensitive << ( gs_ctrl_do_filter_he00003de00f00001 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_38 );
  sensitive << ( wire_s_reg_32 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_39 );

  SC_METHOD(drive_buffer_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_he00b03dfd8f00581 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( wire_s_reg_32 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_45 );
  sensitive << ( s_reg_48 );
  sensitive << ( wire_s_reg_33 );
  sensitive << ( s_reg_33 );
  sensitive << ( SobelFilter_Not_1U_1U_4_79_out1 );
  sensitive << ( SobelFilter_Not_1U_1U_4_82_out1 );

  SC_METHOD(drive_buffer_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_he00003df80f00001 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( wire_s_reg_32 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_45 );
  sensitive << ( s_reg_48 );
  sensitive << ( wire_s_reg_33 );
  sensitive << ( s_reg_33 );
  sensitive << ( SobelFilter_Not_1U_1U_4_79_out1 );
  sensitive << ( SobelFilter_Not_1U_1U_4_82_out1 );

  SC_METHOD(SobelFilter_Add_6Sx2U_6S_4_72);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_70_out1 );

  SC_METHOD(SobelFilter_Add_6Sx1U_6S_4_73);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_71_out1 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_74);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_75);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_6Ux5U_7S_4_76);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_6Sx2U_6S_4_77);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_74_out1 );

  SC_METHOD(SobelFilter_Add_6Sx1U_6S_4_78);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_75_out1 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_79);
  sensitive << ( s_reg_41 );

  SC_METHOD(SobelFilter_Add_6Ux4U_7S_4_80);
  sensitive << ( s_reg_35 );

  SC_METHOD(SobelFilter_Add_6Ux4U_7S_4_81);
  sensitive << ( s_reg_35 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_82);
  sensitive << ( s_reg_47 );

  SC_METHOD(SobelFilter_Add_6Ux5U_7S_4_83);
  sensitive << ( s_reg_52 );

  SC_METHOD(SobelFilter_Add_6Ux5U_7S_4_84);
  sensitive << ( s_reg_61 );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_85_in2);
  sensitive << ( gs_ctrl_do_filter_h100000000000000 );
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_85);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_85_in2 );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_86_in2);
  sensitive << ( gs_ctrl_do_filter_h8000 );
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_86);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_86_in2 );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_87_in2);
  sensitive << ( gs_ctrl_do_filter_h800000000 );
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_87);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_87_in2 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_88);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_6S_4_89);
  sensitive << ( s_reg_26 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_88_out1 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_90);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_6S_4_91);
  sensitive << ( s_reg_26 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_90_out1 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_98);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_6S_4_99);
  sensitive << ( s_reg_26 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_98_out1 );

  SC_METHOD(SobelFilter_Add_5Ux3U_5U_4_100);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Add_5Ux2U_5U_4_101);
  sensitive << ( s_reg_12 );

  SC_METHOD(drive_sharpening_in1);
  sensitive << ( gs_ctrl_do_filter_h4000040 );
  sensitive << ( SobelFilter_Add_4Ux2U_6S_4_89_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_6S_4_91_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_6S_4_99_out1 );

  SC_METHOD(drive_sharpening_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h800004000040 );

  SC_METHOD(SobelFilter_Add_5Ux4U_6U_4_108);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Add_5Ux3U_5U_4_115);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_5Ux2U_5U_4_116);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_5Ux5U_6U_4_117);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Add_5Ux4U_6U_4_118);
  sensitive << ( s_reg_35 );

  SC_METHOD(SobelFilter_Add_5Ux4U_6U_4_119);
  sensitive << ( s_reg_35 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_120);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_Add_5Ux3U_5U_4_121);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Add_5Ux2U_5U_4_122);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_GreaterThan_32Sx9S_1U_4_133);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_out1 );

  SC_METHOD(drive_SobelFilter_N_Mux_16_2_2_4_126_ctrl1);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_out1 );

  SC_METHOD(SobelFilter_N_Mux_16_2_2_4_126);
  sensitive << ( SobelFilter_N_Mux_16_2_2_4_126_ctrl1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_out1 );

  SC_METHOD(SobelFilter_N_Mux_16_2_3_4_127);
  sensitive << ( SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 );
  sensitive << ( SobelFilter_N_Mux_16_2_2_4_126_out1 );

  SC_METHOD(SobelFilter_Add_5Ux5U_6U_4_128);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_Add_5Ux5U_6U_4_129);
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_130);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_N_Mux_24_2_0_4_134);
  sensitive << ( SobelFilter_N_Mux_16_2_2_4_126_ctrl1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_out1 );

  SC_METHOD(SobelFilter_N_Mux_24_2_1_4_135);
  sensitive << ( SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 );
  sensitive << ( SobelFilter_N_Mux_24_2_0_4_134_out1 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_136);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_137);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_138);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_N_Mux_32_2_4_4_142);
  sensitive << ( SobelFilter_N_Mux_16_2_2_4_126_ctrl1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_15_out1 );

  SC_METHOD(SobelFilter_N_Mux_32_2_5_4_143);
  sensitive << ( SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 );
  sensitive << ( SobelFilter_N_Mux_32_2_4_4_142_out1 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_154);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_160);
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_166);
  sensitive << ( s_reg_26 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_172);
  sensitive << ( s_reg_26 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_14_out1 );
  sensitive << ( s_reg_15 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_18_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_36_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_166_out1 );
  sensitive << ( s_reg_32 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_172_out1 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_138_out1 );

  SC_METHOD(drive_gs_ctrl_do_filter_h9fe);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hba);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h9ff);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1ff);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h4000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_he0000754007000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_he00007540070000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h6e00037d0037000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h6e00037d00370000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h82062000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h20000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h82063000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h21000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h100000a000080000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hab400000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1400000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hab500000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1500000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_he00b03de58f00581);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_he00003de00f00001);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_he00b03dfd8f00581);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_he00003df80f00001);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h100000000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h800000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h4000040);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h800004000040);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( SobelFilter_gen_busy_r_4_186_out1 );

  SC_METHOD(SobelFilter_gen_busy_r_4_186_p7);
  sensitive << ( 
  SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( SobelFilter_gen_busy_r_4_186_gdiv );
  sensitive << ( SobelFilter_gen_busy_r_4_186_gnew_req );

  SC_METHOD(SobelFilter_gen_busy_r_4_186_p6);
  sensitive << ( SobelFilter_gen_busy_r_4_186_gdiv );

  SC_METHOD(SobelFilter_gen_busy_r_4_186_p5);
  sensitive << ( SobelFilter_gen_busy_r_4_186_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(SobelFilter_gen_busy_r_4_186_p4);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_N_Muxb_1_2_6_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_result_vld);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( SobelFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_result_m_unacked_req );

  SC_METHOD(drive_o_result_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_184);
  sensitive << ( o_result_vld );
  sensitive << ( o_result_busy );

  SC_METHOD(SobelFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_result_m_req_m_prev_trig_req );
  sensitive << ( o_result_m_req_m_trig_req );

  SC_METHOD(drive_o_result_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_1_3);
  sensitive << ( o_result_m_req_m_trig_req );

}
// resource: mux_32bx5i1c
// resource: regr_en_32
void SobelFilter::drive_o_result_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: 
      if ( !( (SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read()||
           SobelFilter_LessThan_2Ux2U_1U_4_36_out1.read()) ) ) {
        o_result_data = 0ULL;
      } 
      break;
    case 28ULL: 
      o_result_data = (sc_uint<32> ) (SobelFilter_Add_33Ux33U_33U_4_15_out1
                      .read().range(32,12));
      break;
    case 31ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        o_result_data = (sc_uint<32> ) ((sc_uint<21> )o_result_data.read());
      } 
      break;
    case 42ULL: case 65ULL: case 88ULL: 
      o_result_data = 0ULL;
      break;
    case 55ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_166_out1.read() ) {
        o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                        .read();
      } else {
        if ( s_reg_32.read() ) {
          /* state73 */
          o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                          .read();
        } 
      }
      break;
    case 58ULL: case 81ULL: case 101ULL: 
      o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1.read()
      ;
      break;
    case 78ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_172_out1.read() ) {
        o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                        .read();
      } else {
        if ( s_reg_32.read() ) {
          /* state101 */
          o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                          .read();
        } 
      }
      break;
    case 98ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_138_out1.read() ) {
        o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                        .read();
      } else {
        if ( s_reg_32.read() ) {
          /* state126 */
          o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                          .read();
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_1
void SobelFilter::drive_i_rgb_m_busy_req_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_18_out1.read() );
      else {
        i_rgb_m_busy_req_0 = 1ULL;
      }
      break;
    case 19ULL: case 37ULL: case 60ULL: case 83ULL: case 103ULL: 
      i_rgb_m_busy_req_0 = 0ULL;
      break;
    case 20ULL: 
      i_rgb_m_busy_req_0 = 1ULL;
      break;
    case 25ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read() ) {
        i_rgb_m_busy_req_0 = 0ULL;
      } else {
        if ( SobelFilter_LessThan_2Ux2U_1U_4_36_out1.read() ) {
          i_rgb_m_busy_req_0 = 0ULL;
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i1c
// resource: regr_en_1
void SobelFilter::drive_o_result_m_req_m_trig_req(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_18_out1.read() );
      else {
        o_result_m_req_m_trig_req = 0ULL;
      }
      break;
    case 58ULL: case 81ULL: case 101ULL: 
      o_result_m_req_m_trig_req = (sc_uint<1> ) (SobelFilter_Not_1U_1U_1_3_out1
                                  .read());
      break;
    }
    break;
  }
}
// resource: mux_1bx3i1c
void SobelFilter::drive_stall0(){
  switch( (sc_uint<7>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 20ULL: 
    stall0 = (sc_uint<1> )SobelFilter_gen_busy_r_4_186_out1.read();
    break;
  case 59ULL: case 82ULL: case 102ULL: 
    stall0 = SobelFilter_And_1Ux1U_1U_4_184_out1.read();
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_102(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 52ULL: case 73ULL: case 92ULL: 
      s_reg_102 = buffer_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_5bx10i1c
// resource: regr_en_5
void SobelFilter::drive_s_reg_12(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 10ULL: 
      s_reg_12 = (sc_uint<5> ) (SobelFilter_Mul_2Ux2U_4U_4_9_out1.read());
      break;
    case 11ULL: 
      s_reg_12 = (sc_uint<5> ) ((sc_uint<4> )SobelFilter_Mul_2Ux2U_4U_4_9_out1
                 .read());
      break;
    case 21ULL: case 23ULL: 
      s_reg_12 = SobelFilter_Add_4Ux2U_5U_4_31_out1.read();
      break;
    case 25ULL: 
      s_reg_12 = 0ULL;
      break;
    case 31ULL: 
      s_reg_12 = (sc_uint<5> )s_reg_5.read();
      break;
    case 43ULL: case 46ULL: 
      s_reg_12 = (sc_uint<5> )SobelFilter_Add_4Ux2U_6S_4_89_out1.read();
      break;
    case 50ULL: 
      s_reg_12 = (sc_uint<5> ) (SobelFilter_Add_5Ux3U_5U_4_121_out1.read());
      break;
    case 66ULL: case 69ULL: 
      s_reg_12 = (sc_uint<5> )SobelFilter_Add_4Ux2U_6S_4_91_out1.read();
      break;
    case 73ULL: 
      s_reg_12 = (sc_uint<5> ) (SobelFilter_Add_5Ux2U_5U_4_122_out1.read());
      break;
    case 89ULL: case 93ULL: 
      s_reg_12 = (sc_uint<5> )SobelFilter_Add_4Ux2U_6S_4_99_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_15(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 12ULL: 
      s_reg_15 = SobelFilter_LessThan_3Sx3S_1U_4_11_out1.read();
      break;
    case 19ULL: case 37ULL: case 60ULL: case 83ULL: case 103ULL: 
      s_reg_15 = SobelFilter_And_1Ux1U_1U_4_21_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_24(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 19ULL: case 37ULL: case 60ULL: case 83ULL: case 103ULL: 
      s_reg_24 = (sc_uint<32> ) (SobelFilter_Add_32Sx1U_32S_4_22_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_3bx7i1c
// resource: regr_en_3
void SobelFilter::drive_s_reg_26(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 9ULL: case 14ULL: case 19ULL: case 37ULL: case 42ULL: case 56ULL: case 
    60ULL: case 65ULL: case 79ULL: case 83ULL: case 88ULL: case 99ULL: case 
    103ULL: 
      s_reg_26 = 0ULL;
      break;
    case 13ULL: 
      s_reg_26 = (sc_uint<3> )s_reg_35.read();
      break;
    case 23ULL: 
      s_reg_26 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_2U_4_29_out1.read());
      break;
    case 25ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read() ) {
        s_reg_26 = (sc_uint<3> ) ((sc_uint<2> )s_reg_26.read());
      } else {
        s_reg_26 = 0ULL;
      }
      break;
    case 52ULL: 
      s_reg_26 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_136_out1.read());
      break;
    case 75ULL: 
      s_reg_26 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_137_out1.read());
      break;
    case 95ULL: 
      s_reg_26 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_120_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_1bx4i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_32(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: 
      s_reg_32 = SobelFilter_LessThan_32Sx5S_1U_4_20_out1.read();
      break;
    case 54ULL: 
      s_reg_32 = SobelFilter_LessThan_3Sx3S_1U_4_154_out1.read();
      break;
    case 77ULL: 
      s_reg_32 = SobelFilter_LessThan_3Sx3S_1U_4_160_out1.read();
      break;
    case 97ULL: 
      s_reg_32 = SobelFilter_LessThan_3Sx3S_1U_4_130_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_32(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: 
      wire_s_reg_32 = SobelFilter_LessThan_32Sx5S_1U_4_20_out1.read();
      break;
    case 31ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        /* state43 */
        wire_s_reg_32 = s_reg_32.read();
      } 
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_33(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: 
      s_reg_33 = SobelFilter_And_1Ux1U_1U_4_43_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_33(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: 
      wire_s_reg_33 = SobelFilter_And_1Ux1U_1U_4_43_out1.read();
      break;
    case 31ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        wire_s_reg_33 = s_reg_33.read();
      } 
      break;
    }
    break;
  }
}
// resource: mux_6bx6i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_35(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 10ULL: 
      s_reg_35 = (sc_uint<6> ) ((sc_int<3> )SobelFilter_Add_2Ux1U_3U_4_8_out1
                 .read());
      break;
    case 25ULL: 
      if ( (s_reg_15.read() && !SobelFilter_LessThan_32Sx5S_1U_4_20_out1.read())
       ) {
        s_reg_35 = (sc_uint<6> ) (SobelFilter_Add_6Sx1U_6S_4_45_out1.read());
      } else {
        s_reg_35 = (sc_uint<6> ) (SobelFilter_Add_6Sx2U_6S_4_44_out1.read());
      }
      break;
    case 27ULL: 
      if ( s_reg_32.read() ) {
        s_reg_35 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_51_out1.read());
      } 
      break;
    case 45ULL: 
      s_reg_35 = (sc_uint<6> ) (SobelFilter_Add_5Ux3U_5U_4_100_out1.read());
      break;
    case 68ULL: 
      s_reg_35 = (sc_uint<6> ) (SobelFilter_Add_5Ux2U_5U_4_101_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_21bx4i1c
// resource: regr_en_21
void SobelFilter::drive_s_reg_38(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 12ULL: 
      s_reg_38 = (sc_uint<21> ) (((/*imp*/sc_uint<14> ) 
                 SobelFilter_Mul_33Sx32U_35S_4_13_out1.read().range(33,20)));
      break;
    case 25ULL: 
      s_reg_38 = 0ULL;
      break;
    case 30ULL: 
      s_reg_38 = (sc_uint<21> ) (SobelFilter_Add_33Ux33U_33U_4_15_out1.read()
                 .range(32,12));
      break;
    case 53ULL: case 76ULL: case 96ULL: 
      s_reg_38 = (sc_uint<21> ) (SobelFilter_N_Mux_16_2_3_4_127_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_32bx3i1c
// resource: regr_en_32
void SobelFilter::drive_s_reg_39(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: 
      s_reg_39 = 0ULL;
      break;
    case 31ULL: 
      s_reg_39 = (sc_uint<32> ) (SobelFilter_Add_33Ux33U_33U_4_15_out1.read()
                 .range(32,12));
      break;
    case 48ULL: case 71ULL: case 91ULL: 
      s_reg_39 = sharpening_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_2bx2i1c
// resource: regr_en_sc_2
void SobelFilter::drive_s_reg_4_slice(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_4_slice = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 14ULL: case 56ULL: case 79ULL: case 99ULL: 
        s_reg_4_slice = (sc_uint<2> )s_reg_9.read();
        break;
      case 19ULL: case 37ULL: case 42ULL: case 60ULL: case 65ULL: case 83ULL: 
      case 88ULL: case 103ULL: 
        s_reg_4_slice = 0ULL;
        break;
      case 25ULL: 
        if ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read() );
        else {
          s_reg_4_slice = (sc_uint<2> )s_reg_9.read();
        }
        break;
      }
      break;
    }
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_41(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 26ULL: 
      s_reg_41 = SobelFilter_Or_1Ux1U_1U_4_54_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_33bx5i1c
// resource: regr_en_33
void SobelFilter::drive_s_reg_44(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 26ULL: case 28ULL: case 30ULL: 
      s_reg_44 = (sc_uint<33> )SobelFilter_Mul_33Sx32U_35S_4_13_out1.read();
      break;
    case 42ULL: case 65ULL: case 88ULL: 
      s_reg_44 = 0ULL;
      break;
    case 53ULL: case 77ULL: case 97ULL: 
      s_reg_44 = (sc_uint<33> ) ((sc_int<32> )
                 SobelFilter_Add_33Ux33U_33U_4_15_out1.read());
      break;
    case 55ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_166_out1.read() ) {
        s_reg_44 = (sc_uint<33> ) ((sc_int<32> )s_reg_44.read());
      } 
      break;
    case 56ULL: case 79ULL: case 99ULL: 
      s_reg_44 = (sc_uint<33> ) ((sc_int<32> )s_reg_44.read());
      break;
    case 57ULL: case 80ULL: case 100ULL: 
      s_reg_44 = SobelFilter_Add_33Ux33U_33U_4_15_out1.read();
      break;
    case 78ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_172_out1.read() ) {
        s_reg_44 = (sc_uint<33> ) ((sc_int<32> )s_reg_44.read());
      } 
      break;
    case 98ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_138_out1.read() ) {
        s_reg_44 = (sc_uint<33> ) ((sc_int<32> )s_reg_44.read());
      } 
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_45(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 26ULL: 
      s_reg_45 = SobelFilter_And_1Ux1U_1U_4_50_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_47(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 27ULL: 
      s_reg_47 = SobelFilter_Or_1Ux1U_1U_4_54_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_s_reg_48(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 27ULL: 
      s_reg_48 = SobelFilter_Not_1U_1U_4_55_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_6bx7i0c
// resource: regr_en_sc_6
void SobelFilter::drive_s_reg_5(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 13ULL: 
        if ( !( (SobelFilter_LessThan_3Sx3S_1U_4_14_out1.read()||s_reg_15.read()
             ) ) ) {
          s_reg_5 = (sc_uint<6> ) ((sc_int<5> )s_reg_5.read());
        } 
        break;
      case 17ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_int<5> )SobelFilter_Add_4Ux1U_5U_4_16_out1
                  .read());
        break;
      case 18ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_int<5> )s_reg_5.read());
        break;
      case 26ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_int<5> )SobelFilter_Add_4Ux1U_5U_4_47_out1
                  .read());
        break;
      case 31ULL: 
        if ( s_reg_32.read() ) {
          s_reg_5 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_51_out1.read());
        } else {
          s_reg_5 = (sc_uint<6> ) (SobelFilter_Sub_6Sx4U_6S_4_34_out1.read());
        }
        break;
      case 44ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_4Ux2U_6S_4_89_out1
                  .read());
        break;
      case 67ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_4Ux2U_6S_4_91_out1
                  .read());
        break;
      }
      break;
    }
  }
}
// resource: mux_6bx3i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_52(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 29ULL: 
      s_reg_52 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_51_out1.read());
      break;
    case 30ULL: 
      if ( !s_reg_32.read() ) {
        s_reg_52 = (sc_uint<6> ) (SobelFilter_Sub_6Sx4U_6S_4_34_out1.read());
      } 
      break;
    case 33ULL: case 38ULL: case 61ULL: case 84ULL: 
      s_reg_52 = (sc_uint<6> ) (SobelFilter_Add_6Sx2U_6S_4_72_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_24bx4i0c
// resource: regr_en_sc_24
void SobelFilter::drive_s_reg_6(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 13ULL: 
        s_reg_6 = (sc_uint<24> )SobelFilter_Add_33Ux33U_33U_4_15_out1.read();
        break;
      case 20ULL: 
        s_reg_6 = i_rgb_data.read();
        break;
      case 26ULL: 
        s_reg_6 = Gaussian_value_out1.read();
        break;
      case 54ULL: case 77ULL: case 97ULL: 
        s_reg_6 = (sc_uint<24> ) (SobelFilter_N_Mux_24_2_1_4_135_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: regr_en_6
void SobelFilter::drive_s_reg_61(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 33ULL: case 38ULL: case 61ULL: case 84ULL: 
      s_reg_61 = (sc_uint<6> ) (SobelFilter_Add_6Sx1U_6S_4_73_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_32bx4i1c
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_69(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_69 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 37ULL: case 83ULL: case 103ULL: 
        s_reg_69 = s_reg_24.read();
        break;
      case 42ULL: case 60ULL: case 65ULL: case 88ULL: 
        s_reg_69 = 0ULL;
        break;
      case 54ULL: case 76ULL: case 96ULL: 
        s_reg_69 = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1.read();
        break;
      case 55ULL: 
        if ( SobelFilter_LessThan_3Sx3S_1U_4_166_out1.read() );
        else {
          if ( s_reg_32.read() );
          else {
            /* state75 */
            s_reg_69 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_5_4_143_out1
                       .read());
          }
        }
        break;
      case 78ULL: 
        if ( SobelFilter_LessThan_3Sx3S_1U_4_172_out1.read() );
        else {
          if ( s_reg_32.read() );
          else {
            /* state103 */
            s_reg_69 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_5_4_143_out1
                       .read());
          }
        }
        break;
      case 98ULL: 
        if ( SobelFilter_LessThan_3Sx3S_1U_4_138_out1.read() );
        else {
          if ( s_reg_32.read() );
          else {
            /* state128 */
            s_reg_69 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_5_4_143_out1
                       .read());
          }
        }
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx5i0c
// resource: regr_en_3
void SobelFilter::drive_s_reg_9(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 9ULL: case 14ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_6_out1.read());
      break;
    case 23ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_2U_4_28_out1.read());
      break;
    case 42ULL: case 56ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_85_out1.read());
      break;
    case 65ULL: case 79ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_86_out1.read());
      break;
    case 88ULL: case 99ULL: 
      s_reg_9 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_87_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_92(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 49ULL: case 75ULL: case 93ULL: 
      s_reg_92 = buffer_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_96(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 50ULL: case 72ULL: case 95ULL: 
      s_reg_96 = buffer_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_4bx10i9c
void SobelFilter::drive_expon_value_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h9fe.read()) ) {
  default:
    expon_value_in1 = 0ULL;
    break;
  case 1ULL: 
    expon_value_in1 = 1ULL;
    break;
  case 2ULL: 
    expon_value_in1 = 2ULL;
    break;
  case 3ULL: 
    expon_value_in1 = 3ULL;
    break;
  case 4ULL: 
    expon_value_in1 = 4ULL;
    break;
  case 5ULL: 
    expon_value_in1 = 5ULL;
    break;
  case 6ULL: 
    expon_value_in1 = 6ULL;
    break;
  case 7ULL: 
    expon_value_in1 = 7ULL;
    break;
  case 8ULL: 
    expon_value_in1 = 8ULL;
    break;
  case 9ULL: 
    expon_value_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_10_out1.read();
    break;
  }
}
// resource: mux_24bx3i3c
void SobelFilter::drive_expon_value_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_hba.read()) ) {
  default:
    expon_value_DIN = 219793ULL;
    break;
  case 1ULL: 
    expon_value_DIN = 480073ULL;
    break;
  case 2ULL: 
    expon_value_DIN = 1048576ULL;
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_expon_value_CE(){
  if ( stall0.read() ) {
    expon_value_CE = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h9ff.read() ) {
      expon_value_CE = 1ULL;
    } else {
      expon_value_CE = 0ULL;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_expon_value_RW(){
  if ( stall0.read() ) {
    expon_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h1ff.read() ) {
      expon_value_RW = 1ULL;
    } else {
      expon_value_RW = 0ULL;
    }
  }
}
// resource: mux_2bx2i0c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_6_in2(){
  if ( gs_ctrl_do_filter_h4000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_6_in2 = (sc_uint<2> )s_reg_9.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_6_in2 = s_reg_4_slice.read();
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_6
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_6(){
  SobelFilter_Add_2Ux1U_3U_4_6_out1 = (/*cliff*/sc_uint<32>)(
                                      SobelFilter_Add_2Ux1U_3U_4_6_in2.read() + 
                                      1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_9
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_9(){
  SobelFilter_Mul_2Ux2U_4U_4_9_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_8
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_8(){
  SobelFilter_Add_2Ux1U_3U_4_8_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                      s_reg_26.read() + 1ULL);
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_10
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_10(){
  SobelFilter_Add_4Ux2U_5S_4_10_out1 = ((sc_uint<4> )s_reg_12.read() + (
                                       sc_uint<2> )s_reg_26.read());
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_11
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_11(){
  SobelFilter_LessThan_3Sx3S_1U_4_11_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                            s_reg_9.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_12
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_12(){
  SobelFilter_Add_4Ux2U_5S_4_12_out1 = ((sc_uint<4> )s_reg_12.read() + (
                                       sc_uint<2> )s_reg_26.read());
}
// resource: mux_32bx5i0c
void SobelFilter::drive_SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_he0000754007000.read()) ) {
  default:
    SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = (sc_int<32> )expon_value_out1
                                                 .read();
    break;
  case 1ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = (sc_int<32> )val_value_out1
                                                 .read();
    break;
  case 2ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = (sc_int<32> ) (s_reg_92.read())
    ;
    break;
  case 3ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = (sc_int<32> ) (s_reg_96.read())
    ;
    break;
  case 4ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = (sc_int<32> ) (s_reg_102.read()
                                                 );
    break;
  }
}
// resource: mux_32bx4i1c
void SobelFilter::drive_SobelFilter_Mul_33Sx32U_35S_4_13_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_he00007540070000.read()) ) {
  default:
    SobelFilter_Mul_33Sx32U_35S_4_13_in1 = 1019ULL;
    break;
  case 1ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in1 = (sc_uint<32> ) (Gaussian_value_out1
                                           .read());
    break;
  case 2ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in1 = (sc_uint<32> ) (s_reg_6.read());
    break;
  case 3ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_13_in1 = s_reg_39.read();
    break;
  }
}
// resource: SobelFilter_Mul_33Sx32U_35S_4  instance: SobelFilter_Mul_33Sx32U_35S_4_13
void SobelFilter::SobelFilter_Mul_33Sx32U_35S_4_13(){
  SobelFilter_Mul_33Sx32U_35S_4_13_out1 = ( (sc_int<33> )(sc_bv<33>)((sc_bv<1>)(
                                          0ULL), 
                                          (sc_bv<32>)(SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice
                                          .read())) ) * 
                                          SobelFilter_Mul_33Sx32U_35S_4_13_in1
                                          .read();
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_14
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_14(){
  SobelFilter_LessThan_3Sx3S_1U_4_14_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                            s_reg_35.read() < (sc_int<3> )3LL);
}
// resource: mux_33bx7i0c
void SobelFilter::drive_SobelFilter_Add_33Ux33U_33U_4_15_in2(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h6e00037d0037000.read()) ) {
  default:
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = (sc_uint<33> ) (s_reg_6.read());
    break;
  case 1ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = ( (sc_uint<33> )(sc_bv<33>)(
                                           (sc_bv<21>)((sc_uint<21> )
                                           o_result_data.read()), 
                                           (sc_bv<12>)(0ULL)) );
    break;
  case 2ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = ( (sc_uint<33> )(sc_bv<33>)(
                                           (sc_bv<21>)(s_reg_38.read()), 
                                           (sc_bv<12>)(0ULL)) );
    break;
  case 3ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = ( (sc_uint<33> )(sc_bv<33>)(
                                           (sc_bv<21>)((sc_uint<21> )s_reg_39
                                           .read()), 
                                           (sc_bv<12>)(0ULL)) );
    break;
  case 4ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = (sc_uint<33> ) ((sc_uint<32> )
                                           SobelFilter_Mul_33Sx32U_35S_4_13_out1
                                           .read());
    break;
  case 5ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = (sc_uint<33> ) ((sc_int<32> )(( (
                                           sc_uint<32> )(sc_bv<32>)((sc_bv<16>)(
                                           (sc_uint<16> )s_reg_38.read()), 
                                           (sc_bv<16>)(0ULL)) )));
    break;
  case 6ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in2 = (sc_uint<33> ) ((sc_int<32> )s_reg_69
                                           .read());
    break;
  }
}
// resource: mux_33bx6i0c
void SobelFilter::drive_SobelFilter_Add_33Ux33U_33U_4_15_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h6e00037d00370000.read()) ) {
  default:
    SobelFilter_Add_33Ux33U_33U_4_15_in1 = (sc_uint<33> ) ((sc_uint<14> )
                                           s_reg_38.read());
    break;
  case 1ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in1 = s_reg_44.read();
    break;
  case 2ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in1 = (sc_uint<33> ) ((sc_int<32> )s_reg_44
                                           .read());
    break;
  case 3ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in1 = (sc_uint<33> ) ((sc_int<32> )s_reg_69
                                           .read());
    break;
  case 4ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in1 = (sc_uint<33> ) ((sc_int<32> )
                                           o_result_data.read());
    break;
  case 5ULL: 
    SobelFilter_Add_33Ux33U_33U_4_15_in1 = (sc_uint<33> ) ((sc_int<32> )(( (
                                           sc_uint<32> )(sc_bv<32>)((sc_bv<24>)(
                                           (sc_uint<24> )s_reg_6.read()), 
                                           (sc_bv<8>)(0ULL)) )));
    break;
  }
}
// resource: SobelFilter_Add_33Ux33U_33U_4  instance: SobelFilter_Add_33Ux33U_33U_4_15
void SobelFilter::SobelFilter_Add_33Ux33U_33U_4_15(){
  SobelFilter_Add_33Ux33U_33U_4_15_out1 = (SobelFilter_Add_33Ux33U_33U_4_15_in2
                                          .read() + 
                                          SobelFilter_Add_33Ux33U_33U_4_15_in1
                                          .read());
}
// resource: mux_4bx3i1c
void SobelFilter::drive_Gaussian_value_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h82062000.read()) ) {
  default:
    Gaussian_value_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_12_out1.read();
    break;
  case 1ULL: 
    Gaussian_value_in1 = (sc_uint<4> )s_reg_5.read();
    break;
  case 2ULL: 
    Gaussian_value_in1 = 0ULL;
    break;
  }
}
// resource: mux_24bx2i0c
void SobelFilter::drive_Gaussian_value_DIN(){
  if ( gs_ctrl_do_filter_h20000.read() ) {
    Gaussian_value_DIN = (sc_uint<24> ) (SobelFilter_DivRem_4_17_out1.read()
                         .range(36,13));
  } else {
    Gaussian_value_DIN = (sc_uint<24> ) (((/*imp*/sc_uint<14> ) 
                         SobelFilter_Mul_33Sx32U_35S_4_13_out1.read().range(33,
                         20)));
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_Gaussian_value_CE(){
  if ( stall0.read() ) {
    Gaussian_value_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h82063000.read()) ) {
    default:
      Gaussian_value_CE = 0ULL;
      break;
    case 1ULL: 
      Gaussian_value_CE = 1ULL;
      break;
    case 2ULL: 
      if ( !( (SobelFilter_LessThan_3Sx3S_1U_4_14_out1.read()||s_reg_15.read())
            ) ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_18_out1.read() ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 4ULL: 
      if ( !( (SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read()||
           SobelFilter_LessThan_2Ux2U_1U_4_36_out1.read()) ) ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 5ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_Gaussian_value_RW(){
  if ( stall0.read() ) {
    Gaussian_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h21000.read() ) {
      Gaussian_value_RW = 1ULL;
    } else {
      Gaussian_value_RW = 0ULL;
    }
  }
}
// resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_16
void SobelFilter::SobelFilter_Add_4Ux1U_5U_4_16(){
  SobelFilter_Add_4Ux1U_5U_4_16_out1 = (/*cliff*/sc_uint<32>)((sc_uint<4> )
                                       s_reg_5.read() + 1ULL);
}
void SobelFilter::drive_SobelFilter_DivRem_4_17_in1(){
  SobelFilter_DivRem_4_17_in1 = ( (sc_uint<49> )(sc_bv<49>)((sc_bv<24>)(
                                Gaussian_value_out1.read()), 
                                (sc_bv<25>)(0ULL)) );
}
// resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_18
void SobelFilter::SobelFilter_LessThan_5Sx5S_1U_4_18(){
  SobelFilter_LessThan_5Sx5S_1U_4_18_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )
                                            s_reg_5.read() < (sc_int<5> )9LL);
}
// resource: mux_32bx3i1c
void SobelFilter::drive_SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h100000a000080000.read()) ) {
  default:
    SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 = (sc_int<32> ) (s_reg_69
                                                   .read());
    break;
  case 1ULL: 
    SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 = (sc_int<32> ) (s_reg_24
                                                   .read());
    break;
  case 2ULL: 
    SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 = 0LL;
    break;
  }
}
// resource: SobelFilter_GreaterThanEQ_32Sx4S_1U_4  instance: SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19
void SobelFilter::SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19(){
  SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1 = (/*imp*/sc_uint<1>)(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2
                                                  .read() >= (sc_int<4> )5LL);
}
// resource: mux_4bx2i2c
void SobelFilter::drive_SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice(){
  if ( gs_ctrl_do_filter_h2000000.read() ) {
    SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice = 5LL;
  } else {
    SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice = -6LL;
  }
}
// resource: SobelFilter_LessThan_32Sx5S_1U_4  instance: SobelFilter_LessThan_32Sx5S_1U_4_20
void SobelFilter::SobelFilter_LessThan_32Sx5S_1U_4_20(){
  SobelFilter_LessThan_32Sx5S_1U_4_20_out1 = (/*imp*/sc_uint<1>)(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2
                                             .read() < ((/*imp*/sc_int<5> )(( (
                                             sc_int<5> )(sc_bv<5>)((sc_bv<1>)(
                                             0ULL), 
                                             (sc_bv<4>)((sc_int<4> )SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice
                                             .read())) ))));
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_21
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_21(){
  SobelFilter_And_1Ux1U_1U_4_21_out1 = SobelFilter_LessThan_32Sx5S_1U_4_20_out1
                                       .read() & SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1
                                       .read();
}
// resource: SobelFilter_Add_32Sx1U_32S_4  instance: SobelFilter_Add_32Sx1U_32S_4_22
void SobelFilter::SobelFilter_Add_32Sx1U_32S_4_22(){
  SobelFilter_Add_32Sx1U_32S_4_22_out1 = (/*cliff*/sc_int<32>)(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2
                                         .read() + 1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_30
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_30(){
  SobelFilter_Mul_2Ux2U_4U_4_30_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_31
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_31(){
  SobelFilter_Add_4Ux2U_5U_4_31_out1 = (SobelFilter_Mul_2Ux2U_4U_4_30_out1
                                       .read() + (sc_uint<2> )s_reg_26.read());
}
// resource: mux_5bx7i1c
void SobelFilter::drive_val_value_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_hab400000.read()) ) {
  default:
    val_value_in1 = SobelFilter_Add_4Ux2U_5U_4_31_out1.read();
    break;
  case 1ULL: 
    val_value_in1 = SobelFilter_Add_5Ux5U_5U_4_27_out1.read();
    break;
  case 2ULL: 
    val_value_in1 = SobelFilter_Add_5Ux5U_5U_4_32_out1.read();
    break;
  case 3ULL: 
    val_value_in1 = 0ULL;
    break;
  case 4ULL: 
    val_value_in1 = SobelFilter_Add_4Ux4U_5U_4_53_out1.read();
    break;
  case 5ULL: 
    val_value_in1 = SobelFilter_Add_5Ux5U_5U_4_59_out1.read();
    break;
  case 6ULL: 
    val_value_in1 = (sc_uint<5> ) ((sc_uint<4> )s_reg_5.read());
    break;
  }
}
// resource: mux_24bx3i0c
void SobelFilter::drive_val_value_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h1400000.read()) ) {
  default:
    val_value_DIN = (sc_uint<24> ) (( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)((
                    sc_uint<8> )i_rgb_data.read()), 
                    (sc_bv<12>)(0ULL)) ));
    break;
  case 1ULL: 
    val_value_DIN = (sc_uint<24> ) (( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)(
                    s_reg_6.read().range(15,8)), 
                    (sc_bv<12>)(0ULL)) ));
    break;
  case 2ULL: 
    val_value_DIN = (sc_uint<24> ) (( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)(
                    s_reg_6.read().range(23,16)), 
                    (sc_bv<12>)(0ULL)) ));
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_val_value_CE(){
  if ( stall0.read() ) {
    val_value_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_hab500000.read()) ) {
    default:
      val_value_CE = 0ULL;
      break;
    case 1ULL: 
      val_value_CE = 1ULL;
      break;
    case 2ULL: 
      if ( !( (SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read()||
           SobelFilter_LessThan_2Ux2U_1U_4_36_out1.read()) ) ) {
        val_value_CE = 1ULL;
      } else {
        val_value_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        val_value_CE = 1ULL;
      } else {
        val_value_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_val_value_RW(){
  if ( stall0.read() ) {
    val_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h1500000.read() ) {
      val_value_RW = 1ULL;
    } else {
      val_value_RW = 0ULL;
    }
  }
}
// resource: SobelFilter_Add_5Ux5U_5U_4  instance: SobelFilter_Add_5Ux5U_5U_4_27
void SobelFilter::SobelFilter_Add_5Ux5U_5U_4_27(){
  SobelFilter_Add_5Ux5U_5U_4_27_out1 = (s_reg_12.read() + 9ULL);
}
// resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_28
void SobelFilter::SobelFilter_Add_2Ux1U_2U_4_28(){
  SobelFilter_Add_2Ux1U_2U_4_28_out1 = (/*cliff*/sc_uint<32>)(s_reg_4_slice
                                       .read() + 1ULL);
}
// resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_29
void SobelFilter::SobelFilter_Add_2Ux1U_2U_4_29(){
  SobelFilter_Add_2Ux1U_2U_4_29_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                       s_reg_26.read() + 1ULL);
}
// resource: SobelFilter_Add_5Ux5U_5U_4  instance: SobelFilter_Add_5Ux5U_5U_4_32
void SobelFilter::SobelFilter_Add_5Ux5U_5U_4_32(){
  SobelFilter_Add_5Ux5U_5U_4_32_out1 = (s_reg_12.read() + 18ULL);
}
// resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_33
void SobelFilter::SobelFilter_LessThan_2Ux2U_1U_4_33(){
  SobelFilter_LessThan_2Ux2U_1U_4_33_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )
                                            s_reg_26.read() < (sc_uint<2> )3ULL)
  ;
}
// resource: mux_4bx2i2c
void SobelFilter::drive_SobelFilter_Sub_6Sx4U_6S_4_34_in1(){
  if ( s_reg_15.read() ) {
    SobelFilter_Sub_6Sx4U_6S_4_34_in1 = 5ULL;
  } else {
    SobelFilter_Sub_6Sx4U_6S_4_34_in1 = 10ULL;
  }
}
// resource: SobelFilter_Sub_6Sx4U_6S_4  instance: SobelFilter_Sub_6Sx4U_6S_4_34
void SobelFilter::SobelFilter_Sub_6Sx4U_6S_4_34(){
  SobelFilter_Sub_6Sx4U_6S_4_34_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_69
                                       .read() - 
                                       SobelFilter_Sub_6Sx4U_6S_4_34_in1.read();
}
// resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_36
void SobelFilter::SobelFilter_LessThan_2Ux2U_1U_4_36(){
  SobelFilter_LessThan_2Ux2U_1U_4_36_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )
                                            s_reg_9.read() < (sc_uint<2> )3ULL);
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_38
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_38(){
  SobelFilter_Mul_6Sx2U_6S_4_38_out1 = (/*cliff*/sc_int<32>)
                                       SobelFilter_Sub_6Sx4U_6S_4_34_out1.read()
                                        * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_39
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_39(){
  SobelFilter_Mul_6Sx2U_6S_4_39_out1 = (/*cliff*/sc_int<32>)
                                       SobelFilter_Sub_6Sx4U_6S_4_34_out1.read()
                                        * 3ULL;
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_40
void SobelFilter::SobelFilter_Not_1U_1U_4_40(){
  SobelFilter_Not_1U_1U_4_40_out1 = !SobelFilter_LessThan_32Sx5S_1U_4_20_out1
                                    .read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_43
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_43(){
  SobelFilter_And_1Ux1U_1U_4_43_out1 = SobelFilter_Not_1U_1U_4_40_out1.read() & 
                                       s_reg_15.read();
}
// resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_44
void SobelFilter::SobelFilter_Add_6Sx2U_6S_4_44(){
  SobelFilter_Add_6Sx2U_6S_4_44_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_6Sx2U_6S_4_38_out1.read()
                                        + 2ULL);
}
// resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_45
void SobelFilter::SobelFilter_Add_6Sx1U_6S_4_45(){
  SobelFilter_Add_6Sx1U_6S_4_45_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_6Sx2U_6S_4_39_out1.read()
                                        + 1ULL);
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_54
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_54(){
  SobelFilter_Or_1Ux1U_1U_4_54_out1 = s_reg_15.read() | s_reg_32.read();
}
// resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_47
void SobelFilter::SobelFilter_Add_4Ux1U_5U_4_47(){
  SobelFilter_Add_4Ux1U_5U_4_47_out1 = (/*cliff*/sc_uint<32>)((sc_uint<4> )
                                       s_reg_12.read() + 1ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_48
void SobelFilter::SobelFilter_Not_1U_1U_4_48(){
  SobelFilter_Not_1U_1U_4_48_out1 = !s_reg_32.read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_50
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_50(){
  SobelFilter_And_1Ux1U_1U_4_50_out1 = SobelFilter_Not_1U_1U_4_48_out1.read() & 
                                       s_reg_15.read();
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_51
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_51(){
  SobelFilter_Mul_6Sx2U_6S_4_51_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_69
                                       .read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux4U_5U_4  instance: SobelFilter_Add_4Ux4U_5U_4_53
void SobelFilter::SobelFilter_Add_4Ux4U_5U_4_53(){
  SobelFilter_Add_4Ux4U_5U_4_53_out1 = ((sc_uint<4> )s_reg_12.read() + 9ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_55
void SobelFilter::SobelFilter_Not_1U_1U_4_55(){
  SobelFilter_Not_1U_1U_4_55_out1 = !SobelFilter_Or_1Ux1U_1U_4_54_out1.read();
}
// resource: SobelFilter_Add_5Ux5U_5U_4  instance: SobelFilter_Add_5Ux5U_5U_4_59
void SobelFilter::SobelFilter_Add_5Ux5U_5U_4_59(){
  SobelFilter_Add_5Ux5U_5U_4_59_out1 = ((sc_uint<4> )s_reg_12.read() + 18ULL);
}
// resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_64
void SobelFilter::SobelFilter_LessThan_5Sx5S_1U_4_64(){
  SobelFilter_LessThan_5Sx5S_1U_4_64_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )
                                            s_reg_5.read() < (sc_int<5> )9LL);
}
// resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_69
void SobelFilter::SobelFilter_Add_6Ux4U_7S_4_69(){
  SobelFilter_Add_6Ux4U_7S_4_69_out1 = (s_reg_52.read() + 15ULL);
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_70
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_70(){
  SobelFilter_Mul_6Sx2U_6S_4_70_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_52
                                       .read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_71
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_71(){
  SobelFilter_Mul_6Sx2U_6S_4_71_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_52
                                       .read() * 3ULL;
}
// resource: mux_6bx18i0c
void SobelFilter::drive_buffer_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_he00b03de58f00581.read()) ) {
  default:
    buffer_in1 = s_reg_35.read();
    break;
  case 1ULL: 
    buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux4U_7S_4_69_out1.read();
    break;
  case 2ULL: 
    if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux5U_7S_4_76_out1.read();
    } else {
      if ( (s_reg_45.read() && !s_reg_32.read()) ) {
        buffer_in1 = (sc_uint<6> ) (SobelFilter_Add_6Sx1U_6S_4_78_out1.read());
      } else {
        buffer_in1 = (sc_uint<6> ) (SobelFilter_Add_6Sx2U_6S_4_77_out1.read());
      }
    }
    break;
  case 3ULL: 
    if ( (s_reg_45.read() && wire_s_reg_33.read()) ) {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux4U_7S_4_81_out1.read();
    } else {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux4U_7S_4_80_out1.read();
    }
    break;
  case 4ULL: 
    if ( (s_reg_45.read() && wire_s_reg_33.read()) ) {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux5U_7S_4_84_out1.read();
    } else {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux5U_7S_4_83_out1.read();
    }
    break;
  case 5ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_5Ux3U_5U_4_115_out1
                 .read());
    break;
  case 6ULL: 
    buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_118_out1.read();
    break;
  case 7ULL: 
    buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_128_out1.read();
    break;
  case 8ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_5Ux2U_5U_4_116_out1
                 .read());
    break;
  case 9ULL: 
    buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_119_out1.read();
    break;
  case 10ULL: 
    buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_129_out1.read();
    break;
  case 11ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_4Ux2U_6S_4_99_out1
                 .read());
    break;
  case 12ULL: 
    buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_108_out1.read();
    break;
  case 13ULL: 
    buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_117_out1.read();
    break;
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_buffer_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_he00003de00f00001.read()) ) {
  default:
    buffer_DIN = (sc_uint<32> ) (o_result_data.read().range(20,12));
    break;
  case 1ULL: 
    buffer_DIN = (sc_uint<32> ) (s_reg_38.read().range(20,12));
    break;
  case 2ULL: 
    if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
      buffer_DIN = (sc_uint<32> ) (s_reg_39.read().range(20,12));
    } else {
      buffer_DIN = (sc_uint<32> ) (o_result_data.read().range(20,12));
    }
    break;
  case 3ULL: 
    buffer_DIN = (sc_uint<32> ) (s_reg_39.read().range(20,12));
    break;
  }
}
// resource: mux_1bx8i2c
void SobelFilter::drive_buffer_CE(){
  if ( stall0.read() ) {
    buffer_CE = 0ULL;
  } else {
    switch( (sc_uint<4>)(gs_ctrl_do_filter_he00b03dfd8f00581.read()) ) {
    default:
      buffer_CE = 0ULL;
      break;
    case 1ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        buffer_CE = 0ULL;
      } else {
        switch( (sc_uint<32>)(s_reg_24.read()) ) {
        default:
          buffer_CE = 0ULL;
          break;
        case 13ULL: case 14ULL: case 15ULL: 
          if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
            buffer_CE = s_reg_32.read();
          } else {
            buffer_CE = 0ULL;
          }
          break;
        }
      }
      break;
    case 2ULL: 
      if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
        buffer_CE = s_reg_32.read();
      } else {
        buffer_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
        buffer_CE = s_reg_32.read();
      } else {
        if ( (s_reg_45.read() && !s_reg_32.read()) ) {
          buffer_CE = s_reg_45.read();
        } else {
          if ( (s_reg_48.read() && !s_reg_32.read()) ) {
            buffer_CE = s_reg_48.read();
          } else {
            buffer_CE = 0ULL;
          }
        }
      }
      break;
    case 4ULL: 
      if ( (s_reg_45.read() && wire_s_reg_33.read()) ) {
        buffer_CE = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_79_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_79_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 5ULL: 
      if ( (s_reg_45.read() && wire_s_reg_33.read()) ) {
        buffer_CE = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_82_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_82_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 6ULL: 
      if ( ((s_reg_45.read() && s_reg_33.read()) && wire_s_reg_33.read()) ) {
        buffer_CE = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_79_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_79_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 7ULL: 
      if ( ((s_reg_45.read() && s_reg_33.read()) && wire_s_reg_33.read()) ) {
        buffer_CE = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_82_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_82_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 8ULL: 
      buffer_CE = 1ULL;
      break;
    }
  }
}
// resource: mux_1bx7i1c
void SobelFilter::drive_buffer_RW(){
  if ( stall0.read() ) {
    buffer_RW = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_he00003df80f00001.read()) ) {
    default:
      buffer_RW = 0ULL;
      break;
    case 1ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
        buffer_RW = 0ULL;
      } else {
        switch( (sc_uint<32>)(s_reg_24.read()) ) {
        default:
          buffer_RW = 0ULL;
          break;
        case 13ULL: case 14ULL: case 15ULL: 
          if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
            buffer_RW = s_reg_32.read();
          } else {
            buffer_RW = 0ULL;
          }
          break;
        }
      }
      break;
    case 2ULL: 
      if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
        buffer_RW = s_reg_32.read();
      } else {
        buffer_RW = 0ULL;
      }
      break;
    case 3ULL: 
      if ( (s_reg_32.read() && wire_s_reg_32.read()) ) {
        buffer_RW = s_reg_32.read();
      } else {
        if ( (s_reg_45.read() && !s_reg_32.read()) ) {
          buffer_RW = s_reg_45.read();
        } else {
          if ( (s_reg_48.read() && !s_reg_32.read()) ) {
            buffer_RW = s_reg_48.read();
          } else {
            buffer_RW = 0ULL;
          }
        }
      }
      break;
    case 4ULL: 
      if ( (s_reg_45.read() && wire_s_reg_33.read()) ) {
        buffer_RW = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_79_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_79_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 5ULL: 
      if ( (s_reg_45.read() && wire_s_reg_33.read()) ) {
        buffer_RW = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_82_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_82_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 6ULL: 
      if ( ((s_reg_45.read() && s_reg_33.read()) && wire_s_reg_33.read()) ) {
        buffer_RW = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_79_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_79_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 7ULL: 
      if ( ((s_reg_45.read() && s_reg_33.read()) && wire_s_reg_33.read()) ) {
        buffer_RW = s_reg_33.read();
      } else {
        if ( (s_reg_48.read() && SobelFilter_Not_1U_1U_4_82_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_82_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    }
  }
}
// resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_72
void SobelFilter::SobelFilter_Add_6Sx2U_6S_4_72(){
  SobelFilter_Add_6Sx2U_6S_4_72_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_6Sx2U_6S_4_70_out1.read()
                                        + 2ULL);
}
// resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_73
void SobelFilter::SobelFilter_Add_6Sx1U_6S_4_73(){
  SobelFilter_Add_6Sx1U_6S_4_73_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_6Sx2U_6S_4_71_out1.read()
                                        + 1ULL);
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_74
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_74(){
  SobelFilter_Mul_6Sx2U_6S_4_74_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_5
                                       .read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_75
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_75(){
  SobelFilter_Mul_6Sx2U_6S_4_75_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_5
                                       .read() * 3ULL;
}
// resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_76
void SobelFilter::SobelFilter_Add_6Ux5U_7S_4_76(){
  SobelFilter_Add_6Ux5U_7S_4_76_out1 = (s_reg_5.read() + 30ULL);
}
// resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_77
void SobelFilter::SobelFilter_Add_6Sx2U_6S_4_77(){
  SobelFilter_Add_6Sx2U_6S_4_77_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_6Sx2U_6S_4_74_out1.read()
                                        + 2ULL);
}
// resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_78
void SobelFilter::SobelFilter_Add_6Sx1U_6S_4_78(){
  SobelFilter_Add_6Sx1U_6S_4_78_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_6Sx2U_6S_4_75_out1.read()
                                        + 1ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_79
void SobelFilter::SobelFilter_Not_1U_1U_4_79(){
  SobelFilter_Not_1U_1U_4_79_out1 = !s_reg_41.read();
}
// resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_80
void SobelFilter::SobelFilter_Add_6Ux4U_7S_4_80(){
  SobelFilter_Add_6Ux4U_7S_4_80_out1 = (s_reg_35.read() + 15ULL);
}
// resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_81
void SobelFilter::SobelFilter_Add_6Ux4U_7S_4_81(){
  SobelFilter_Add_6Ux4U_7S_4_81_out1 = (s_reg_35.read() + 15ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_82
void SobelFilter::SobelFilter_Not_1U_1U_4_82(){
  SobelFilter_Not_1U_1U_4_82_out1 = !s_reg_47.read();
}
// resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_83
void SobelFilter::SobelFilter_Add_6Ux5U_7S_4_83(){
  SobelFilter_Add_6Ux5U_7S_4_83_out1 = (s_reg_52.read() + 30ULL);
}
// resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_84
void SobelFilter::SobelFilter_Add_6Ux5U_7S_4_84(){
  SobelFilter_Add_6Ux5U_7S_4_84_out1 = (s_reg_61.read() + 30ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_85_in2(){
  if ( gs_ctrl_do_filter_h100000000000000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_85_in2 = (sc_uint<2> )s_reg_9.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_85_in2 = 0ULL;
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_85
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_85(){
  SobelFilter_Add_2Ux1U_3U_4_85_out1 = (/*cliff*/sc_uint<32>)(
                                       SobelFilter_Add_2Ux1U_3U_4_85_in2.read()
                                        + 1ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_86_in2(){
  if ( gs_ctrl_do_filter_h8000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_86_in2 = (sc_uint<2> )s_reg_9.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_86_in2 = 0ULL;
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_86
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_86(){
  SobelFilter_Add_2Ux1U_3U_4_86_out1 = (/*cliff*/sc_uint<32>)(
                                       SobelFilter_Add_2Ux1U_3U_4_86_in2.read()
                                        + 1ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_87_in2(){
  if ( gs_ctrl_do_filter_h800000000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_87_in2 = (sc_uint<2> )s_reg_9.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_87_in2 = 0ULL;
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_87
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_87(){
  SobelFilter_Add_2Ux1U_3U_4_87_out1 = (/*cliff*/sc_uint<32>)(
                                       SobelFilter_Add_2Ux1U_3U_4_87_in2.read()
                                        + 1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_88
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_88(){
  SobelFilter_Mul_2Ux2U_4U_4_88_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_6S_4  instance: SobelFilter_Add_4Ux2U_6S_4_89
void SobelFilter::SobelFilter_Add_4Ux2U_6S_4_89(){
  SobelFilter_Add_4Ux2U_6S_4_89_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_2Ux2U_4U_4_88_out1.read()
                                        + (sc_uint<2> )s_reg_26.read());
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_90
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_90(){
  SobelFilter_Mul_2Ux2U_4U_4_90_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_6S_4  instance: SobelFilter_Add_4Ux2U_6S_4_91
void SobelFilter::SobelFilter_Add_4Ux2U_6S_4_91(){
  SobelFilter_Add_4Ux2U_6S_4_91_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_2Ux2U_4U_4_90_out1.read()
                                        + (sc_uint<2> )s_reg_26.read());
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_98
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_98(){
  SobelFilter_Mul_2Ux2U_4U_4_98_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_6S_4  instance: SobelFilter_Add_4Ux2U_6S_4_99
void SobelFilter::SobelFilter_Add_4Ux2U_6S_4_99(){
  SobelFilter_Add_4Ux2U_6S_4_99_out1 = (/*cliff*/sc_int<32>)(
                                       SobelFilter_Mul_2Ux2U_4U_4_98_out1.read()
                                        + (sc_uint<2> )s_reg_26.read());
}
// resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_100
void SobelFilter::SobelFilter_Add_5Ux3U_5U_4_100(){
  SobelFilter_Add_5Ux3U_5U_4_100_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        s_reg_12.read() + 6ULL);
}
// resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_101
void SobelFilter::SobelFilter_Add_5Ux2U_5U_4_101(){
  SobelFilter_Add_5Ux2U_5U_4_101_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        s_reg_12.read() + 3ULL);
}
// resource: mux_4bx3i0c
void SobelFilter::drive_sharpening_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h4000040.read()) ) {
  default:
    sharpening_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_6S_4_89_out1.read();
    break;
  case 1ULL: 
    sharpening_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_6S_4_91_out1.read();
    break;
  case 2ULL: 
    sharpening_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_6S_4_99_out1.read();
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_sharpening_CE(){
  if ( stall0.read() ) {
    sharpening_CE = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h800004000040.read() ) {
      sharpening_CE = 1ULL;
    } else {
      sharpening_CE = 0ULL;
    }
  }
}
// resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_108
void SobelFilter::SobelFilter_Add_5Ux4U_6U_4_108(){
  SobelFilter_Add_5Ux4U_6U_4_108_out1 = (s_reg_12.read() + 15ULL);
}
// resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_115
void SobelFilter::SobelFilter_Add_5Ux3U_5U_4_115(){
  SobelFilter_Add_5Ux3U_5U_4_115_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        s_reg_5.read() + 6ULL);
}
// resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_116
void SobelFilter::SobelFilter_Add_5Ux2U_5U_4_116(){
  SobelFilter_Add_5Ux2U_5U_4_116_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        s_reg_5.read() + 3ULL);
}
// resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_117
void SobelFilter::SobelFilter_Add_5Ux5U_6U_4_117(){
  SobelFilter_Add_5Ux5U_6U_4_117_out1 = (s_reg_12.read() + 30ULL);
}
// resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_118
void SobelFilter::SobelFilter_Add_5Ux4U_6U_4_118(){
  SobelFilter_Add_5Ux4U_6U_4_118_out1 = ((sc_uint<5> )s_reg_35.read() + 15ULL);
}
// resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_119
void SobelFilter::SobelFilter_Add_5Ux4U_6U_4_119(){
  SobelFilter_Add_5Ux4U_6U_4_119_out1 = ((sc_uint<5> )s_reg_35.read() + 15ULL);
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_120
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_120(){
  SobelFilter_Add_2Ux1U_3U_4_120_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                        s_reg_26.read() + 1ULL);
}
// resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_121
void SobelFilter::SobelFilter_Add_5Ux3U_5U_4_121(){
  SobelFilter_Add_5Ux3U_5U_4_121_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        s_reg_12.read() + 6ULL);
}
// resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_122
void SobelFilter::SobelFilter_Add_5Ux2U_5U_4_122(){
  SobelFilter_Add_5Ux2U_5U_4_122_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        s_reg_12.read() + 3ULL);
}
// resource: SobelFilter_GreaterThan_32Sx9S_1U_4  instance: SobelFilter_GreaterThan_32Sx9S_1U_4_133
void SobelFilter::SobelFilter_GreaterThan_32Sx9S_1U_4_133(){
  SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 = (/*imp*/sc_uint<1>)((
                                                 sc_int<32> )SobelFilter_Add_33Ux33U_33U_4_15_out1
                                                 .read() > (sc_int<9> )255LL);
}
void SobelFilter::drive_SobelFilter_N_Mux_16_2_2_4_126_ctrl1(){
  SobelFilter_N_Mux_16_2_2_4_126_ctrl1 = (sc_uint<1> ) (
                                         SobelFilter_Add_33Ux33U_33U_4_15_out1
                                         .read().range(31,31));
}
// resource: SobelFilter_N_Mux_16_2_2_4
void SobelFilter::SobelFilter_N_Mux_16_2_2_4_126(){
  if ( SobelFilter_N_Mux_16_2_2_4_126_ctrl1.read() ) {
    SobelFilter_N_Mux_16_2_2_4_126_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_16_2_2_4_126_out1 = (sc_uint<16> )
                                          SobelFilter_Add_33Ux33U_33U_4_15_out1
                                          .read();
  }
}
// resource: SobelFilter_N_Mux_16_2_3_4
void SobelFilter::SobelFilter_N_Mux_16_2_3_4_127(){
  if ( SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1.read() ) {
    SobelFilter_N_Mux_16_2_3_4_127_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_16_2_3_4_127_out1 = SobelFilter_N_Mux_16_2_2_4_126_out1
                                          .read();
  }
}
// resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_128
void SobelFilter::SobelFilter_Add_5Ux5U_6U_4_128(){
  SobelFilter_Add_5Ux5U_6U_4_128_out1 = (s_reg_12.read() + 30ULL);
}
// resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_129
void SobelFilter::SobelFilter_Add_5Ux5U_6U_4_129(){
  SobelFilter_Add_5Ux5U_6U_4_129_out1 = (s_reg_12.read() + 30ULL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_130
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_130(){
  SobelFilter_LessThan_3Sx3S_1U_4_130_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_9.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_N_Mux_24_2_0_4
void SobelFilter::SobelFilter_N_Mux_24_2_0_4_134(){
  if ( SobelFilter_N_Mux_16_2_2_4_126_ctrl1.read() ) {
    SobelFilter_N_Mux_24_2_0_4_134_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_24_2_0_4_134_out1 = (sc_uint<24> )
                                          SobelFilter_Add_33Ux33U_33U_4_15_out1
                                          .read();
  }
}
// resource: SobelFilter_N_Mux_24_2_1_4
void SobelFilter::SobelFilter_N_Mux_24_2_1_4_135(){
  if ( SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1.read() ) {
    SobelFilter_N_Mux_24_2_1_4_135_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_24_2_1_4_135_out1 = SobelFilter_N_Mux_24_2_0_4_134_out1
                                          .read();
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_136
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_136(){
  SobelFilter_Add_2Ux1U_3U_4_136_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                        s_reg_26.read() + 1ULL);
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_137
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_137(){
  SobelFilter_Add_2Ux1U_3U_4_137_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                        s_reg_26.read() + 1ULL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_138
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_138(){
  SobelFilter_LessThan_3Sx3S_1U_4_138_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_26.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_N_Mux_32_2_4_4
void SobelFilter::SobelFilter_N_Mux_32_2_4_4_142(){
  if ( SobelFilter_N_Mux_16_2_2_4_126_ctrl1.read() ) {
    SobelFilter_N_Mux_32_2_4_4_142_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_32_2_4_4_142_out1 = (sc_uint<32> )
                                          SobelFilter_Add_33Ux33U_33U_4_15_out1
                                          .read();
  }
}
// resource: SobelFilter_N_Mux_32_2_5_4
void SobelFilter::SobelFilter_N_Mux_32_2_5_4_143(){
  if ( SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1.read() ) {
    SobelFilter_N_Mux_32_2_5_4_143_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_32_2_5_4_143_out1 = SobelFilter_N_Mux_32_2_4_4_142_out1
                                          .read();
  }
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_154
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_154(){
  SobelFilter_LessThan_3Sx3S_1U_4_154_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_9.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_160
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_160(){
  SobelFilter_LessThan_3Sx3S_1U_4_160_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_9.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_166
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_166(){
  SobelFilter_LessThan_3Sx3S_1U_4_166_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_26.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_172
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_172(){
  SobelFilter_LessThan_3Sx3S_1U_4_172_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_26.read() < (sc_int<3> )3LL);
}
// resource: regr_en_sc_7
void SobelFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_7bx14i13c
void SobelFilter::drive_global_state_next(){
  switch( (sc_uint<7>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 9ULL: case 14ULL: 
    global_state_next = 10ULL;
    break;
  case 13ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_14_out1.read() ) {
      global_state_next = 10ULL;
    } else {
      if ( s_reg_15.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 15ULL;
      }
    }
    break;
  case 18ULL: 
    if ( SobelFilter_LessThan_5Sx5S_1U_4_18_out1.read() ) {
      global_state_next = 15ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 19ULL: case 37ULL: case 60ULL: case 83ULL: case 103ULL: 
    global_state_next = 20ULL;
    break;
  case 25ULL: 
    if ( SobelFilter_LessThan_2Ux2U_1U_4_33_out1.read() ) {
      global_state_next = 20ULL;
    } else {
      if ( SobelFilter_LessThan_2Ux2U_1U_4_36_out1.read() ) {
        global_state_next = 20ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    }
    break;
  case 31ULL: 
    if ( SobelFilter_LessThan_5Sx5S_1U_4_64_out1.read() ) {
      global_state_next = 26ULL;
    } else {
      switch( (sc_uint<32>)(s_reg_24.read()) ) {
      default:
        global_state_next = (global_state.read() + 1ULL);
        break;
      case 13ULL: 
        global_state_next = 84ULL;
        break;
      case 14ULL: 
        global_state_next = 61ULL;
        break;
      case 15ULL: 
        global_state_next = 38ULL;
        break;
      }
    }
    break;
  case 42ULL: case 56ULL: 
    global_state_next = 43ULL;
    break;
  case 55ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_166_out1.read() ) {
      global_state_next = 43ULL;
    } else {
      if ( s_reg_32.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 57ULL;
      }
    }
    break;
  case 65ULL: case 79ULL: 
    global_state_next = 66ULL;
    break;
  case 78ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_172_out1.read() ) {
      global_state_next = 66ULL;
    } else {
      if ( s_reg_32.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 80ULL;
      }
    }
    break;
  case 88ULL: case 99ULL: 
    global_state_next = 89ULL;
    break;
  case 98ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_138_out1.read() ) {
      global_state_next = 89ULL;
    } else {
      if ( s_reg_32.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 100ULL;
      }
    }
    break;
  }
}
// resource: mux_4bx10i10c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_h9fe(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h9fe = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h9fe = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h9fe = 1ULL;
        break;
      case 2ULL: 
        gs_ctrl_do_filter_h9fe = 2ULL;
        break;
      case 3ULL: 
        gs_ctrl_do_filter_h9fe = 3ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_h9fe = 4ULL;
        break;
      case 5ULL: 
        gs_ctrl_do_filter_h9fe = 5ULL;
        break;
      case 6ULL: 
        gs_ctrl_do_filter_h9fe = 6ULL;
        break;
      case 7ULL: 
        gs_ctrl_do_filter_h9fe = 7ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h9fe = 8ULL;
        break;
      case 11ULL: 
        gs_ctrl_do_filter_h9fe = 9ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_hba(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hba = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hba = 0ULL;
        break;
      case 1ULL: case 3ULL: case 5ULL: case 7ULL: 
        gs_ctrl_do_filter_hba = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_hba = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_gs_ctrl_do_filter_h9ff(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h9ff = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h9ff = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 
      6ULL: case 7ULL: case 8ULL: case 11ULL: 
        gs_ctrl_do_filter_h9ff = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_gs_ctrl_do_filter_h1ff(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1ff = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1ff = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 
      6ULL: case 7ULL: case 8ULL: 
        gs_ctrl_do_filter_h1ff = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h4000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h4000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h4000 = 0ULL;
        break;
      case 14ULL: 
        gs_ctrl_do_filter_h4000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx5i5c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_he0000754007000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_he0000754007000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_he0000754007000 = 0ULL;
        break;
      case 26ULL: case 28ULL: case 30ULL: 
        gs_ctrl_do_filter_he0000754007000 = 1ULL;
        break;
      case 53ULL: case 78ULL: case 97ULL: 
        gs_ctrl_do_filter_he0000754007000 = 2ULL;
        break;
      case 54ULL: case 76ULL: case 98ULL: 
        gs_ctrl_do_filter_he0000754007000 = 3ULL;
        break;
      case 55ULL: case 77ULL: case 96ULL: 
        gs_ctrl_do_filter_he0000754007000 = 4ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_he00007540070000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_he00007540070000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_he00007540070000 = 0ULL;
        break;
      case 26ULL: 
        gs_ctrl_do_filter_he00007540070000 = 1ULL;
        break;
      case 28ULL: case 30ULL: 
        gs_ctrl_do_filter_he00007540070000 = 2ULL;
        break;
      case 53ULL: case 54ULL: case 55ULL: case 76ULL: case 77ULL: case 78ULL: 
      case 96ULL: case 97ULL: case 98ULL: 
        gs_ctrl_do_filter_he00007540070000 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx7i7c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h6e00037d0037000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h6e00037d0037000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h6e00037d0037000 = 0ULL;
        break;
      case 28ULL: 
        gs_ctrl_do_filter_h6e00037d0037000 = 1ULL;
        break;
      case 30ULL: 
        gs_ctrl_do_filter_h6e00037d0037000 = 2ULL;
        break;
      case 31ULL: 
        gs_ctrl_do_filter_h6e00037d0037000 = 3ULL;
        break;
      case 53ULL: case 54ULL: case 55ULL: case 76ULL: case 77ULL: case 78ULL: 
      case 96ULL: case 97ULL: case 98ULL: 
        gs_ctrl_do_filter_h6e00037d0037000 = 4ULL;
        break;
      case 57ULL: case 80ULL: case 100ULL: 
        gs_ctrl_do_filter_h6e00037d0037000 = 5ULL;
        break;
      case 58ULL: case 81ULL: case 101ULL: 
        gs_ctrl_do_filter_h6e00037d0037000 = 6ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h6e00037d00370000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h6e00037d00370000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h6e00037d00370000 = 0ULL;
        break;
      case 28ULL: case 30ULL: case 31ULL: 
        gs_ctrl_do_filter_h6e00037d00370000 = 1ULL;
        break;
      case 53ULL: case 58ULL: case 77ULL: case 81ULL: case 97ULL: case 101ULL: 
        gs_ctrl_do_filter_h6e00037d00370000 = 2ULL;
        break;
      case 54ULL: case 76ULL: case 96ULL: 
        gs_ctrl_do_filter_h6e00037d00370000 = 3ULL;
        break;
      case 55ULL: case 78ULL: case 98ULL: 
        gs_ctrl_do_filter_h6e00037d00370000 = 4ULL;
        break;
      case 57ULL: case 80ULL: case 100ULL: 
        gs_ctrl_do_filter_h6e00037d00370000 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h82062000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h82062000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h82062000 = 0ULL;
        break;
      case 13ULL: case 17ULL: case 18ULL: case 31ULL: 
        gs_ctrl_do_filter_h82062000 = 1ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h82062000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h20000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h20000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h20000 = 0ULL;
        break;
      case 17ULL: 
        gs_ctrl_do_filter_h20000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h82063000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h82063000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h82063000 = 0ULL;
        break;
      case 12ULL: case 17ULL: 
        gs_ctrl_do_filter_h82063000 = 1ULL;
        break;
      case 13ULL: 
        gs_ctrl_do_filter_h82063000 = 2ULL;
        break;
      case 18ULL: 
        gs_ctrl_do_filter_h82063000 = 3ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h82063000 = 4ULL;
        break;
      case 31ULL: 
        gs_ctrl_do_filter_h82063000 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h21000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h21000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h21000 = 0ULL;
        break;
      case 12ULL: case 17ULL: 
        gs_ctrl_do_filter_h21000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h100000a000080000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h100000a000080000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h100000a000080000 = 0ULL;
        break;
      case 37ULL: case 83ULL: case 103ULL: 
        gs_ctrl_do_filter_h100000a000080000 = 1ULL;
        break;
      case 60ULL: 
        gs_ctrl_do_filter_h100000a000080000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h2000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2000000 = 0ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_h2000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx7i7c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_hab400000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hab400000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hab400000 = 0ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_hab400000 = 1ULL;
        break;
      case 24ULL: 
        gs_ctrl_do_filter_hab400000 = 2ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_hab400000 = 3ULL;
        break;
      case 27ULL: 
        gs_ctrl_do_filter_hab400000 = 4ULL;
        break;
      case 29ULL: 
        gs_ctrl_do_filter_hab400000 = 5ULL;
        break;
      case 31ULL: 
        gs_ctrl_do_filter_hab400000 = 6ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h1400000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1400000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1400000 = 0ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h1400000 = 1ULL;
        break;
      case 24ULL: 
        gs_ctrl_do_filter_h1400000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_hab500000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hab500000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hab500000 = 0ULL;
        break;
      case 20ULL: case 22ULL: case 24ULL: case 27ULL: case 29ULL: 
        gs_ctrl_do_filter_hab500000 = 1ULL;
        break;
      case 25ULL: 
        gs_ctrl_do_filter_hab500000 = 2ULL;
        break;
      case 31ULL: 
        gs_ctrl_do_filter_hab500000 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h1500000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1500000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1500000 = 0ULL;
        break;
      case 20ULL: case 22ULL: case 24ULL: 
        gs_ctrl_do_filter_h1500000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx14i14c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_he00b03de58f00581(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_he00b03de58f00581 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_he00b03de58f00581 = 0ULL;
        break;
      case 33ULL: case 38ULL: case 61ULL: case 84ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 1ULL;
        break;
      case 34ULL: case 39ULL: case 62ULL: case 85ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 2ULL;
        break;
      case 35ULL: case 40ULL: case 63ULL: case 86ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 3ULL;
        break;
      case 36ULL: case 41ULL: case 64ULL: case 87ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 4ULL;
        break;
      case 48ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 5ULL;
        break;
      case 49ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 6ULL;
        break;
      case 51ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 7ULL;
        break;
      case 71ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 8ULL;
        break;
      case 72ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 9ULL;
        break;
      case 74ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 10ULL;
        break;
      case 91ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 11ULL;
        break;
      case 92ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 12ULL;
        break;
      case 94ULL: 
        gs_ctrl_do_filter_he00b03de58f00581 = 13ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_he00003de00f00001(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_he00003de00f00001 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_he00003de00f00001 = 0ULL;
        break;
      case 33ULL: case 35ULL: case 38ULL: case 40ULL: case 61ULL: case 63ULL: 
      case 84ULL: case 86ULL: 
        gs_ctrl_do_filter_he00003de00f00001 = 1ULL;
        break;
      case 34ULL: case 39ULL: case 62ULL: case 85ULL: 
        gs_ctrl_do_filter_he00003de00f00001 = 2ULL;
        break;
      case 36ULL: case 41ULL: case 64ULL: case 87ULL: 
        gs_ctrl_do_filter_he00003de00f00001 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx9i9c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_he00b03dfd8f00581(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_he00b03dfd8f00581 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_he00b03dfd8f00581 = 0ULL;
        break;
      case 31ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 1ULL;
        break;
      case 32ULL: case 33ULL: case 38ULL: case 61ULL: case 84ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 2ULL;
        break;
      case 34ULL: case 39ULL: case 62ULL: case 85ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 3ULL;
        break;
      case 35ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 4ULL;
        break;
      case 36ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 5ULL;
        break;
      case 40ULL: case 63ULL: case 86ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 6ULL;
        break;
      case 41ULL: case 64ULL: case 87ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 7ULL;
        break;
      case 48ULL: case 49ULL: case 51ULL: case 71ULL: case 72ULL: case 74ULL: 
      case 91ULL: case 92ULL: case 94ULL: 
        gs_ctrl_do_filter_he00b03dfd8f00581 = 8ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx8i8c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_he00003df80f00001(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_he00003df80f00001 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_he00003df80f00001 = 0ULL;
        break;
      case 31ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 1ULL;
        break;
      case 32ULL: case 33ULL: case 38ULL: case 61ULL: case 84ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 2ULL;
        break;
      case 34ULL: case 39ULL: case 62ULL: case 85ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 3ULL;
        break;
      case 35ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 4ULL;
        break;
      case 36ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 5ULL;
        break;
      case 40ULL: case 63ULL: case 86ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 6ULL;
        break;
      case 41ULL: case 64ULL: case 87ULL: 
        gs_ctrl_do_filter_he00003df80f00001 = 7ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h100000000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h100000000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h100000000000000 = 0ULL;
        break;
      case 56ULL: 
        gs_ctrl_do_filter_h100000000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h8000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8000 = 0ULL;
        break;
      case 79ULL: 
        gs_ctrl_do_filter_h8000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h800000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h800000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h800000000 = 0ULL;
        break;
      case 99ULL: 
        gs_ctrl_do_filter_h800000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h4000040(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h4000040 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h4000040 = 0ULL;
        break;
      case 70ULL: 
        gs_ctrl_do_filter_h4000040 = 1ULL;
        break;
      case 90ULL: 
        gs_ctrl_do_filter_h4000040 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h800004000040(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h800004000040 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h800004000040 = 0ULL;
        break;
      case 47ULL: case 70ULL: case 90ULL: 
        gs_ctrl_do_filter_h800004000040 = 1ULL;
        break;
      }
      break;
    }
  }
}
void SobelFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               SobelFilter_gen_busy_r_4_186_out1.read().range(2,2)));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_186
void SobelFilter::SobelFilter_gen_busy_r_4_186_p7(){
  SobelFilter_gen_busy_r_4_186_out1 = (sc_uint<3> ) (( (sc_biguint<3> )
                                      (sc_bv<3>)((sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_186_gnew_req
                                      .read()), 
                                      (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                      (sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_186_gdiv.read())
                                      , 
                                      (sc_bv<1>)(SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                      .read())) ))) ));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_186
void SobelFilter::SobelFilter_gen_busy_r_4_186_p6(){
  SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)SobelFilter_gen_busy_r_4_186_gdiv.read()
  ;
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_186
void SobelFilter::SobelFilter_gen_busy_r_4_186_p5(){
  SobelFilter_gen_busy_r_4_186_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld
                                      .read() & !
                                      SobelFilter_gen_busy_r_4_186_gnew_req
                                      .read());
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_186
void SobelFilter::SobelFilter_gen_busy_r_4_186_p4(){
  SobelFilter_gen_busy_r_4_186_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                          i_rgb_m_busy_req_0.read() & ( 
                                          i_rgb_m_unvalidated_req.read() | 
                                          i_rgb_vld.read() ));
}
// resource: regr_ss_1
void SobelFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (SobelFilter_N_Muxb_1_2_6_4_4_out1
                              .read());
  }
}
// resource: SobelFilter_N_Muxb_1_2_6_4
void SobelFilter::SobelFilter_N_Muxb_1_2_6_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    SobelFilter_N_Muxb_1_2_6_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                        .read());
  } else {
    SobelFilter_N_Muxb_1_2_6_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void SobelFilter::drive_o_result_vld(){
  o_result_vld = (sc_uint<1> ) (SobelFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_2(){
  SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req.read() | (
                                     sc_uint<1>)
                                     SobelFilter_Xor_1Ux1U_1U_1_1_out1.read();
}
// resource: regr_sc_1
void SobelFilter::drive_o_result_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_unacked_req = 0ULL;
  } else {
    o_result_m_unacked_req = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_184_out1
                             .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_184
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_184(){
  SobelFilter_And_1Ux1U_1U_4_184_out1 = o_result_busy.read() & o_result_vld
                                        .read();
}
// resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
void SobelFilter::SobelFilter_Xor_1Ux1U_1U_1_1(){
  SobelFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_result_m_req_m_trig_req
                                      .read() ^ o_result_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_result_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_result_m_req_m_prev_trig_req = o_result_m_req_m_trig_req.read();
  }
}
// resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
void SobelFilter::SobelFilter_Not_1U_1U_1_3(){
  SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req.read();
}

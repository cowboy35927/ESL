// Generated by stratus_hls 21.20-p100  (96289.240513)
// Fri May 26 07:05:17 2023
// from ../SobelFilter.cpp

`timescale 1ps / 1ps


module SobelFilter( i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data );

    input i_clk;
    input i_rst;
    input i_rgb_vld;
    input [23:0] i_rgb_data;
    input o_result_busy;
    output i_rgb_busy;
    output o_result_vld;
    output [31:0] o_result_data;
    reg [31:0] o_result_data;
    reg o_result_m_req_m_prev_trig_req;
    reg o_result_m_unacked_req;
    wire SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    wire SobelFilter_Or_1Ux1U_1U_4_2_out1;
    reg SobelFilter_N_Muxb_1_2_6_4_4_out1;
    reg i_rgb_m_unvalidated_req;
    wire SobelFilter_gen_busy_r_4_186_gnew_req;
    wire SobelFilter_gen_busy_r_4_186_gdiv;
    wire SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next;
    reg[6:0] global_state_next;
    reg[31:0] SobelFilter_N_Mux_32_2_4_4_142_out1;
    reg[23:0] SobelFilter_N_Mux_24_2_0_4_134_out1;
    reg[15:0] SobelFilter_N_Mux_16_2_2_4_126_out1;
    wire SobelFilter_N_Mux_16_2_2_4_126_ctrl1;
    wire SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1;
    reg gs_ctrl_do_filter_h800004000040;
    reg[1:0] gs_ctrl_do_filter_h4000040;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_98_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_90_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_88_out1;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_87_in2;
    reg gs_ctrl_do_filter_h800000000;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_86_in2;
    reg gs_ctrl_do_filter_h8000;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_85_in2;
    reg gs_ctrl_do_filter_h100000000000000;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_75_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_74_out1;
    reg[2:0] gs_ctrl_do_filter_he00003df80f00001;
    wire SobelFilter_Not_1U_1U_4_79_out1;
    wire SobelFilter_Not_1U_1U_4_82_out1;
    reg[3:0] gs_ctrl_do_filter_he00b03dfd8f00581;
    reg[1:0] gs_ctrl_do_filter_he00003de00f00001;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux5U_7S_4_76_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx2U_6S_4_77_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx1U_6S_4_78_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux4U_7S_4_80_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux4U_7S_4_81_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux5U_7S_4_83_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux5U_7S_4_84_out1;
    wire[5:0] SobelFilter_Add_5Ux4U_6U_4_108_out1;
    wire[4:0] SobelFilter_Add_5Ux3U_5U_4_115_out1;
    wire[4:0] SobelFilter_Add_5Ux2U_5U_4_116_out1;
    wire[5:0] SobelFilter_Add_5Ux5U_6U_4_117_out1;
    wire[5:0] SobelFilter_Add_5Ux4U_6U_4_118_out1;
    wire[5:0] SobelFilter_Add_5Ux4U_6U_4_119_out1;
    wire[5:0] SobelFilter_Add_5Ux5U_6U_4_128_out1;
    wire[5:0] SobelFilter_Add_5Ux5U_6U_4_129_out1;
    reg[3:0] gs_ctrl_do_filter_he00b03de58f00581;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_71_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_70_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux4U_7S_4_69_out1;
    wire SobelFilter_Not_1U_1U_4_48_out1;
    wire SobelFilter_Not_1U_1U_4_40_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_39_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_38_out1;
    reg[3:0] SobelFilter_Sub_6Sx4U_6S_4_34_in1;
    reg gs_ctrl_do_filter_h1500000;
    reg[1:0] gs_ctrl_do_filter_hab500000;
    reg[1:0] gs_ctrl_do_filter_h1400000;
    wire[4:0] SobelFilter_Add_5Ux5U_5U_4_27_out1;
    wire[4:0] SobelFilter_Add_5Ux5U_5U_4_32_out1;
    wire[4:0] SobelFilter_Add_4Ux4U_5U_4_53_out1;
    wire[4:0] SobelFilter_Add_5Ux5U_5U_4_59_out1;
    reg[2:0] gs_ctrl_do_filter_hab400000;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_30_out1;
    /*signed*/reg[3:0] SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice;
    reg gs_ctrl_do_filter_h2000000;
    wire SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1;
    /*signed*/reg[31:0] SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2;
    reg[1:0] gs_ctrl_do_filter_h100000a000080000;
    reg gs_ctrl_do_filter_h21000;
    reg[2:0] gs_ctrl_do_filter_h82063000;
    reg gs_ctrl_do_filter_h20000;
    reg[1:0] gs_ctrl_do_filter_h82062000;
    reg[32:0] SobelFilter_Add_33Ux33U_33U_4_15_in1;
    reg[2:0] gs_ctrl_do_filter_h6e00037d00370000;
    reg[32:0] SobelFilter_Add_33Ux33U_33U_4_15_in2;
    reg[2:0] gs_ctrl_do_filter_h6e00037d0037000;
    reg[31:0] SobelFilter_Mul_33Sx32U_35S_4_13_in1;
    reg[1:0] gs_ctrl_do_filter_he00007540070000;
    /*signed*/reg[31:0] SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice;
    reg[2:0] gs_ctrl_do_filter_he0000754007000;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_12_out1;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_6_in2;
    reg gs_ctrl_do_filter_h4000;
    reg gs_ctrl_do_filter_h1ff;
    reg gs_ctrl_do_filter_h9ff;
    reg[1:0] gs_ctrl_do_filter_hba;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_10_out1;
    reg[3:0] gs_ctrl_do_filter_h9fe;
    reg[31:0] s_reg_96;
    reg[31:0] s_reg_92;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_87_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_86_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_85_out1;
    wire[1:0] SobelFilter_Add_2Ux1U_2U_4_28_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_6_out1;
    reg[31:0] SobelFilter_N_Mux_32_2_5_4_143_out1;
    reg[31:0] s_reg_69;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx1U_6S_4_73_out1;
    reg[5:0] s_reg_61;
    reg[23:0] SobelFilter_N_Mux_24_2_1_4_135_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx2U_6S_4_72_out1;
    reg[5:0] s_reg_52;
    /*signed*/wire[5:0] SobelFilter_Sub_6Sx4U_6S_4_34_out1;
    wire[4:0] SobelFilter_Add_4Ux1U_5U_4_47_out1;
    wire[4:0] SobelFilter_Add_4Ux1U_5U_4_16_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_14_out1;
    wire SobelFilter_Not_1U_1U_4_55_out1;
    reg s_reg_48;
    reg s_reg_47;
    wire SobelFilter_And_1Ux1U_1U_4_50_out1;
    reg s_reg_45;
    reg[32:0] s_reg_44;
    wire SobelFilter_Or_1Ux1U_1U_4_54_out1;
    reg s_reg_41;
    reg[2:0] s_reg_9;
    reg[1:0] s_reg_4_slice;
    reg[31:0] s_reg_39;
    reg[15:0] SobelFilter_N_Mux_16_2_3_4_127_out1;
    /*signed*/wire[34:0] SobelFilter_Mul_33Sx32U_35S_4_13_out1;
    reg[20:0] s_reg_38;
    wire[4:0] SobelFilter_Add_5Ux2U_5U_4_101_out1;
    wire[4:0] SobelFilter_Add_5Ux3U_5U_4_100_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_51_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx2U_6S_4_44_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx1U_6S_4_45_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_8_out1;
    reg wire_s_reg_33;
    wire SobelFilter_And_1Ux1U_1U_4_43_out1;
    reg s_reg_33;
    reg wire_s_reg_32;
    wire SobelFilter_LessThan_3Sx3S_1U_4_130_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_160_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_154_out1;
    wire SobelFilter_LessThan_32Sx5S_1U_4_20_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_120_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_137_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_136_out1;
    wire[1:0] SobelFilter_Add_2Ux1U_2U_4_29_out1;
    reg[5:0] s_reg_35;
    reg[2:0] s_reg_26;
    /*signed*/wire[31:0] SobelFilter_Add_32Sx1U_32S_4_22_out1;
    reg[31:0] s_reg_24;
    wire SobelFilter_And_1Ux1U_1U_4_21_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_11_out1;
    reg s_reg_15;
    /*signed*/wire[5:0] SobelFilter_Add_4Ux2U_6S_4_99_out1;
    wire[4:0] SobelFilter_Add_5Ux2U_5U_4_122_out1;
    /*signed*/wire[5:0] SobelFilter_Add_4Ux2U_6S_4_91_out1;
    wire[4:0] SobelFilter_Add_5Ux3U_5U_4_121_out1;
    /*signed*/wire[5:0] SobelFilter_Add_4Ux2U_6S_4_89_out1;
    reg[5:0] s_reg_5;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_31_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_9_out1;
    reg[4:0] s_reg_12;
    reg[31:0] s_reg_102;
    wire SobelFilter_And_1Ux1U_1U_4_184_out1;
    wire[2:0] SobelFilter_gen_busy_r_4_186_out1;
    wire SobelFilter_Not_1U_1U_1_3_out1;
    reg o_result_m_req_m_trig_req;
    reg i_rgb_m_busy_req_0;
    wire SobelFilter_LessThan_5Sx5S_1U_4_18_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_138_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_172_out1;
    reg s_reg_32;
    wire SobelFilter_LessThan_3Sx3S_1U_4_166_out1;
    wire SobelFilter_LessThan_5Sx5S_1U_4_64_out1;
    wire[32:0] SobelFilter_Add_33Ux33U_33U_4_15_out1;
    wire SobelFilter_LessThan_2Ux2U_1U_4_33_out1;
    wire SobelFilter_LessThan_2Ux2U_1U_4_36_out1;
    reg[6:0] global_state;
    reg[23:0] Gaussian_value_DIN;
    reg Gaussian_value_CE;
    reg Gaussian_value_RW;
    reg[3:0] Gaussian_value_in1;
    wire[23:0] Gaussian_value_out1;
    wire[48:0] SobelFilter_DivRem_4_17_in1;
    reg[23:0] s_reg_6;
    wire[36:0] SobelFilter_DivRem_4_17_out1;
    reg stall0;
    reg[31:0] buffer_DIN;
    reg buffer_CE;
    reg buffer_RW;
    reg[5:0] buffer_in1;
    wire[31:0] buffer_out1;
    reg[23:0] expon_value_DIN;
    reg expon_value_CE;
    reg expon_value_RW;
    reg[3:0] expon_value_in1;
    wire[23:0] expon_value_out1;
    reg sharpening_CE;
    reg[3:0] sharpening_in1;
    wire[31:0] sharpening_out1;
    reg[23:0] val_value_DIN;
    reg val_value_CE;
    reg val_value_RW;
    reg[4:0] val_value_in1;
    wire[23:0] val_value_out1;

    SobelFilter_RAM_27X24_2 val_value( 
                              .DIN( val_value_DIN ),
                              .CE( val_value_CE ),
                              .RW( val_value_RW ),
                              .in1( val_value_in1 ),
                              .out1( val_value_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_ROM_9X32_sharpening sharpening( 
                                      .CE( sharpening_CE ),
                                      .in1( sharpening_in1 ),
                                      .out1( sharpening_out1 ),
                                      .clk( i_clk )
                                    );
    SobelFilter_RAM_9X24_1 expon_value( 
                             .DIN( expon_value_DIN ),
                             .CE( expon_value_CE ),
                             .RW( expon_value_RW ),
                             .in1( expon_value_in1 ),
                             .out1( expon_value_out1 ),
                             .clk( i_clk )
                           );
    SobelFilter_RAM_45X32_4 buffer( 
                              .DIN( buffer_DIN ),
                              .CE( buffer_CE ),
                              .RW( buffer_RW ),
                              .in1( buffer_in1 ),
                              .out1( buffer_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_DivRem_4 SobelFilter_DivRem_4_17( 
                           .in1( SobelFilter_DivRem_4_17_in1 ),
                           .in2( s_reg_6 ),
                           .out1( SobelFilter_DivRem_4_17_out1 ),
                           .clk( i_clk ),
                           .stall( stall0 )
                         );
    SobelFilter_RAM_9X24_1 Gaussian_value( 
                             .DIN( Gaussian_value_DIN ),
                             .CE( Gaussian_value_CE ),
                             .RW( Gaussian_value_RW ),
                             .in1( Gaussian_value_in1 ),
                             .out1( Gaussian_value_out1 ),
                             .clk( i_clk )
                           );
    
    // resource: mux_32bx5i1c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_o_result_data
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025: 
                  begin
                    if (!(SobelFilter_LessThan_2Ux2U_1U_4_33_out1 || SobelFilter_LessThan_2Ux2U_1U_4_36_out1)) 
                      begin
                        o_result_data <= 32'd0000000000;
                      end 
                  end
                7'd028: 
                  begin
                    o_result_data <= {11'b00000000000, SobelFilter_Add_33Ux33U_33U_4_15_out1[32:12]};
                  end
                7'd031: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                      begin
                        o_result_data <= {11'b00000000000, o_result_data[20:0]};
                      end 
                  end
                7'd042, 7'd065, 7'd088: 
                  begin
                    o_result_data <= 32'd0000000000;
                  end
                7'd055: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_166_out1) 
                      begin
                        o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                      end 
                    else 
                      begin
                        if (s_reg_32) 
                          begin
                            /* state73 */
                            o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                          end 
                      end
                  end
                7'd058, 7'd081, 7'd101: 
                  begin
                    o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                  end
                7'd078: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_172_out1) 
                      begin
                        o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                      end 
                    else 
                      begin
                        if (s_reg_32) 
                          begin
                            /* state101 */
                            o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                          end 
                      end
                  end
                7'd098: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_138_out1) 
                      begin
                        o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                      end 
                    else 
                      begin
                        if (s_reg_32) 
                          begin
                            /* state126 */
                            o_result_data <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_busy_req_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_18_out1) 
                      begin
                      end 
                    else 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd1;
                      end
                  end
                7'd019, 7'd037, 7'd060, 7'd083, 7'd103: 
                  begin
                    i_rgb_m_busy_req_0 <= 1'd0;
                  end
                7'd020: 
                  begin
                    i_rgb_m_busy_req_0 <= 1'd1;
                  end
                7'd025: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_33_out1) 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd0;
                      end 
                    else 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_36_out1) 
                          begin
                            i_rgb_m_busy_req_0 <= 1'd0;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i1c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_o_result_m_req_m_trig_req
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_18_out1) 
                      begin
                      end 
                    else 
                      begin
                        o_result_m_req_m_trig_req <= 1'd0;
                      end
                  end
                7'd058, 7'd081, 7'd101: 
                  begin
                    o_result_m_req_m_trig_req <= SobelFilter_Not_1U_1U_1_3_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx3i1c
    always @(SobelFilter_And_1Ux1U_1U_4_184_out1 or SobelFilter_gen_busy_r_4_186_out1[0] or global_state)
      begin : drive_stall0
        case (global_state) 
          7'd020: 
            begin
              stall0 = SobelFilter_gen_busy_r_4_186_out1[0];
            end
          7'd059, 7'd082, 7'd102: 
            begin
              stall0 = SobelFilter_And_1Ux1U_1U_4_184_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_102
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd052, 7'd073, 7'd092: 
                  begin
                    s_reg_102 <= buffer_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_5bx10i1c
    // resource: regr_en_5
    always @(posedge i_clk)
      begin : drive_s_reg_12
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd010: 
                  begin
                    s_reg_12 <= {1'b0, SobelFilter_Mul_2Ux2U_4U_4_9_out1};
                  end
                7'd011: 
                  begin
                    s_reg_12 <= {1'b0, SobelFilter_Mul_2Ux2U_4U_4_9_out1};
                  end
                7'd021, 7'd023: 
                  begin
                    s_reg_12 <= SobelFilter_Add_4Ux2U_5U_4_31_out1;
                  end
                7'd025: 
                  begin
                    s_reg_12 <= 5'd00;
                  end
                7'd031: 
                  begin
                    s_reg_12 <= s_reg_5[4:0];
                  end
                7'd043, 7'd046: 
                  begin
                    s_reg_12 <= SobelFilter_Add_4Ux2U_6S_4_89_out1[4:0];
                  end
                7'd050: 
                  begin
                    s_reg_12 <= SobelFilter_Add_5Ux3U_5U_4_121_out1;
                  end
                7'd066, 7'd069: 
                  begin
                    s_reg_12 <= SobelFilter_Add_4Ux2U_6S_4_91_out1[4:0];
                  end
                7'd073: 
                  begin
                    s_reg_12 <= SobelFilter_Add_5Ux2U_5U_4_122_out1;
                  end
                7'd089, 7'd093: 
                  begin
                    s_reg_12 <= SobelFilter_Add_4Ux2U_6S_4_99_out1[4:0];
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_15
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd012: 
                  begin
                    s_reg_15 <= SobelFilter_LessThan_3Sx3S_1U_4_11_out1;
                  end
                7'd019, 7'd037, 7'd060, 7'd083, 7'd103: 
                  begin
                    s_reg_15 <= SobelFilter_And_1Ux1U_1U_4_21_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_24
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd019, 7'd037, 7'd060, 7'd083, 7'd103: 
                  begin
                    s_reg_24 <= SobelFilter_Add_32Sx1U_32S_4_22_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_3bx7i1c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_26
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd009, 7'd014, 7'd019, 7'd037, 7'd042, 7'd056, 7'd060, 7'd065, 7'd079, 7'd083, 7'd088, 7'd099, 7'd103: 
                  begin
                    s_reg_26 <= 3'd0;
                  end
                7'd013: 
                  begin
                    s_reg_26 <= s_reg_35[2:0];
                  end
                7'd023: 
                  begin
                    s_reg_26 <= {1'b0, SobelFilter_Add_2Ux1U_2U_4_29_out1};
                  end
                7'd025: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_33_out1) 
                      begin
                        s_reg_26 <= {1'b0, s_reg_26[1:0]};
                      end 
                    else 
                      begin
                        s_reg_26 <= 3'd0;
                      end
                  end
                7'd052: 
                  begin
                    s_reg_26 <= SobelFilter_Add_2Ux1U_3U_4_136_out1;
                  end
                7'd075: 
                  begin
                    s_reg_26 <= SobelFilter_Add_2Ux1U_3U_4_137_out1;
                  end
                7'd095: 
                  begin
                    s_reg_26 <= SobelFilter_Add_2Ux1U_3U_4_120_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx4i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_32
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025: 
                  begin
                    s_reg_32 <= SobelFilter_LessThan_32Sx5S_1U_4_20_out1;
                  end
                7'd054: 
                  begin
                    s_reg_32 <= SobelFilter_LessThan_3Sx3S_1U_4_154_out1;
                  end
                7'd077: 
                  begin
                    s_reg_32 <= SobelFilter_LessThan_3Sx3S_1U_4_160_out1;
                  end
                7'd097: 
                  begin
                    s_reg_32 <= SobelFilter_LessThan_3Sx3S_1U_4_130_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_32
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025: 
                  begin
                    wire_s_reg_32 <= SobelFilter_LessThan_32Sx5S_1U_4_20_out1;
                  end
                7'd031: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                      begin
                        /* state43 */
                        wire_s_reg_32 <= s_reg_32;
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_33
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025: 
                  begin
                    s_reg_33 <= SobelFilter_And_1Ux1U_1U_4_43_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_33
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025: 
                  begin
                    wire_s_reg_33 <= SobelFilter_And_1Ux1U_1U_4_43_out1;
                  end
                7'd031: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                      begin
                        wire_s_reg_33 <= s_reg_33;
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx6i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_35
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd010: 
                  begin
                    s_reg_35 <= {{ 3 {SobelFilter_Add_2Ux1U_3U_4_8_out1[2]}}, SobelFilter_Add_2Ux1U_3U_4_8_out1};
                  end
                7'd025: 
                  begin
                    if (s_reg_15 && !SobelFilter_LessThan_32Sx5S_1U_4_20_out1) 
                      begin
                        s_reg_35 <= SobelFilter_Add_6Sx1U_6S_4_45_out1;
                      end 
                    else 
                      begin
                        s_reg_35 <= SobelFilter_Add_6Sx2U_6S_4_44_out1;
                      end
                  end
                7'd027: 
                  begin
                    if (s_reg_32) 
                      begin
                        s_reg_35 <= SobelFilter_Mul_6Sx2U_6S_4_51_out1;
                      end 
                  end
                7'd045: 
                  begin
                    s_reg_35 <= {1'b0, SobelFilter_Add_5Ux3U_5U_4_100_out1};
                  end
                7'd068: 
                  begin
                    s_reg_35 <= {1'b0, SobelFilter_Add_5Ux2U_5U_4_101_out1};
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_21bx4i1c
    // resource: regr_en_21
    always @(posedge i_clk)
      begin : drive_s_reg_38
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd012: 
                  begin
                    s_reg_38 <= {7'b0000000, SobelFilter_Mul_33Sx32U_35S_4_13_out1[33:20]};
                  end
                7'd025: 
                  begin
                    s_reg_38 <= 21'd0000000;
                  end
                7'd030: 
                  begin
                    s_reg_38 <= SobelFilter_Add_33Ux33U_33U_4_15_out1[32:12];
                  end
                7'd053, 7'd076, 7'd096: 
                  begin
                    s_reg_38 <= {5'b00000, SobelFilter_N_Mux_16_2_3_4_127_out1};
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_32bx3i1c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_39
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025: 
                  begin
                    s_reg_39 <= 32'd0000000000;
                  end
                7'd031: 
                  begin
                    s_reg_39 <= {11'b00000000000, SobelFilter_Add_33Ux33U_33U_4_15_out1[32:12]};
                  end
                7'd048, 7'd071, 7'd091: 
                  begin
                    s_reg_39 <= sharpening_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_2bx2i1c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_s_reg_4_slice
        if (i_rst == 1'b0) 
          begin
            s_reg_4_slice <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd014, 7'd056, 7'd079, 7'd099: 
                      begin
                        s_reg_4_slice <= s_reg_9[1:0];
                      end
                    7'd019, 7'd037, 7'd042, 7'd060, 7'd065, 7'd083, 7'd088, 7'd103: 
                      begin
                        s_reg_4_slice <= 2'd0;
                      end
                    7'd025: 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_33_out1) 
                          begin
                          end 
                        else 
                          begin
                            s_reg_4_slice <= s_reg_9[1:0];
                          end
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_41
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd026: 
                  begin
                    s_reg_41 <= SobelFilter_Or_1Ux1U_1U_4_54_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_33bx5i1c
    // resource: regr_en_33
    always @(posedge i_clk)
      begin : drive_s_reg_44
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd026, 7'd028, 7'd030: 
                  begin
                    s_reg_44 <= SobelFilter_Mul_33Sx32U_35S_4_13_out1[32:0];
                  end
                7'd042, 7'd065, 7'd088: 
                  begin
                    s_reg_44 <= 33'd0000000000;
                  end
                7'd053, 7'd077, 7'd097: 
                  begin
                    s_reg_44 <= {SobelFilter_Add_33Ux33U_33U_4_15_out1[31], SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0]};
                  end
                7'd055: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_166_out1) 
                      begin
                        s_reg_44 <= {s_reg_44[31], s_reg_44[31:0]};
                      end 
                  end
                7'd056, 7'd079, 7'd099: 
                  begin
                    s_reg_44 <= {s_reg_44[31], s_reg_44[31:0]};
                  end
                7'd057, 7'd080, 7'd100: 
                  begin
                    s_reg_44 <= SobelFilter_Add_33Ux33U_33U_4_15_out1;
                  end
                7'd078: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_172_out1) 
                      begin
                        s_reg_44 <= {s_reg_44[31], s_reg_44[31:0]};
                      end 
                  end
                7'd098: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_138_out1) 
                      begin
                        s_reg_44 <= {s_reg_44[31], s_reg_44[31:0]};
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_45
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd026: 
                  begin
                    s_reg_45 <= SobelFilter_And_1Ux1U_1U_4_50_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_47
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd027: 
                  begin
                    s_reg_47 <= SobelFilter_Or_1Ux1U_1U_4_54_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_48
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd027: 
                  begin
                    s_reg_48 <= SobelFilter_Not_1U_1U_4_55_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx7i0c
    // resource: regr_en_sc_6
    always @(posedge i_clk)
      begin : drive_s_reg_5
        if (i_rst == 1'b0) 
          begin
            s_reg_5 <= 6'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd013: 
                      begin
                        if (!(SobelFilter_LessThan_3Sx3S_1U_4_14_out1 || s_reg_15)) 
                          begin
                            s_reg_5 <= {s_reg_5[4], s_reg_5[4:0]};
                          end 
                      end
                    7'd017: 
                      begin
                        s_reg_5 <= {SobelFilter_Add_4Ux1U_5U_4_16_out1[4], SobelFilter_Add_4Ux1U_5U_4_16_out1};
                      end
                    7'd018: 
                      begin
                        s_reg_5 <= {s_reg_5[4], s_reg_5[4:0]};
                      end
                    7'd026: 
                      begin
                        s_reg_5 <= {SobelFilter_Add_4Ux1U_5U_4_47_out1[4], SobelFilter_Add_4Ux1U_5U_4_47_out1};
                      end
                    7'd031: 
                      begin
                        if (s_reg_32) 
                          begin
                            s_reg_5 <= SobelFilter_Mul_6Sx2U_6S_4_51_out1;
                          end 
                        else 
                          begin
                            s_reg_5 <= SobelFilter_Sub_6Sx4U_6S_4_34_out1;
                          end
                      end
                    7'd044: 
                      begin
                        s_reg_5 <= {1'b0, SobelFilter_Add_4Ux2U_6S_4_89_out1[4:0]};
                      end
                    7'd067: 
                      begin
                        s_reg_5 <= {1'b0, SobelFilter_Add_4Ux2U_6S_4_91_out1[4:0]};
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_6bx3i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_52
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd029: 
                  begin
                    s_reg_52 <= SobelFilter_Mul_6Sx2U_6S_4_51_out1;
                  end
                7'd030: 
                  begin
                    if (!s_reg_32) 
                      begin
                        s_reg_52 <= SobelFilter_Sub_6Sx4U_6S_4_34_out1;
                      end 
                  end
                7'd033, 7'd038, 7'd061, 7'd084: 
                  begin
                    s_reg_52 <= SobelFilter_Add_6Sx2U_6S_4_72_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_24bx4i0c
    // resource: regr_en_sc_24
    always @(posedge i_clk)
      begin : drive_s_reg_6
        if (i_rst == 1'b0) 
          begin
            s_reg_6 <= 24'd00000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd013: 
                      begin
                        s_reg_6 <= SobelFilter_Add_33Ux33U_33U_4_15_out1[23:0];
                      end
                    7'd020: 
                      begin
                        s_reg_6 <= i_rgb_data;
                      end
                    7'd026: 
                      begin
                        s_reg_6 <= Gaussian_value_out1;
                      end
                    7'd054, 7'd077, 7'd097: 
                      begin
                        s_reg_6 <= SobelFilter_N_Mux_24_2_1_4_135_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_61
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd033, 7'd038, 7'd061, 7'd084: 
                  begin
                    s_reg_61 <= SobelFilter_Add_6Sx1U_6S_4_73_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_32bx4i1c
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_69
        if (i_rst == 1'b0) 
          begin
            s_reg_69 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd037, 7'd083, 7'd103: 
                      begin
                        s_reg_69 <= s_reg_24;
                      end
                    7'd042, 7'd060, 7'd065, 7'd088: 
                      begin
                        s_reg_69 <= 32'd0000000000;
                      end
                    7'd054, 7'd076, 7'd096: 
                      begin
                        s_reg_69 <= SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
                      end
                    7'd055: 
                      begin
                        if (SobelFilter_LessThan_3Sx3S_1U_4_166_out1) 
                          begin
                          end 
                        else 
                          begin
                            if (s_reg_32) 
                              begin
                              end 
                            else 
                              begin
                                /* state75 */
                                s_reg_69 <= SobelFilter_N_Mux_32_2_5_4_143_out1;
                              end
                          end
                      end
                    7'd078: 
                      begin
                        if (SobelFilter_LessThan_3Sx3S_1U_4_172_out1) 
                          begin
                          end 
                        else 
                          begin
                            if (s_reg_32) 
                              begin
                              end 
                            else 
                              begin
                                /* state103 */
                                s_reg_69 <= SobelFilter_N_Mux_32_2_5_4_143_out1;
                              end
                          end
                      end
                    7'd098: 
                      begin
                        if (SobelFilter_LessThan_3Sx3S_1U_4_138_out1) 
                          begin
                          end 
                        else 
                          begin
                            if (s_reg_32) 
                              begin
                              end 
                            else 
                              begin
                                /* state128 */
                                s_reg_69 <= SobelFilter_N_Mux_32_2_5_4_143_out1;
                              end
                          end
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx5i0c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_9
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd009, 7'd014: 
                  begin
                    s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_6_out1;
                  end
                7'd023: 
                  begin
                    s_reg_9 <= {1'b0, SobelFilter_Add_2Ux1U_2U_4_28_out1};
                  end
                7'd042, 7'd056: 
                  begin
                    s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_85_out1;
                  end
                7'd065, 7'd079: 
                  begin
                    s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_86_out1;
                  end
                7'd088, 7'd099: 
                  begin
                    s_reg_9 <= SobelFilter_Add_2Ux1U_3U_4_87_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_92
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd049, 7'd075, 7'd093: 
                  begin
                    s_reg_92 <= buffer_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_96
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd050, 7'd072, 7'd095: 
                  begin
                    s_reg_96 <= buffer_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_4bx10i9c
    always @(SobelFilter_Add_4Ux2U_5S_4_10_out1[3:0] or gs_ctrl_do_filter_h9fe)
      begin : drive_expon_value_in1
        case (gs_ctrl_do_filter_h9fe) 
          4'd01: 
            begin
              expon_value_in1 = 4'd01;
            end
          4'd02: 
            begin
              expon_value_in1 = 4'd02;
            end
          4'd03: 
            begin
              expon_value_in1 = 4'd03;
            end
          4'd04: 
            begin
              expon_value_in1 = 4'd04;
            end
          4'd05: 
            begin
              expon_value_in1 = 4'd05;
            end
          4'd06: 
            begin
              expon_value_in1 = 4'd06;
            end
          4'd07: 
            begin
              expon_value_in1 = 4'd07;
            end
          4'd08: 
            begin
              expon_value_in1 = 4'd08;
            end
          4'd09: 
            begin
              expon_value_in1 = SobelFilter_Add_4Ux2U_5S_4_10_out1[3:0];
            end
          default: 
            begin
              expon_value_in1 = 4'd00;
            end
        endcase
      end
    
    // resource: mux_24bx3i3c
    always @(gs_ctrl_do_filter_hba)
      begin : drive_expon_value_DIN
        case (gs_ctrl_do_filter_hba) 
          2'd1: 
            begin
              expon_value_DIN = 24'd00480073;
            end
          2'd2: 
            begin
              expon_value_DIN = 24'd01048576;
            end
          default: 
            begin
              expon_value_DIN = 24'd00219793;
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h9ff)
      begin : drive_expon_value_CE
        if (stall0) 
          begin
            expon_value_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h9ff) 
              begin
                expon_value_CE = 1'b1;
              end 
            else 
              begin
                expon_value_CE = 1'b0;
              end
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h1ff)
      begin : drive_expon_value_RW
        if (stall0) 
          begin
            expon_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h1ff) 
              begin
                expon_value_RW = 1'b1;
              end 
            else 
              begin
                expon_value_RW = 1'b0;
              end
          end
      end
    
    // resource: mux_2bx2i0c
    always @(s_reg_9[1:0] or gs_ctrl_do_filter_h4000 or s_reg_4_slice)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_6_in2
        if (gs_ctrl_do_filter_h4000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_6_in2 = s_reg_9[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_6_in2 = s_reg_4_slice;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_6
    assign SobelFilter_Add_2Ux1U_3U_4_6_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_6_in2} + 3'd1;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_9
    assign SobelFilter_Mul_2Ux2U_4U_4_9_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_8
    assign SobelFilter_Add_2Ux1U_3U_4_8_out1 = {1'b0, s_reg_26[1:0]} + 3'd1;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_10
    assign SobelFilter_Add_4Ux2U_5S_4_10_out1 = {1'b0, s_reg_12[3:0]} + {3'b000, s_reg_26[1:0]};
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_11
    assign SobelFilter_LessThan_3Sx3S_1U_4_11_out1 = s_reg_9[2] ^ s_reg_9 < 3'd3;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_12
    assign SobelFilter_Add_4Ux2U_5S_4_12_out1 = {1'b0, s_reg_12[3:0]} + {3'b000, s_reg_26[1:0]};
    
    // resource: mux_32bx5i0c
    always @(s_reg_102 or s_reg_92 or s_reg_96 or expon_value_out1 or val_value_out1 or gs_ctrl_do_filter_he0000754007000)
      begin : drive_SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice
        case (gs_ctrl_do_filter_he0000754007000) 
          3'd1: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = {8'b00000000, val_value_out1};
            end
          3'd2: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = s_reg_92;
            end
          3'd3: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = s_reg_96;
            end
          3'd4: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = s_reg_102;
            end
          default: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice = {8'b00000000, expon_value_out1};
            end
        endcase
      end
    
    // resource: mux_32bx4i1c
    always @(s_reg_39 or s_reg_6 or Gaussian_value_out1 or gs_ctrl_do_filter_he00007540070000)
      begin : drive_SobelFilter_Mul_33Sx32U_35S_4_13_in1
        case (gs_ctrl_do_filter_he00007540070000) 
          2'd1: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in1 = {8'b00000000, Gaussian_value_out1};
            end
          2'd2: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in1 = {8'b00000000, s_reg_6};
            end
          2'd3: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in1 = s_reg_39;
            end
          default: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_13_in1 = 32'd0000001019;
            end
        endcase
      end
    
    // resource: SobelFilter_Mul_33Sx32U_35S_4  instance: SobelFilter_Mul_33Sx32U_35S_4_13
    assign SobelFilter_Mul_33Sx32U_35S_4_13_out1 = {3'd0, SobelFilter_Mul_33Sx32U_35S_4_13_in2_slice} * {3'b000, SobelFilter_Mul_33Sx32U_35S_4_13_in1};
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_14
    assign SobelFilter_LessThan_3Sx3S_1U_4_14_out1 = s_reg_35[2] ^ s_reg_35[2:0] < 3'd3;
    
    // resource: mux_33bx7i0c
    always @(o_result_data[20:0] or s_reg_38 or s_reg_39[20:0] or s_reg_6 or s_reg_69 or SobelFilter_Mul_33Sx32U_35S_4_13_out1[31:0] or gs_ctrl_do_filter_h6e00037d0037000)
      begin : drive_SobelFilter_Add_33Ux33U_33U_4_15_in2
        case (gs_ctrl_do_filter_h6e00037d0037000) 
          3'd1: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {o_result_data[20:0], 12'd0000};
            end
          3'd2: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {s_reg_38, 12'd0000};
            end
          3'd3: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {s_reg_39[20:0], 12'd0000};
            end
          3'd4: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {1'b0, SobelFilter_Mul_33Sx32U_35S_4_13_out1[31:0]};
            end
          3'd5: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {{s_reg_38[15], s_reg_38[15:0]}, 16'd00000};
            end
          3'd6: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {s_reg_69[31], s_reg_69};
            end
          default: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in2 = {9'b000000000, s_reg_6};
            end
        endcase
      end
    
    // resource: mux_33bx6i0c
    always @(o_result_data or s_reg_38[13:0] or s_reg_44 or s_reg_6 or s_reg_69 or gs_ctrl_do_filter_h6e00037d00370000)
      begin : drive_SobelFilter_Add_33Ux33U_33U_4_15_in1
        case (gs_ctrl_do_filter_h6e00037d00370000) 
          3'd1: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in1 = s_reg_44;
            end
          3'd2: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in1 = {s_reg_44[31], s_reg_44[31:0]};
            end
          3'd3: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in1 = {s_reg_69[31], s_reg_69};
            end
          3'd4: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in1 = {o_result_data[31], o_result_data};
            end
          3'd5: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in1 = {{s_reg_6[23], s_reg_6}, 8'd000};
            end
          default: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_15_in1 = {19'b0000000000000000000, s_reg_38[13:0]};
            end
        endcase
      end
    
    // resource: SobelFilter_Add_33Ux33U_33U_4  instance: SobelFilter_Add_33Ux33U_33U_4_15
    assign SobelFilter_Add_33Ux33U_33U_4_15_out1 = SobelFilter_Add_33Ux33U_33U_4_15_in2 + SobelFilter_Add_33Ux33U_33U_4_15_in1;
    
    // resource: mux_4bx3i1c
    always @(s_reg_5[3:0] or SobelFilter_Add_4Ux2U_5S_4_12_out1[3:0] or gs_ctrl_do_filter_h82062000)
      begin : drive_Gaussian_value_in1
        case (gs_ctrl_do_filter_h82062000) 
          2'd1: 
            begin
              Gaussian_value_in1 = s_reg_5[3:0];
            end
          2'd2: 
            begin
              Gaussian_value_in1 = 4'd00;
            end
          default: 
            begin
              Gaussian_value_in1 = SobelFilter_Add_4Ux2U_5S_4_12_out1[3:0];
            end
        endcase
      end
    
    // resource: mux_24bx2i0c
    always @(SobelFilter_Mul_33Sx32U_35S_4_13_out1[33:20] or SobelFilter_DivRem_4_17_out1[36:13] or gs_ctrl_do_filter_h20000)
      begin : drive_Gaussian_value_DIN
        if (gs_ctrl_do_filter_h20000) 
          begin
            Gaussian_value_DIN = SobelFilter_DivRem_4_17_out1[36:13];
          end 
        else 
          begin
            Gaussian_value_DIN = {10'b0000000000, SobelFilter_Mul_33Sx32U_35S_4_13_out1[33:20]};
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or s_reg_15 or SobelFilter_LessThan_3Sx3S_1U_4_14_out1 or SobelFilter_LessThan_5Sx5S_1U_4_18_out1 or SobelFilter_LessThan_2Ux2U_1U_4_33_out1 or SobelFilter_LessThan_2Ux2U_1U_4_36_out1 or SobelFilter_LessThan_5Sx5S_1U_4_64_out1 or gs_ctrl_do_filter_h82063000)
      begin : drive_Gaussian_value_CE
        if (stall0) 
          begin
            Gaussian_value_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h82063000) 
              3'd1: 
                begin
                  Gaussian_value_CE = 1'b1;
                end
              3'd2: 
                begin
                  if (!(SobelFilter_LessThan_3Sx3S_1U_4_14_out1 || s_reg_15)) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd3: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_18_out1) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd4: 
                begin
                  if (!(SobelFilter_LessThan_2Ux2U_1U_4_33_out1 || SobelFilter_LessThan_2Ux2U_1U_4_36_out1)) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd5: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              default: 
                begin
                  Gaussian_value_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h21000)
      begin : drive_Gaussian_value_RW
        if (stall0) 
          begin
            Gaussian_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h21000) 
              begin
                Gaussian_value_RW = 1'b1;
              end 
            else 
              begin
                Gaussian_value_RW = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_16
    assign SobelFilter_Add_4Ux1U_5U_4_16_out1 = {1'b0, s_reg_5[3:0]} + 5'd01;
    
    // instance: drive_SobelFilter_DivRem_4_17_in1
    assign SobelFilter_DivRem_4_17_in1 = {Gaussian_value_out1, 25'd00000000};
    
    // resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_18
    assign SobelFilter_LessThan_5Sx5S_1U_4_18_out1 = s_reg_5[4] ^ s_reg_5[4:0] < 5'd09;
    
    // resource: mux_32bx3i1c
    always @(s_reg_24 or s_reg_69 or gs_ctrl_do_filter_h100000a000080000)
      begin : drive_SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2
        case (gs_ctrl_do_filter_h100000a000080000) 
          2'd1: 
            begin
              SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 = s_reg_24;
            end
          2'd2: 
            begin
              SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 = 32'd0000000000;
            end
          default: 
            begin
              SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 = s_reg_69;
            end
        endcase
      end
    
    // resource: SobelFilter_GreaterThanEQ_32Sx4S_1U_4  instance: SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19
    assign SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1 = SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2[31] ^ SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 >= 32'd0000000005;
    
    // resource: mux_4bx2i2c
    always @(gs_ctrl_do_filter_h2000000)
      begin : drive_SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice
        if (gs_ctrl_do_filter_h2000000) 
          begin
            SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice = 4'd05;
          end 
        else 
          begin
            SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice = 4'd10;
          end
      end
    
    // resource: SobelFilter_LessThan_32Sx5S_1U_4  instance: SobelFilter_LessThan_32Sx5S_1U_4_20
    assign SobelFilter_LessThan_32Sx5S_1U_4_20_out1 = SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2[31] ^ SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 < {28'd000000000, SobelFilter_LessThan_32Sx5S_1U_4_20_in1_slice};
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_21
    assign SobelFilter_And_1Ux1U_1U_4_21_out1 = SobelFilter_LessThan_32Sx5S_1U_4_20_out1 & SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_out1;
    
    // resource: SobelFilter_Add_32Sx1U_32S_4  instance: SobelFilter_Add_32Sx1U_32S_4_22
    assign SobelFilter_Add_32Sx1U_32S_4_22_out1 = SobelFilter_GreaterThanEQ_32Sx4S_1U_4_19_in2 + 32'd0000000001;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_30
    assign SobelFilter_Mul_2Ux2U_4U_4_30_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_31
    assign SobelFilter_Add_4Ux2U_5U_4_31_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_30_out1} + {3'b000, s_reg_26[1:0]};
    
    // resource: mux_5bx7i1c
    always @(s_reg_5[3:0] or SobelFilter_Add_4Ux2U_5U_4_31_out1 or SobelFilter_Add_5Ux5U_5U_4_27_out1 or SobelFilter_Add_5Ux5U_5U_4_32_out1 or SobelFilter_Add_4Ux4U_5U_4_53_out1 or SobelFilter_Add_5Ux5U_5U_4_59_out1 or gs_ctrl_do_filter_hab400000)
      begin : drive_val_value_in1
        case (gs_ctrl_do_filter_hab400000) 
          3'd1: 
            begin
              val_value_in1 = SobelFilter_Add_5Ux5U_5U_4_27_out1;
            end
          3'd2: 
            begin
              val_value_in1 = SobelFilter_Add_5Ux5U_5U_4_32_out1;
            end
          3'd3: 
            begin
              val_value_in1 = 5'd00;
            end
          3'd4: 
            begin
              val_value_in1 = SobelFilter_Add_4Ux4U_5U_4_53_out1;
            end
          3'd5: 
            begin
              val_value_in1 = SobelFilter_Add_5Ux5U_5U_4_59_out1;
            end
          3'd6: 
            begin
              val_value_in1 = {1'b0, s_reg_5[3:0]};
            end
          default: 
            begin
              val_value_in1 = SobelFilter_Add_4Ux2U_5U_4_31_out1;
            end
        endcase
      end
    
    // resource: mux_24bx3i0c
    always @(i_rgb_data[7:0] or s_reg_6[23:8] or gs_ctrl_do_filter_h1400000)
      begin : drive_val_value_DIN
        case (gs_ctrl_do_filter_h1400000) 
          2'd1: 
            begin
              val_value_DIN = {{4'b0000, s_reg_6[15:8]}, 12'd0000};
            end
          2'd2: 
            begin
              val_value_DIN = {{4'b0000, s_reg_6[23:16]}, 12'd0000};
            end
          default: 
            begin
              val_value_DIN = {{4'b0000, i_rgb_data[7:0]}, 12'd0000};
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or SobelFilter_LessThan_2Ux2U_1U_4_33_out1 or SobelFilter_LessThan_2Ux2U_1U_4_36_out1 or SobelFilter_LessThan_5Sx5S_1U_4_64_out1 or gs_ctrl_do_filter_hab500000)
      begin : drive_val_value_CE
        if (stall0) 
          begin
            val_value_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_hab500000) 
              2'd1: 
                begin
                  val_value_CE = 1'b1;
                end
              2'd2: 
                begin
                  if (!(SobelFilter_LessThan_2Ux2U_1U_4_33_out1 || SobelFilter_LessThan_2Ux2U_1U_4_36_out1)) 
                    begin
                      val_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      val_value_CE = 1'b0;
                    end
                end
              2'd3: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                    begin
                      val_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      val_value_CE = 1'b0;
                    end
                end
              default: 
                begin
                  val_value_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h1500000)
      begin : drive_val_value_RW
        if (stall0) 
          begin
            val_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h1500000) 
              begin
                val_value_RW = 1'b1;
              end 
            else 
              begin
                val_value_RW = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Add_5Ux5U_5U_4  instance: SobelFilter_Add_5Ux5U_5U_4_27
    assign SobelFilter_Add_5Ux5U_5U_4_27_out1 = s_reg_12 + 5'd09;
    
    // resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_28
    assign SobelFilter_Add_2Ux1U_2U_4_28_out1 = s_reg_4_slice + 2'd1;
    
    // resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_29
    assign SobelFilter_Add_2Ux1U_2U_4_29_out1 = s_reg_26[1:0] + 2'd1;
    
    // resource: SobelFilter_Add_5Ux5U_5U_4  instance: SobelFilter_Add_5Ux5U_5U_4_32
    assign SobelFilter_Add_5Ux5U_5U_4_32_out1 = s_reg_12 + 5'd18;
    
    // resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_33
    assign SobelFilter_LessThan_2Ux2U_1U_4_33_out1 = s_reg_26[1:0] < 2'd3;
    
    // resource: mux_4bx2i2c
    always @(s_reg_15)
      begin : drive_SobelFilter_Sub_6Sx4U_6S_4_34_in1
        if (s_reg_15) 
          begin
            SobelFilter_Sub_6Sx4U_6S_4_34_in1 = 4'd05;
          end 
        else 
          begin
            SobelFilter_Sub_6Sx4U_6S_4_34_in1 = 4'd10;
          end
      end
    
    // resource: SobelFilter_Sub_6Sx4U_6S_4  instance: SobelFilter_Sub_6Sx4U_6S_4_34
    assign SobelFilter_Sub_6Sx4U_6S_4_34_out1 = s_reg_69[5:0] - {2'b00, SobelFilter_Sub_6Sx4U_6S_4_34_in1};
    
    // resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_36
    assign SobelFilter_LessThan_2Ux2U_1U_4_36_out1 = s_reg_9[1:0] < 2'd3;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_38
    assign SobelFilter_Mul_6Sx2U_6S_4_38_out1 = {{ 26 {SobelFilter_Sub_6Sx4U_6S_4_34_out1[5]}}, SobelFilter_Sub_6Sx4U_6S_4_34_out1} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_39
    assign SobelFilter_Mul_6Sx2U_6S_4_39_out1 = {{ 26 {SobelFilter_Sub_6Sx4U_6S_4_34_out1[5]}}, SobelFilter_Sub_6Sx4U_6S_4_34_out1} * 6'd03;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_40
    assign SobelFilter_Not_1U_1U_4_40_out1 = !SobelFilter_LessThan_32Sx5S_1U_4_20_out1;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_43
    assign SobelFilter_And_1Ux1U_1U_4_43_out1 = SobelFilter_Not_1U_1U_4_40_out1 & s_reg_15;
    
    // resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_44
    assign SobelFilter_Add_6Sx2U_6S_4_44_out1 = SobelFilter_Mul_6Sx2U_6S_4_38_out1 + 6'd02;
    
    // resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_45
    assign SobelFilter_Add_6Sx1U_6S_4_45_out1 = SobelFilter_Mul_6Sx2U_6S_4_39_out1 + 6'd01;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_54
    assign SobelFilter_Or_1Ux1U_1U_4_54_out1 = s_reg_15 | s_reg_32;
    
    // resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_47
    assign SobelFilter_Add_4Ux1U_5U_4_47_out1 = {1'b0, s_reg_12[3:0]} + 5'd01;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_48
    assign SobelFilter_Not_1U_1U_4_48_out1 = !s_reg_32;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_50
    assign SobelFilter_And_1Ux1U_1U_4_50_out1 = SobelFilter_Not_1U_1U_4_48_out1 & s_reg_15;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_51
    assign SobelFilter_Mul_6Sx2U_6S_4_51_out1 = {{ 26 {s_reg_69[5]}}, s_reg_69[5:0]} * 6'd03;
    
    // resource: SobelFilter_Add_4Ux4U_5U_4  instance: SobelFilter_Add_4Ux4U_5U_4_53
    assign SobelFilter_Add_4Ux4U_5U_4_53_out1 = {1'b0, s_reg_12[3:0]} + 5'd09;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_55
    assign SobelFilter_Not_1U_1U_4_55_out1 = !SobelFilter_Or_1Ux1U_1U_4_54_out1;
    
    // resource: SobelFilter_Add_5Ux5U_5U_4  instance: SobelFilter_Add_5Ux5U_5U_4_59
    assign SobelFilter_Add_5Ux5U_5U_4_59_out1 = {1'b0, s_reg_12[3:0]} + 5'd18;
    
    // resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_64
    assign SobelFilter_LessThan_5Sx5S_1U_4_64_out1 = s_reg_5[4] ^ s_reg_5[4:0] < 5'd09;
    
    // resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_69
    assign SobelFilter_Add_6Ux4U_7S_4_69_out1 = {1'b0, s_reg_52} + 7'd015;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_70
    assign SobelFilter_Mul_6Sx2U_6S_4_70_out1 = {{ 26 {s_reg_52[5]}}, s_reg_52} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_71
    assign SobelFilter_Mul_6Sx2U_6S_4_71_out1 = {{ 26 {s_reg_52[5]}}, s_reg_52} * 6'd03;
    
    // resource: mux_6bx18i0c
    always @(s_reg_32 or wire_s_reg_32 or wire_s_reg_33 or s_reg_35 or s_reg_45 or SobelFilter_Add_6Ux4U_7S_4_69_out1[5:0] or SobelFilter_Add_6Ux5U_7S_4_76_out1[5:0] or SobelFilter_Add_6Sx2U_6S_4_77_out1 or SobelFilter_Add_6Sx1U_6S_4_78_out1 or SobelFilter_Add_6Ux4U_7S_4_80_out1[5:0] or SobelFilter_Add_6Ux4U_7S_4_81_out1[5:0] or SobelFilter_Add_6Ux5U_7S_4_83_out1[5:0] or SobelFilter_Add_6Ux5U_7S_4_84_out1[5:0] or SobelFilter_Add_4Ux2U_6S_4_99_out1[4:0] or SobelFilter_Add_5Ux4U_6U_4_108_out1 or 
SobelFilter_Add_5Ux3U_5U_4_115_out1
     or SobelFilter_Add_5Ux2U_5U_4_116_out1 or SobelFilter_Add_5Ux5U_6U_4_117_out1 or SobelFilter_Add_5Ux4U_6U_4_118_out1 or SobelFilter_Add_5Ux4U_6U_4_119_out1 or SobelFilter_Add_5Ux5U_6U_4_128_out1 or SobelFilter_Add_5Ux5U_6U_4_129_out1 or gs_ctrl_do_filter_he00b03de58f00581)
      begin : drive_buffer_in1
        case (gs_ctrl_do_filter_he00b03de58f00581) 
          4'd01: 
            begin
              buffer_in1 = SobelFilter_Add_6Ux4U_7S_4_69_out1[5:0];
            end
          4'd02: 
            begin
              if (s_reg_32 && wire_s_reg_32) 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux5U_7S_4_76_out1[5:0];
                end 
              else 
                begin
                  if (s_reg_45 && !s_reg_32) 
                    begin
                      buffer_in1 = SobelFilter_Add_6Sx1U_6S_4_78_out1;
                    end 
                  else 
                    begin
                      buffer_in1 = SobelFilter_Add_6Sx2U_6S_4_77_out1;
                    end
                end
            end
          4'd03: 
            begin
              if (s_reg_45 && wire_s_reg_33) 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux4U_7S_4_81_out1[5:0];
                end 
              else 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux4U_7S_4_80_out1[5:0];
                end
            end
          4'd04: 
            begin
              if (s_reg_45 && wire_s_reg_33) 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux5U_7S_4_84_out1[5:0];
                end 
              else 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux5U_7S_4_83_out1[5:0];
                end
            end
          4'd05: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_5Ux3U_5U_4_115_out1};
            end
          4'd06: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_118_out1;
            end
          4'd07: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_128_out1;
            end
          4'd08: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_5Ux2U_5U_4_116_out1};
            end
          4'd09: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_119_out1;
            end
          4'd10: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_129_out1;
            end
          4'd11: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_4Ux2U_6S_4_99_out1[4:0]};
            end
          4'd12: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_108_out1;
            end
          4'd13: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_117_out1;
            end
          default: 
            begin
              buffer_in1 = s_reg_35;
            end
        endcase
      end
    
    // resource: mux_32bx3i0c
    always @(o_result_data[20:12] or s_reg_32 or wire_s_reg_32 or s_reg_38[20:12] or s_reg_39[20:12] or gs_ctrl_do_filter_he00003de00f00001)
      begin : drive_buffer_DIN
        case (gs_ctrl_do_filter_he00003de00f00001) 
          2'd1: 
            begin
              buffer_DIN = {23'b00000000000000000000000, s_reg_38[20:12]};
            end
          2'd2: 
            begin
              if (s_reg_32 && wire_s_reg_32) 
                begin
                  buffer_DIN = {23'b00000000000000000000000, s_reg_39[20:12]};
                end 
              else 
                begin
                  buffer_DIN = {23'b00000000000000000000000, o_result_data[20:12]};
                end
            end
          2'd3: 
            begin
              buffer_DIN = {23'b00000000000000000000000, s_reg_39[20:12]};
            end
          default: 
            begin
              buffer_DIN = {23'b00000000000000000000000, o_result_data[20:12]};
            end
        endcase
      end
    
    // resource: mux_1bx8i2c
    always @(stall0 or s_reg_24 or s_reg_32 or wire_s_reg_32 or s_reg_33 or wire_s_reg_33 or s_reg_45 or s_reg_48 or SobelFilter_LessThan_5Sx5S_1U_4_64_out1 or SobelFilter_Not_1U_1U_4_79_out1 or SobelFilter_Not_1U_1U_4_82_out1 or gs_ctrl_do_filter_he00b03dfd8f00581)
      begin : drive_buffer_CE
        if (stall0) 
          begin
            buffer_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_he00b03dfd8f00581) 
              4'd01: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                    begin
                      buffer_CE = 1'b0;
                    end 
                  else 
                    begin
                      case (s_reg_24) 
                        32'd0000000013, 32'd0000000014, 32'd0000000015: 
                          begin
                            if (s_reg_32 && wire_s_reg_32) 
                              begin
                                buffer_CE = s_reg_32;
                              end 
                            else 
                              begin
                                buffer_CE = 1'b0;
                              end
                          end
                        default: 
                          begin
                            buffer_CE = 1'b0;
                          end
                      endcase
                    end
                end
              4'd02: 
                begin
                  if (s_reg_32 && wire_s_reg_32) 
                    begin
                      buffer_CE = s_reg_32;
                    end 
                  else 
                    begin
                      buffer_CE = 1'b0;
                    end
                end
              4'd03: 
                begin
                  if (s_reg_32 && wire_s_reg_32) 
                    begin
                      buffer_CE = s_reg_32;
                    end 
                  else 
                    begin
                      if (s_reg_45 && !s_reg_32) 
                        begin
                          buffer_CE = s_reg_45;
                        end 
                      else 
                        begin
                          if (s_reg_48 && !s_reg_32) 
                            begin
                              buffer_CE = s_reg_48;
                            end 
                          else 
                            begin
                              buffer_CE = 1'b0;
                            end
                        end
                    end
                end
              4'd04: 
                begin
                  if (s_reg_45 && wire_s_reg_33) 
                    begin
                      buffer_CE = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_79_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_79_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd05: 
                begin
                  if (s_reg_45 && wire_s_reg_33) 
                    begin
                      buffer_CE = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_82_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_82_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd06: 
                begin
                  if (s_reg_45 && s_reg_33 && wire_s_reg_33) 
                    begin
                      buffer_CE = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_79_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_79_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd07: 
                begin
                  if (s_reg_45 && s_reg_33 && wire_s_reg_33) 
                    begin
                      buffer_CE = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_82_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_82_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd08: 
                begin
                  buffer_CE = 1'b1;
                end
              default: 
                begin
                  buffer_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx7i1c
    always @(stall0 or s_reg_24 or s_reg_32 or wire_s_reg_32 or s_reg_33 or wire_s_reg_33 or s_reg_45 or s_reg_48 or SobelFilter_LessThan_5Sx5S_1U_4_64_out1 or SobelFilter_Not_1U_1U_4_79_out1 or SobelFilter_Not_1U_1U_4_82_out1 or gs_ctrl_do_filter_he00003df80f00001)
      begin : drive_buffer_RW
        if (stall0) 
          begin
            buffer_RW = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_he00003df80f00001) 
              3'd1: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                    begin
                      buffer_RW = 1'b0;
                    end 
                  else 
                    begin
                      case (s_reg_24) 
                        32'd0000000013, 32'd0000000014, 32'd0000000015: 
                          begin
                            if (s_reg_32 && wire_s_reg_32) 
                              begin
                                buffer_RW = s_reg_32;
                              end 
                            else 
                              begin
                                buffer_RW = 1'b0;
                              end
                          end
                        default: 
                          begin
                            buffer_RW = 1'b0;
                          end
                      endcase
                    end
                end
              3'd2: 
                begin
                  if (s_reg_32 && wire_s_reg_32) 
                    begin
                      buffer_RW = s_reg_32;
                    end 
                  else 
                    begin
                      buffer_RW = 1'b0;
                    end
                end
              3'd3: 
                begin
                  if (s_reg_32 && wire_s_reg_32) 
                    begin
                      buffer_RW = s_reg_32;
                    end 
                  else 
                    begin
                      if (s_reg_45 && !s_reg_32) 
                        begin
                          buffer_RW = s_reg_45;
                        end 
                      else 
                        begin
                          if (s_reg_48 && !s_reg_32) 
                            begin
                              buffer_RW = s_reg_48;
                            end 
                          else 
                            begin
                              buffer_RW = 1'b0;
                            end
                        end
                    end
                end
              3'd4: 
                begin
                  if (s_reg_45 && wire_s_reg_33) 
                    begin
                      buffer_RW = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_79_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_79_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd5: 
                begin
                  if (s_reg_45 && wire_s_reg_33) 
                    begin
                      buffer_RW = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_82_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_82_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd6: 
                begin
                  if (s_reg_45 && s_reg_33 && wire_s_reg_33) 
                    begin
                      buffer_RW = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_79_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_79_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd7: 
                begin
                  if (s_reg_45 && s_reg_33 && wire_s_reg_33) 
                    begin
                      buffer_RW = s_reg_33;
                    end 
                  else 
                    begin
                      if (s_reg_48 && SobelFilter_Not_1U_1U_4_82_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_82_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              default: 
                begin
                  buffer_RW = 1'b0;
                end
            endcase
          end
      end
    
    // resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_72
    assign SobelFilter_Add_6Sx2U_6S_4_72_out1 = SobelFilter_Mul_6Sx2U_6S_4_70_out1 + 6'd02;
    
    // resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_73
    assign SobelFilter_Add_6Sx1U_6S_4_73_out1 = SobelFilter_Mul_6Sx2U_6S_4_71_out1 + 6'd01;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_74
    assign SobelFilter_Mul_6Sx2U_6S_4_74_out1 = {{ 26 {s_reg_5[5]}}, s_reg_5} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_75
    assign SobelFilter_Mul_6Sx2U_6S_4_75_out1 = {{ 26 {s_reg_5[5]}}, s_reg_5} * 6'd03;
    
    // resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_76
    assign SobelFilter_Add_6Ux5U_7S_4_76_out1 = {1'b0, s_reg_5} + 7'd030;
    
    // resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_77
    assign SobelFilter_Add_6Sx2U_6S_4_77_out1 = SobelFilter_Mul_6Sx2U_6S_4_74_out1 + 6'd02;
    
    // resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_78
    assign SobelFilter_Add_6Sx1U_6S_4_78_out1 = SobelFilter_Mul_6Sx2U_6S_4_75_out1 + 6'd01;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_79
    assign SobelFilter_Not_1U_1U_4_79_out1 = !s_reg_41;
    
    // resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_80
    assign SobelFilter_Add_6Ux4U_7S_4_80_out1 = {1'b0, s_reg_35} + 7'd015;
    
    // resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_81
    assign SobelFilter_Add_6Ux4U_7S_4_81_out1 = {1'b0, s_reg_35} + 7'd015;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_82
    assign SobelFilter_Not_1U_1U_4_82_out1 = !s_reg_47;
    
    // resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_83
    assign SobelFilter_Add_6Ux5U_7S_4_83_out1 = {1'b0, s_reg_52} + 7'd030;
    
    // resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_84
    assign SobelFilter_Add_6Ux5U_7S_4_84_out1 = {1'b0, s_reg_61} + 7'd030;
    
    // resource: mux_2bx2i1c
    always @(s_reg_9[1:0] or gs_ctrl_do_filter_h100000000000000)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_85_in2
        if (gs_ctrl_do_filter_h100000000000000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_85_in2 = s_reg_9[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_85_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_85
    assign SobelFilter_Add_2Ux1U_3U_4_85_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_85_in2} + 3'd1;
    
    // resource: mux_2bx2i1c
    always @(s_reg_9[1:0] or gs_ctrl_do_filter_h8000)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_86_in2
        if (gs_ctrl_do_filter_h8000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_86_in2 = s_reg_9[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_86_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_86
    assign SobelFilter_Add_2Ux1U_3U_4_86_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_86_in2} + 3'd1;
    
    // resource: mux_2bx2i1c
    always @(s_reg_9[1:0] or gs_ctrl_do_filter_h800000000)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_87_in2
        if (gs_ctrl_do_filter_h800000000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_87_in2 = s_reg_9[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_87_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_87
    assign SobelFilter_Add_2Ux1U_3U_4_87_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_87_in2} + 3'd1;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_88
    assign SobelFilter_Mul_2Ux2U_4U_4_88_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_6S_4  instance: SobelFilter_Add_4Ux2U_6S_4_89
    assign SobelFilter_Add_4Ux2U_6S_4_89_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_88_out1} + {4'b0000, s_reg_26[1:0]};
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_90
    assign SobelFilter_Mul_2Ux2U_4U_4_90_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_6S_4  instance: SobelFilter_Add_4Ux2U_6S_4_91
    assign SobelFilter_Add_4Ux2U_6S_4_91_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_90_out1} + {4'b0000, s_reg_26[1:0]};
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_98
    assign SobelFilter_Mul_2Ux2U_4U_4_98_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_6S_4  instance: SobelFilter_Add_4Ux2U_6S_4_99
    assign SobelFilter_Add_4Ux2U_6S_4_99_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_98_out1} + {4'b0000, s_reg_26[1:0]};
    
    // resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_100
    assign SobelFilter_Add_5Ux3U_5U_4_100_out1 = s_reg_12 + 5'd06;
    
    // resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_101
    assign SobelFilter_Add_5Ux2U_5U_4_101_out1 = s_reg_12 + 5'd03;
    
    // resource: mux_4bx3i0c
    always @(SobelFilter_Add_4Ux2U_6S_4_89_out1[3:0] or SobelFilter_Add_4Ux2U_6S_4_91_out1[3:0] or SobelFilter_Add_4Ux2U_6S_4_99_out1[3:0] or gs_ctrl_do_filter_h4000040)
      begin : drive_sharpening_in1
        case (gs_ctrl_do_filter_h4000040) 
          2'd1: 
            begin
              sharpening_in1 = SobelFilter_Add_4Ux2U_6S_4_91_out1[3:0];
            end
          2'd2: 
            begin
              sharpening_in1 = SobelFilter_Add_4Ux2U_6S_4_99_out1[3:0];
            end
          default: 
            begin
              sharpening_in1 = SobelFilter_Add_4Ux2U_6S_4_89_out1[3:0];
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h800004000040)
      begin : drive_sharpening_CE
        if (stall0) 
          begin
            sharpening_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h800004000040) 
              begin
                sharpening_CE = 1'b1;
              end 
            else 
              begin
                sharpening_CE = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_108
    assign SobelFilter_Add_5Ux4U_6U_4_108_out1 = {1'b0, s_reg_12} + 6'd15;
    
    // resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_115
    assign SobelFilter_Add_5Ux3U_5U_4_115_out1 = s_reg_5[4:0] + 5'd06;
    
    // resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_116
    assign SobelFilter_Add_5Ux2U_5U_4_116_out1 = s_reg_5[4:0] + 5'd03;
    
    // resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_117
    assign SobelFilter_Add_5Ux5U_6U_4_117_out1 = {1'b0, s_reg_12} + 6'd30;
    
    // resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_118
    assign SobelFilter_Add_5Ux4U_6U_4_118_out1 = {1'b0, s_reg_35[4:0]} + 6'd15;
    
    // resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_119
    assign SobelFilter_Add_5Ux4U_6U_4_119_out1 = {1'b0, s_reg_35[4:0]} + 6'd15;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_120
    assign SobelFilter_Add_2Ux1U_3U_4_120_out1 = {1'b0, s_reg_26[1:0]} + 3'd1;
    
    // resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_121
    assign SobelFilter_Add_5Ux3U_5U_4_121_out1 = s_reg_12 + 5'd06;
    
    // resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_122
    assign SobelFilter_Add_5Ux2U_5U_4_122_out1 = s_reg_12 + 5'd03;
    
    // resource: SobelFilter_GreaterThan_32Sx9S_1U_4  instance: SobelFilter_GreaterThan_32Sx9S_1U_4_133
    assign SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 = SobelFilter_Add_33Ux33U_33U_4_15_out1[31] ^ SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0] > 32'd0000000255;
    
    // instance: drive_SobelFilter_N_Mux_16_2_2_4_126_ctrl1
    assign SobelFilter_N_Mux_16_2_2_4_126_ctrl1 = SobelFilter_Add_33Ux33U_33U_4_15_out1[31];
    
    // resource: SobelFilter_N_Mux_16_2_2_4
    always @(SobelFilter_Add_33Ux33U_33U_4_15_out1[15:0] or SobelFilter_N_Mux_16_2_2_4_126_ctrl1)
      begin : SobelFilter_N_Mux_16_2_2_4_126
        if (SobelFilter_N_Mux_16_2_2_4_126_ctrl1) 
          begin
            SobelFilter_N_Mux_16_2_2_4_126_out1 = 16'd00000;
          end 
        else 
          begin
            SobelFilter_N_Mux_16_2_2_4_126_out1 = SobelFilter_Add_33Ux33U_33U_4_15_out1[15:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_16_2_3_4
    always @(SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 or SobelFilter_N_Mux_16_2_2_4_126_out1)
      begin : SobelFilter_N_Mux_16_2_3_4_127
        if (SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1) 
          begin
            SobelFilter_N_Mux_16_2_3_4_127_out1 = 16'd00255;
          end 
        else 
          begin
            SobelFilter_N_Mux_16_2_3_4_127_out1 = SobelFilter_N_Mux_16_2_2_4_126_out1;
          end
      end
    
    // resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_128
    assign SobelFilter_Add_5Ux5U_6U_4_128_out1 = {1'b0, s_reg_12} + 6'd30;
    
    // resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_129
    assign SobelFilter_Add_5Ux5U_6U_4_129_out1 = {1'b0, s_reg_12} + 6'd30;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_130
    assign SobelFilter_LessThan_3Sx3S_1U_4_130_out1 = s_reg_9[2] ^ s_reg_9 < 3'd3;
    
    // resource: SobelFilter_N_Mux_24_2_0_4
    always @(SobelFilter_Add_33Ux33U_33U_4_15_out1[23:0] or SobelFilter_N_Mux_16_2_2_4_126_ctrl1)
      begin : SobelFilter_N_Mux_24_2_0_4_134
        if (SobelFilter_N_Mux_16_2_2_4_126_ctrl1) 
          begin
            SobelFilter_N_Mux_24_2_0_4_134_out1 = 24'd00000000;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_0_4_134_out1 = SobelFilter_Add_33Ux33U_33U_4_15_out1[23:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_24_2_1_4
    always @(SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 or SobelFilter_N_Mux_24_2_0_4_134_out1)
      begin : SobelFilter_N_Mux_24_2_1_4_135
        if (SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1) 
          begin
            SobelFilter_N_Mux_24_2_1_4_135_out1 = 24'd00000255;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_1_4_135_out1 = SobelFilter_N_Mux_24_2_0_4_134_out1;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_136
    assign SobelFilter_Add_2Ux1U_3U_4_136_out1 = {1'b0, s_reg_26[1:0]} + 3'd1;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_137
    assign SobelFilter_Add_2Ux1U_3U_4_137_out1 = {1'b0, s_reg_26[1:0]} + 3'd1;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_138
    assign SobelFilter_LessThan_3Sx3S_1U_4_138_out1 = s_reg_26[2] ^ s_reg_26 < 3'd3;
    
    // resource: SobelFilter_N_Mux_32_2_4_4
    always @(SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0] or SobelFilter_N_Mux_16_2_2_4_126_ctrl1)
      begin : SobelFilter_N_Mux_32_2_4_4_142
        if (SobelFilter_N_Mux_16_2_2_4_126_ctrl1) 
          begin
            SobelFilter_N_Mux_32_2_4_4_142_out1 = 32'd0000000000;
          end 
        else 
          begin
            SobelFilter_N_Mux_32_2_4_4_142_out1 = SobelFilter_Add_33Ux33U_33U_4_15_out1[31:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_32_2_5_4
    always @(SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1 or SobelFilter_N_Mux_32_2_4_4_142_out1)
      begin : SobelFilter_N_Mux_32_2_5_4_143
        if (SobelFilter_GreaterThan_32Sx9S_1U_4_133_out1) 
          begin
            SobelFilter_N_Mux_32_2_5_4_143_out1 = 32'd0000000255;
          end 
        else 
          begin
            SobelFilter_N_Mux_32_2_5_4_143_out1 = SobelFilter_N_Mux_32_2_4_4_142_out1;
          end
      end
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_154
    assign SobelFilter_LessThan_3Sx3S_1U_4_154_out1 = s_reg_9[2] ^ s_reg_9 < 3'd3;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_160
    assign SobelFilter_LessThan_3Sx3S_1U_4_160_out1 = s_reg_9[2] ^ s_reg_9 < 3'd3;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_166
    assign SobelFilter_LessThan_3Sx3S_1U_4_166_out1 = s_reg_26[2] ^ s_reg_26 < 3'd3;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_172
    assign SobelFilter_LessThan_3Sx3S_1U_4_172_out1 = s_reg_26[2] ^ s_reg_26 < 3'd3;
    
    // resource: regr_en_sc_7
    always @(posedge i_clk)
      begin : drive_global_state
        if (i_rst == 1'b0) 
          begin
            global_state <= 7'd000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // resource: mux_7bx14i13c
    always @(s_reg_15 or s_reg_24 or s_reg_32 or SobelFilter_LessThan_3Sx3S_1U_4_14_out1 or SobelFilter_LessThan_5Sx5S_1U_4_18_out1 or SobelFilter_LessThan_2Ux2U_1U_4_33_out1 or SobelFilter_LessThan_2Ux2U_1U_4_36_out1 or SobelFilter_LessThan_5Sx5S_1U_4_64_out1 or SobelFilter_LessThan_3Sx3S_1U_4_138_out1 or SobelFilter_LessThan_3Sx3S_1U_4_166_out1 or SobelFilter_LessThan_3Sx3S_1U_4_172_out1 or global_state)
      begin : drive_global_state_next
        case (global_state) 
          7'd009, 7'd014: 
            begin
              global_state_next = 7'd010;
            end
          7'd013: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_14_out1) 
                begin
                  global_state_next = 7'd010;
                end 
              else 
                begin
                  if (s_reg_15) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd015;
                    end
                end
            end
          7'd018: 
            begin
              if (SobelFilter_LessThan_5Sx5S_1U_4_18_out1) 
                begin
                  global_state_next = 7'd015;
                end 
              else 
                begin
                  global_state_next = global_state + 7'd001;
                end
            end
          7'd019, 7'd037, 7'd060, 7'd083, 7'd103: 
            begin
              global_state_next = 7'd020;
            end
          7'd025: 
            begin
              if (SobelFilter_LessThan_2Ux2U_1U_4_33_out1) 
                begin
                  global_state_next = 7'd020;
                end 
              else 
                begin
                  if (SobelFilter_LessThan_2Ux2U_1U_4_36_out1) 
                    begin
                      global_state_next = 7'd020;
                    end 
                  else 
                    begin
                      global_state_next = global_state + 7'd001;
                    end
                end
            end
          7'd031: 
            begin
              if (SobelFilter_LessThan_5Sx5S_1U_4_64_out1) 
                begin
                  global_state_next = 7'd026;
                end 
              else 
                begin
                  case (s_reg_24) 
                    32'd0000000013: 
                      begin
                        global_state_next = 7'd084;
                      end
                    32'd0000000014: 
                      begin
                        global_state_next = 7'd061;
                      end
                    32'd0000000015: 
                      begin
                        global_state_next = 7'd038;
                      end
                    default: 
                      begin
                        global_state_next = global_state + 7'd001;
                      end
                  endcase
                end
            end
          7'd042, 7'd056: 
            begin
              global_state_next = 7'd043;
            end
          7'd055: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_166_out1) 
                begin
                  global_state_next = 7'd043;
                end 
              else 
                begin
                  if (s_reg_32) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd057;
                    end
                end
            end
          7'd065, 7'd079: 
            begin
              global_state_next = 7'd066;
            end
          7'd078: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_172_out1) 
                begin
                  global_state_next = 7'd066;
                end 
              else 
                begin
                  if (s_reg_32) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd080;
                    end
                end
            end
          7'd088, 7'd099: 
            begin
              global_state_next = 7'd089;
            end
          7'd098: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_138_out1) 
                begin
                  global_state_next = 7'd089;
                end 
              else 
                begin
                  if (s_reg_32) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd100;
                    end
                end
            end
          default: 
            begin
              global_state_next = global_state + 7'd001;
            end
        endcase
      end
    
    // resource: mux_4bx10i10c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h9fe
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h9fe <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd001: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd01;
                      end
                    7'd002: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd02;
                      end
                    7'd003: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd03;
                      end
                    7'd004: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd04;
                      end
                    7'd005: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd05;
                      end
                    7'd006: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd06;
                      end
                    7'd007: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd07;
                      end
                    7'd008: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd08;
                      end
                    7'd011: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd09;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h9fe <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hba
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hba <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd001, 7'd003, 7'd005, 7'd007: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd1;
                      end
                    7'd004: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h9ff
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h9ff <= 1'b1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd000, 7'd001, 7'd002, 7'd003, 7'd004, 7'd005, 7'd006, 7'd007, 7'd008, 7'd011: 
                      begin
                        gs_ctrl_do_filter_h9ff <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h9ff <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1ff
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1ff <= 1'b1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd000, 7'd001, 7'd002, 7'd003, 7'd004, 7'd005, 7'd006, 7'd007, 7'd008: 
                      begin
                        gs_ctrl_do_filter_h1ff <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1ff <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h4000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h4000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd014: 
                      begin
                        gs_ctrl_do_filter_h4000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h4000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx5i5c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_he0000754007000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_he0000754007000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd026, 7'd028, 7'd030: 
                      begin
                        gs_ctrl_do_filter_he0000754007000 <= 3'd1;
                      end
                    7'd053, 7'd078, 7'd097: 
                      begin
                        gs_ctrl_do_filter_he0000754007000 <= 3'd2;
                      end
                    7'd054, 7'd076, 7'd098: 
                      begin
                        gs_ctrl_do_filter_he0000754007000 <= 3'd3;
                      end
                    7'd055, 7'd077, 7'd096: 
                      begin
                        gs_ctrl_do_filter_he0000754007000 <= 3'd4;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_he0000754007000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_he00007540070000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_he00007540070000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd026: 
                      begin
                        gs_ctrl_do_filter_he00007540070000 <= 2'd1;
                      end
                    7'd028, 7'd030: 
                      begin
                        gs_ctrl_do_filter_he00007540070000 <= 2'd2;
                      end
                    7'd053, 7'd054, 7'd055, 7'd076, 7'd077, 7'd078, 7'd096, 7'd097, 7'd098: 
                      begin
                        gs_ctrl_do_filter_he00007540070000 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_he00007540070000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx7i7c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h6e00037d0037000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h6e00037d0037000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd028: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd1;
                      end
                    7'd030: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd2;
                      end
                    7'd031: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd3;
                      end
                    7'd053, 7'd054, 7'd055, 7'd076, 7'd077, 7'd078, 7'd096, 7'd097, 7'd098: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd4;
                      end
                    7'd057, 7'd080, 7'd100: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd5;
                      end
                    7'd058, 7'd081, 7'd101: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd6;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h6e00037d0037000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h6e00037d00370000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h6e00037d00370000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd028, 7'd030, 7'd031: 
                      begin
                        gs_ctrl_do_filter_h6e00037d00370000 <= 3'd1;
                      end
                    7'd053, 7'd058, 7'd077, 7'd081, 7'd097, 7'd101: 
                      begin
                        gs_ctrl_do_filter_h6e00037d00370000 <= 3'd2;
                      end
                    7'd054, 7'd076, 7'd096: 
                      begin
                        gs_ctrl_do_filter_h6e00037d00370000 <= 3'd3;
                      end
                    7'd055, 7'd078, 7'd098: 
                      begin
                        gs_ctrl_do_filter_h6e00037d00370000 <= 3'd4;
                      end
                    7'd057, 7'd080, 7'd100: 
                      begin
                        gs_ctrl_do_filter_h6e00037d00370000 <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h6e00037d00370000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h82062000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h82062000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd013, 7'd017, 7'd018, 7'd031: 
                      begin
                        gs_ctrl_do_filter_h82062000 <= 2'd1;
                      end
                    7'd025: 
                      begin
                        gs_ctrl_do_filter_h82062000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h82062000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h20000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h20000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd017: 
                      begin
                        gs_ctrl_do_filter_h20000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h20000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h82063000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h82063000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd012, 7'd017: 
                      begin
                        gs_ctrl_do_filter_h82063000 <= 3'd1;
                      end
                    7'd013: 
                      begin
                        gs_ctrl_do_filter_h82063000 <= 3'd2;
                      end
                    7'd018: 
                      begin
                        gs_ctrl_do_filter_h82063000 <= 3'd3;
                      end
                    7'd025: 
                      begin
                        gs_ctrl_do_filter_h82063000 <= 3'd4;
                      end
                    7'd031: 
                      begin
                        gs_ctrl_do_filter_h82063000 <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h82063000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h21000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h21000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd012, 7'd017: 
                      begin
                        gs_ctrl_do_filter_h21000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h21000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h100000a000080000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h100000a000080000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd037, 7'd083, 7'd103: 
                      begin
                        gs_ctrl_do_filter_h100000a000080000 <= 2'd1;
                      end
                    7'd060: 
                      begin
                        gs_ctrl_do_filter_h100000a000080000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h100000a000080000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd025: 
                      begin
                        gs_ctrl_do_filter_h2000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx7i7c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hab400000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hab400000 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd022: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd1;
                      end
                    7'd024: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd2;
                      end
                    7'd025: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd3;
                      end
                    7'd027: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd4;
                      end
                    7'd029: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd5;
                      end
                    7'd031: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd6;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hab400000 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1400000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1400000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd022: 
                      begin
                        gs_ctrl_do_filter_h1400000 <= 2'd1;
                      end
                    7'd024: 
                      begin
                        gs_ctrl_do_filter_h1400000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1400000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hab500000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hab500000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd020, 7'd022, 7'd024, 7'd027, 7'd029: 
                      begin
                        gs_ctrl_do_filter_hab500000 <= 2'd1;
                      end
                    7'd025: 
                      begin
                        gs_ctrl_do_filter_hab500000 <= 2'd2;
                      end
                    7'd031: 
                      begin
                        gs_ctrl_do_filter_hab500000 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hab500000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1500000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1500000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd020, 7'd022, 7'd024: 
                      begin
                        gs_ctrl_do_filter_h1500000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1500000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx14i14c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_he00b03de58f00581
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_he00b03de58f00581 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd033, 7'd038, 7'd061, 7'd084: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd01;
                      end
                    7'd034, 7'd039, 7'd062, 7'd085: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd02;
                      end
                    7'd035, 7'd040, 7'd063, 7'd086: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd03;
                      end
                    7'd036, 7'd041, 7'd064, 7'd087: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd04;
                      end
                    7'd048: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd05;
                      end
                    7'd049: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd06;
                      end
                    7'd051: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd07;
                      end
                    7'd071: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd08;
                      end
                    7'd072: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd09;
                      end
                    7'd074: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd10;
                      end
                    7'd091: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd11;
                      end
                    7'd092: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd12;
                      end
                    7'd094: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd13;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_he00b03de58f00581 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_he00003de00f00001
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_he00003de00f00001 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd033, 7'd035, 7'd038, 7'd040, 7'd061, 7'd063, 7'd084, 7'd086: 
                      begin
                        gs_ctrl_do_filter_he00003de00f00001 <= 2'd1;
                      end
                    7'd034, 7'd039, 7'd062, 7'd085: 
                      begin
                        gs_ctrl_do_filter_he00003de00f00001 <= 2'd2;
                      end
                    7'd036, 7'd041, 7'd064, 7'd087: 
                      begin
                        gs_ctrl_do_filter_he00003de00f00001 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_he00003de00f00001 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx9i9c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_he00b03dfd8f00581
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd031: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd01;
                      end
                    7'd032, 7'd033, 7'd038, 7'd061, 7'd084: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd02;
                      end
                    7'd034, 7'd039, 7'd062, 7'd085: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd03;
                      end
                    7'd035: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd04;
                      end
                    7'd036: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd05;
                      end
                    7'd040, 7'd063, 7'd086: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd06;
                      end
                    7'd041, 7'd064, 7'd087: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd07;
                      end
                    7'd048, 7'd049, 7'd051, 7'd071, 7'd072, 7'd074, 7'd091, 7'd092, 7'd094: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd08;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_he00b03dfd8f00581 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx8i8c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_he00003df80f00001
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_he00003df80f00001 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd031: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd1;
                      end
                    7'd032, 7'd033, 7'd038, 7'd061, 7'd084: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd2;
                      end
                    7'd034, 7'd039, 7'd062, 7'd085: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd3;
                      end
                    7'd035: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd4;
                      end
                    7'd036: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd5;
                      end
                    7'd040, 7'd063, 7'd086: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd6;
                      end
                    7'd041, 7'd064, 7'd087: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd7;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_he00003df80f00001 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h100000000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h100000000000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd056: 
                      begin
                        gs_ctrl_do_filter_h100000000000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h100000000000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h8000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h8000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd079: 
                      begin
                        gs_ctrl_do_filter_h8000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h8000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h800000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h800000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd099: 
                      begin
                        gs_ctrl_do_filter_h800000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h800000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h4000040
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h4000040 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd070: 
                      begin
                        gs_ctrl_do_filter_h4000040 <= 2'd1;
                      end
                    7'd090: 
                      begin
                        gs_ctrl_do_filter_h4000040 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h4000040 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h800004000040
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h800004000040 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd047, 7'd070, 7'd090: 
                      begin
                        gs_ctrl_do_filter_h800004000040 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h800004000040 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // instance: drive_i_rgb_busy
    assign i_rgb_busy = SobelFilter_gen_busy_r_4_186_out1[2];
    
    // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_186 (4 concurrent statements)
      assign SobelFilter_gen_busy_r_4_186_out1 = {SobelFilter_gen_busy_r_4_186_gnew_req, {SobelFilter_gen_busy_r_4_186_gdiv, SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next}};
      assign SobelFilter_gen_busy_r_4_186_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~SobelFilter_gen_busy_r_4_186_gdiv;
      assign SobelFilter_gen_busy_r_4_186_gdiv = i_rgb_vld & !SobelFilter_gen_busy_r_4_186_gnew_req;
      assign SobelFilter_gen_busy_r_4_186_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);
    // (end of SobelFilter_gen_busy_r_4_186)
    
    // resource: regr_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_unvalidated_req
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_unvalidated_req <= 1'd1;
          end 
        else 
          begin
            i_rgb_m_unvalidated_req <= SobelFilter_N_Muxb_1_2_6_4_4_out1;
          end
      end
    
    // resource: SobelFilter_N_Muxb_1_2_6_4
    always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
      begin : SobelFilter_N_Muxb_1_2_6_4_4
        if (i_rgb_m_busy_req_0) 
          begin
            SobelFilter_N_Muxb_1_2_6_4_4_out1 = i_rgb_m_unvalidated_req;
          end 
        else 
          begin
            SobelFilter_N_Muxb_1_2_6_4_4_out1 = i_rgb_vld;
          end
      end
    
    // instance: drive_o_result_vld
    assign o_result_vld = SobelFilter_Or_1Ux1U_1U_4_2_out1;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
    assign SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_result_m_unacked_req
        if (i_rst == 1'b0) 
          begin
            o_result_m_unacked_req <= 1'd0;
          end 
        else 
          begin
            o_result_m_unacked_req <= SobelFilter_And_1Ux1U_1U_4_184_out1;
          end
      end
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_184
    assign SobelFilter_And_1Ux1U_1U_4_184_out1 = o_result_busy & o_result_vld;
    
    // resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
    assign SobelFilter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_result_m_req_m_prev_trig_req
        if (i_rst == 1'b0) 
          begin
            o_result_m_req_m_prev_trig_req <= 1'd0;
          end 
        else 
          begin
            o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
          end
      end
    
    // resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
    assign SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;

endmodule


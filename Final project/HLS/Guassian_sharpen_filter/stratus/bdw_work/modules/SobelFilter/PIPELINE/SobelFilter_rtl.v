// Generated by stratus_hls 21.20-p100  (96289.240513)
// Mon May 29 16:10:37 2023
// from ../SobelFilter.cpp

`timescale 1ps / 1ps


module SobelFilter( i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data );

    input i_clk;
    input i_rst;
    input i_rgb_vld;
    input [23:0] i_rgb_data;
    input o_result_busy;
    output i_rgb_busy;
    output o_result_vld;
    output [31:0] o_result_data;
    reg [31:0] o_result_data;
    reg o_result_m_req_m_prev_trig_req;
    reg o_result_m_unacked_req;
    wire SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    wire SobelFilter_Or_1Ux1U_1U_4_2_out1;
    wire SobelFilter_And_1Ux1U_1U_4_280_out1;
    wire SobelFilter_And_1Ux1U_1U_4_6_out1;
    wire SobelFilter_Not_1U_1U_4_5_out1;
    wire SobelFilter_And_1Ux1U_1U_4_7_out1;
    reg SobelFilter_N_Muxb_1_2_27_4_4_out1;
    reg i_rgb_m_unvalidated_req;
    wire SobelFilter_gen_busy_r_4_282_gnew_req;
    wire SobelFilter_gen_busy_r_4_282_gnew_busy;
    wire SobelFilter_gen_busy_r_4_282_gdiv;
    wire SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next;
    wire i_rgb_m_data_is_valid;
    reg[6:0] global_state_next;
    reg[31:0] SobelFilter_N_Mux_32_2_25_4_237_out1;
    reg[23:0] SobelFilter_N_Mux_24_2_21_4_229_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_223_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_221_out1;
    reg[15:0] SobelFilter_N_Mux_16_2_23_4_219_out1;
    wire SobelFilter_N_Mux_16_2_23_4_219_ctrl1;
    wire SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_210_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_208_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_206_out1;
    reg gs_ctrl_do_filter_h400004000002000;
    reg[1:0] gs_ctrl_do_filter_h400000000002000;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_204_out1;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_201_out1;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_197_out1;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_193_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_189_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_187_out1;
    reg[1:0] SobelFilter_Add_4Ux2U_5U_4_186_in1;
    reg[3:0] SobelFilter_Add_4Ux2U_5U_4_186_in2;
    reg gs_ctrl_do_filter_h40000;
    reg[1:0] SobelFilter_Mul_2Ux2U_4U_4_184_in2;
    reg gs_ctrl_do_filter_h80000;
    reg[1:0] SobelFilter_Mul_2Ux2U_4U_4_182_in2;
    reg gs_ctrl_do_filter_h4;
    reg[1:0] SobelFilter_Mul_2Ux2U_4U_4_180_in2;
    reg gs_ctrl_do_filter_h400000000000;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_171_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_170_out1;
    reg[2:0] gs_ctrl_do_filter_hf8000fbf800f80;
    wire SobelFilter_Not_1U_1U_4_174_out1;
    wire SobelFilter_Not_1U_1U_4_177_out1;
    reg[3:0] gs_ctrl_do_filter_h58f8058fbf8cdf80;
    reg[1:0] gs_ctrl_do_filter_hd8000db6000d80;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux5U_7S_4_169_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx2U_6S_4_172_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx1U_6S_4_173_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux5U_7S_4_178_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux5U_7S_4_179_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_186_out1;
    wire[5:0] SobelFilter_Add_5Ux4U_6U_4_205_out1;
    wire[4:0] SobelFilter_Add_5Ux3U_5U_4_207_out1;
    wire[4:0] SobelFilter_Add_5Ux2U_5U_4_209_out1;
    wire[5:0] SobelFilter_Add_5Ux5U_6U_4_211_out1;
    wire[5:0] SobelFilter_Add_5Ux4U_6U_4_213_out1;
    wire[5:0] SobelFilter_Add_5Ux4U_6U_4_215_out1;
    wire[5:0] SobelFilter_Add_5Ux5U_6U_4_231_out1;
    wire[5:0] SobelFilter_Add_5Ux5U_6U_4_232_out1;
    reg[3:0] gs_ctrl_do_filter_h58f8058fbe0cdf80;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux4U_7S_4_161_out1;
    wire SobelFilter_Not_1U_1U_4_144_out1;
    reg[3:0] SobelFilter_N_Mux_20_16_19_4_143_ctrl1;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in2;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in3;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in4;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in5;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in6;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in7;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in8;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in9;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in10;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in11;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in12;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in13;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in14;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in15;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in16;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_in17;
    reg gs_ctrl_do_filter_h400000;
    wire SobelFilter_Not_1U_1U_4_136_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_135_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_134_out1;
    wire[19:0] SobelFilter_N_Mux_20_4_3_4_117_in2;
    reg[19:0] SobelFilter_N_Mux_20_3_9_4_116_out1;
    wire[19:0] SobelFilter_N_Mux_20_3_13_4_100_in2;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_99_out1;
    wire[19:0] SobelFilter_N_Mux_20_2_10_4_99_in2;
    reg[23:0] SobelFilter_N_Mux_24_2_0_4_98_out1;
    reg[23:0] i_rgb_m_stall_reg;
    reg i_rgb_m_stall_reg_full;
    wire SobelFilter_OrReduction_5U_1U_4_97_out1;
    wire SobelFilter_Equal_5Ux2U_1U_4_96_out1;
    wire SobelFilter_Equal_5Ux3U_1U_4_95_out1;
    wire SobelFilter_Equal_5Ux3U_1U_4_94_out1;
    wire SobelFilter_Equal_5Ux4U_1U_4_93_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_92_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_79_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_65_out1;
    reg[1:0] SobelFilter_Add_4Ux2U_5U_4_28_in1;
    reg[1:0] SobelFilter_Mul_2Ux2U_4U_4_46_in2;
    reg[1:0] SobelFilter_Add_2Ux1U_2U_4_26_in2;
    /*signed*/reg[5:0] SobelFilter_Mul_6Sx2U_6S_4_24_in2;
    /*signed*/reg[3:0] SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice;
    reg gs_ctrl_do_filter_h100000;
    wire SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1;
    /*signed*/reg[31:0] SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2;
    reg[1:0] gs_ctrl_do_filter_h4000040800040;
    reg gs_ctrl_do_filter_h10800;
    reg[2:0] gs_ctrl_do_filter_h931800;
    reg gs_ctrl_do_filter_h10000;
    reg[1:0] gs_ctrl_do_filter_h931000;
    reg[32:0] SobelFilter_Add_33Ux33U_33U_4_17_in1;
    reg[2:0] gs_ctrl_do_filter_h8001b80000d7001b0;
    reg[32:0] SobelFilter_Add_33Ux33U_33U_4_17_in2;
    reg[2:0] gs_ctrl_do_filter_h8001b80000d7001b;
    reg[31:0] SobelFilter_Mul_33Sx32U_35S_4_15_in1;
    reg[19:0] SobelFilter_N_Mux_20_16_19_4_143_out1;
    reg[19:0] SobelFilter_N_Mux_20_11_20_4_155_out1;
    reg[1:0] gs_ctrl_do_filter_h8000380000e700030;
    /*signed*/reg[31:0] SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice;
    reg[2:0] gs_ctrl_do_filter_h8000380000e70003;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_9_out1;
    reg[1:0] SobelFilter_Add_2Ux1U_3U_4_8_in2;
    reg gs_ctrl_do_filter_h2000;
    reg gs_ctrl_do_filter_h1ff;
    reg gs_ctrl_do_filter_h5ff;
    reg[1:0] gs_ctrl_do_filter_hba;
    /*signed*/wire[4:0] SobelFilter_Add_4Ux2U_5S_4_10_out1;
    reg[3:0] gs_ctrl_do_filter_h5fe;
    reg wire_s_reg_95_0;
    wire SobelFilter_Not_1U_1U_4_154_out1;
    wire SobelFilter_Equal_5Ux1U_1U_4_62_out1;
    reg s_reg_95;
    wire SobelFilter_Equal_5Ux2U_1U_4_61_out1;
    reg s_reg_94;
    reg wire_s_reg_93_0;
    wire SobelFilter_And_1Ux1U_1U_4_147_out1;
    wire SobelFilter_Equal_5Ux3U_1U_4_60_out1;
    reg s_reg_93;
    wire SobelFilter_Or_1Ux1U_1U_4_142_out1;
    wire SobelFilter_Equal_5Ux3U_1U_4_59_out1;
    reg s_reg_92;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_115_out1;
    reg[19:0] s_reg_9;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_184_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_182_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_180_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_46_out1;
    reg[3:0] s_reg_83;
    reg wire_s_reg_81_1;
    wire SobelFilter_OrReduction_5U_1U_4_29_out1;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_106_out1;
    reg[19:0] s_reg_7;
    reg[23:0] SobelFilter_N_Mux_24_2_22_4_230_out1;
    reg[31:0] s_reg_6;
    /*signed*/wire[31:0] SobelFilter_Add_32Sx1U_32S_4_25_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_166_out1;
    wire[4:0] SobelFilter_Add_4Ux1U_5U_4_148_out1;
    wire[4:0] SobelFilter_Add_4Ux2U_5U_4_28_out1;
    wire[4:0] SobelFilter_Add_4Ux1U_5U_4_18_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_16_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx2U_6S_4_175_out1;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux4U_7S_4_167_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_164_out1;
    reg s_reg_81;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_24_out1;
    reg[5:0] s_reg_49;
    wire[1:0] SobelFilter_Add_2Ux1U_2U_4_91_out1;
    reg[1:0] s_reg_4_slice;
    wire SobelFilter_And_1Ux1U_1U_4_23_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_11_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_13_out1;
    reg[2:0] s_reg_38;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_194_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_202_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_181_out1;
    wire[1:0] SobelFilter_Add_2Ux1U_2U_4_26_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_8_out1;
    reg[2:0] s_reg_36;
    reg[19:0] SobelFilter_N_Mux_20_4_1_4_126_out1;
    reg[19:0] s_reg_34;
    reg[19:0] SobelFilter_N_Mux_20_4_2_4_127_out1;
    reg[19:0] s_reg_33;
    reg[19:0] SobelFilter_N_Mux_20_4_3_4_117_out1;
    reg[19:0] s_reg_32;
    reg[19:0] SobelFilter_N_Mux_20_4_4_4_118_out1;
    reg[19:0] s_reg_31;
    reg[19:0] SobelFilter_N_Mux_20_4_5_4_119_out1;
    reg[19:0] s_reg_30;
    reg[19:0] SobelFilter_N_Mux_20_4_6_4_120_out1;
    reg[19:0] s_reg_29;
    reg[19:0] SobelFilter_N_Mux_20_4_7_4_121_out1;
    reg[19:0] s_reg_28;
    reg[19:0] SobelFilter_N_Mux_20_4_8_4_122_out1;
    reg[19:0] s_reg_27;
    reg[19:0] SobelFilter_N_Mux_20_3_11_4_124_out1;
    reg[19:0] s_reg_26;
    reg[19:0] SobelFilter_N_Mux_20_3_12_4_125_out1;
    reg[19:0] s_reg_25;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_123_out1;
    reg[19:0] s_reg_24;
    reg[19:0] SobelFilter_N_Mux_20_3_13_4_100_out1;
    reg[19:0] s_reg_23;
    reg[19:0] SobelFilter_N_Mux_20_3_14_4_101_out1;
    reg[19:0] s_reg_22;
    reg[19:0] SobelFilter_N_Mux_20_3_15_4_102_out1;
    reg[19:0] s_reg_21;
    reg[19:0] SobelFilter_N_Mux_20_3_16_4_103_out1;
    reg[19:0] s_reg_20;
    reg[31:0] s_reg_198;
    reg[31:0] s_reg_193;
    reg[19:0] SobelFilter_N_Mux_20_3_17_4_104_out1;
    reg[19:0] s_reg_19;
    reg[31:0] s_reg_186;
    reg[19:0] SobelFilter_N_Mux_20_3_18_4_105_out1;
    reg[19:0] s_reg_18;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_191_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_199_out1;
    wire[3:0] SobelFilter_Mul_2Ux2U_4U_4_196_out1;
    reg[3:0] s_reg_178;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_107_out1;
    reg[19:0] s_reg_17;
    reg[31:0] SobelFilter_N_Mux_32_2_26_4_238_out1;
    reg[31:0] s_reg_50;
    reg[31:0] s_reg_165;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_185_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_183_out1;
    wire[2:0] SobelFilter_Add_2Ux1U_3U_4_198_out1;
    reg[2:0] s_reg_160;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_108_out1;
    reg[19:0] s_reg_16;
    /*signed*/wire[6:0] SobelFilter_Add_6Ux4U_7S_4_168_out1;
    reg[5:0] s_reg_152;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_109_out1;
    reg[19:0] s_reg_15;
    /*signed*/wire[5:0] SobelFilter_Sub_6Sx3U_6S_4_131_out1;
    reg[5:0] s_reg_147;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_110_out1;
    reg[19:0] s_reg_14;
    wire[4:0] SobelFilter_Add_5Ux2U_5U_4_224_out1;
    wire[4:0] SobelFilter_Add_5Ux2U_5U_4_190_out1;
    wire[4:0] SobelFilter_Add_5Ux3U_5U_4_222_out1;
    wire[4:0] SobelFilter_Add_5Ux3U_5U_4_188_out1;
    /*signed*/wire[5:0] SobelFilter_Sub_6Sx4U_6S_4_130_out1;
    reg[5:0] s_reg_5;
    reg[5:0] s_reg_133;
    reg[15:0] SobelFilter_N_Mux_16_2_24_4_220_out1;
    /*signed*/wire[34:0] SobelFilter_Mul_33Sx32U_35S_4_15_out1;
    reg[20:0] s_reg_132;
    reg[32:0] s_reg_131;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_111_out1;
    reg[19:0] s_reg_13;
    reg wire_s_reg_126_0;
    wire SobelFilter_LessThan_3Sx3S_1U_4_225_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_255_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_249_out1;
    wire SobelFilter_And_1Ux1U_1U_4_139_out1;
    wire SobelFilter_Equal_5Ux4U_1U_4_47_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx1U_6S_4_176_out1;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_165_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx2U_6S_4_140_out1;
    /*signed*/wire[5:0] SobelFilter_Add_6Sx1U_6S_4_141_out1;
    reg s_reg_39;
    /*signed*/wire[5:0] SobelFilter_Mul_6Sx2U_6S_4_133_out1;
    reg[5:0] s_reg_125;
    wire SobelFilter_LessThan_32Sx5S_1U_4_22_out1;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_112_out1;
    reg[19:0] s_reg_12;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_113_out1;
    reg[19:0] s_reg_11;
    reg[19:0] SobelFilter_N_Mux_20_2_10_4_114_out1;
    reg[19:0] s_reg_10;
    wire SobelFilter_And_1Ux1U_1U_4_279_out1;
    wire[2:0] SobelFilter_gen_busy_r_4_282_out1;
    wire SobelFilter_Not_1U_1U_1_3_out1;
    reg o_result_m_req_m_trig_req;
    reg i_rgb_m_busy_req_0;
    wire SobelFilter_LessThan_5Sx5S_1U_4_20_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_233_out1;
    wire SobelFilter_LessThan_3Sx3S_1U_4_267_out1;
    reg s_reg_126;
    wire SobelFilter_LessThan_3Sx3S_1U_4_261_out1;
    wire SobelFilter_LessThan_5Sx5S_1U_4_156_out1;
    wire[32:0] SobelFilter_Add_33Ux33U_33U_4_17_out1;
    wire SobelFilter_LessThan_2Ux2U_1U_4_128_out1;
    wire SobelFilter_LessThan_2Ux2U_1U_4_129_out1;
    reg[6:0] global_state;
    reg[23:0] Gaussian_value_DIN;
    reg Gaussian_value_CE;
    reg Gaussian_value_RW;
    reg[3:0] Gaussian_value_in1;
    wire[23:0] Gaussian_value_out1;
    wire[48:0] SobelFilter_DivRem_4_19_in1;
    wire[23:0] SobelFilter_DivRem_4_19_in2;
    wire[36:0] SobelFilter_DivRem_4_19_out1;
    reg stall0;
    reg[31:0] buffer_DIN;
    reg buffer_CE;
    reg buffer_RW;
    reg[5:0] buffer_in1;
    wire[31:0] buffer_out1;
    reg[23:0] expon_value_DIN;
    reg expon_value_CE;
    reg expon_value_RW;
    reg[3:0] expon_value_in1;
    wire[23:0] expon_value_out1;
    reg sharpening_CE;
    reg[3:0] sharpening_in1;
    wire[31:0] sharpening_out1;

    SobelFilter_ROM_9X32_sharpening sharpening( 
                                      .CE( sharpening_CE ),
                                      .in1( sharpening_in1 ),
                                      .out1( sharpening_out1 ),
                                      .clk( i_clk )
                                    );
    SobelFilter_RAM_9X24_1 expon_value( 
                             .DIN( expon_value_DIN ),
                             .CE( expon_value_CE ),
                             .RW( expon_value_RW ),
                             .in1( expon_value_in1 ),
                             .out1( expon_value_out1 ),
                             .clk( i_clk )
                           );
    SobelFilter_RAM_45X32_3 buffer( 
                              .DIN( buffer_DIN ),
                              .CE( buffer_CE ),
                              .RW( buffer_RW ),
                              .in1( buffer_in1 ),
                              .out1( buffer_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_DivRem_4 SobelFilter_DivRem_4_19( 
                           .in1( SobelFilter_DivRem_4_19_in1 ),
                           .in2( SobelFilter_DivRem_4_19_in2 ),
                           .out1( SobelFilter_DivRem_4_19_out1 ),
                           .clk( i_clk ),
                           .stall( stall0 )
                         );
    SobelFilter_RAM_9X24_1 Gaussian_value( 
                             .DIN( Gaussian_value_DIN ),
                             .CE( Gaussian_value_CE ),
                             .RW( Gaussian_value_RW ),
                             .in1( Gaussian_value_in1 ),
                             .out1( Gaussian_value_out1 ),
                             .clk( i_clk )
                           );
    
    // resource: mux_32bx5i1c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_o_result_data
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd020: 
                  begin
                    if (!(SobelFilter_LessThan_2Ux2U_1U_4_128_out1 || SobelFilter_LessThan_2Ux2U_1U_4_129_out1)) 
                      begin
                        o_result_data <= 32'd0000000000;
                      end 
                  end
                7'd021: 
                  begin
                    o_result_data <= {11'b00000000000, SobelFilter_Add_33Ux33U_33U_4_17_out1[32:12]};
                  end
                7'd023: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                      begin
                        o_result_data <= {11'b00000000000, o_result_data[20:0]};
                      end 
                  end
                7'd036, 7'd056, 7'd076: 
                  begin
                    o_result_data <= 32'd0000000000;
                  end
                7'd045: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_261_out1) 
                      begin
                        o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                      end 
                    else 
                      begin
                        if (s_reg_126) 
                          begin
                            /* state63 */
                            o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                          end 
                      end
                  end
                7'd048, 7'd068, 7'd085: 
                  begin
                    o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                  end
                7'd065: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_267_out1) 
                      begin
                        o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                      end 
                    else 
                      begin
                        if (s_reg_126) 
                          begin
                            /* state88 */
                            o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                          end 
                      end
                  end
                7'd082: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_233_out1) 
                      begin
                        o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                      end 
                    else 
                      begin
                        if (s_reg_126) 
                          begin
                            /* state110 */
                            o_result_data <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_busy_req_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd017: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_20_out1) 
                      begin
                      end 
                    else 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd1;
                      end
                  end
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    i_rgb_m_busy_req_0 <= 1'd0;
                  end
                7'd019: 
                  begin
                    i_rgb_m_busy_req_0 <= 1'd1;
                  end
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd0;
                      end 
                    else 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_129_out1) 
                          begin
                            i_rgb_m_busy_req_0 <= 1'd0;
                          end 
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i1c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_o_result_m_req_m_trig_req
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd017: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_20_out1) 
                      begin
                      end 
                    else 
                      begin
                        o_result_m_req_m_trig_req <= 1'd0;
                      end
                  end
                7'd048, 7'd068, 7'd085: 
                  begin
                    o_result_m_req_m_trig_req <= SobelFilter_Not_1U_1U_1_3_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx3i1c
    always @(SobelFilter_And_1Ux1U_1U_4_279_out1 or SobelFilter_gen_busy_r_4_282_out1[0] or global_state)
      begin : drive_stall0
        case (global_state) 
          7'd019: 
            begin
              stall0 = SobelFilter_gen_busy_r_4_282_out1[0];
            end
          7'd049, 7'd069, 7'd086: 
            begin
              stall0 = SobelFilter_And_1Ux1U_1U_4_279_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_10
        if (i_rst == 1'b0) 
          begin
            s_reg_10 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_10 <= SobelFilter_N_Mux_20_2_10_4_114_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_11
        if (i_rst == 1'b0) 
          begin
            s_reg_11 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_11 <= SobelFilter_N_Mux_20_2_10_4_113_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_12
        if (i_rst == 1'b0) 
          begin
            s_reg_12 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_12 <= SobelFilter_N_Mux_20_2_10_4_112_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_6bx5i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_125
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_32Sx5S_1U_4_22_out1) 
                      begin
                        s_reg_125 <= SobelFilter_Mul_6Sx2U_6S_4_133_out1;
                      end 
                    else 
                      begin
                        if (s_reg_39) 
                          begin
                            s_reg_125 <= SobelFilter_Add_6Sx1U_6S_4_141_out1;
                          end 
                        else 
                          begin
                            s_reg_125 <= SobelFilter_Add_6Sx2U_6S_4_140_out1;
                          end
                      end
                  end
                7'd026, 7'd032, 7'd052, 7'd072: 
                  begin
                    s_reg_125 <= SobelFilter_Mul_6Sx2U_6S_4_165_out1;
                  end
                7'd028, 7'd034, 7'd054, 7'd074: 
                  begin
                    s_reg_125 <= SobelFilter_Add_6Sx1U_6S_4_176_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx5i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_126
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_126 <= SobelFilter_Equal_5Ux4U_1U_4_47_out1;
                  end
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                      begin
                        s_reg_126 <= SobelFilter_Equal_5Ux4U_1U_4_47_out1;
                      end 
                    else 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_129_out1) 
                          begin
                            s_reg_126 <= SobelFilter_Equal_5Ux4U_1U_4_47_out1;
                          end 
                        else 
                          begin
                            s_reg_126 <= SobelFilter_And_1Ux1U_1U_4_139_out1;
                          end
                      end
                  end
                7'd044: 
                  begin
                    s_reg_126 <= SobelFilter_LessThan_3Sx3S_1U_4_249_out1;
                  end
                7'd064: 
                  begin
                    s_reg_126 <= SobelFilter_LessThan_3Sx3S_1U_4_255_out1;
                  end
                7'd081: 
                  begin
                    s_reg_126 <= SobelFilter_LessThan_3Sx3S_1U_4_225_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_126_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd020: 
                  begin
                    wire_s_reg_126_0 <= SobelFilter_And_1Ux1U_1U_4_139_out1;
                  end
                7'd023: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                      begin
                        wire_s_reg_126_0 <= s_reg_126;
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_13
        if (i_rst == 1'b0) 
          begin
            s_reg_13 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_13 <= SobelFilter_N_Mux_20_2_10_4_111_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_33bx6i1c
    // resource: regr_en_33
    always @(posedge i_clk)
      begin : drive_s_reg_131
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd020, 7'd036, 7'd056, 7'd076: 
                  begin
                    s_reg_131 <= 33'd0000000000;
                  end
                7'd022: 
                  begin
                    s_reg_131 <= {12'b000000000000, SobelFilter_Add_33Ux33U_33U_4_17_out1[32:12]};
                  end
                7'd023: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                      begin
                        s_reg_131 <= {12'b000000000000, s_reg_131[20:0]};
                      end 
                  end
                7'd043, 7'd064, 7'd081: 
                  begin
                    s_reg_131 <= {SobelFilter_Add_33Ux33U_33U_4_17_out1[31], SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0]};
                  end
                7'd045: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_261_out1) 
                      begin
                        s_reg_131 <= {s_reg_131[31], s_reg_131[31:0]};
                      end 
                  end
                7'd046, 7'd066, 7'd083: 
                  begin
                    s_reg_131 <= {s_reg_131[31], s_reg_131[31:0]};
                  end
                7'd047, 7'd067, 7'd084: 
                  begin
                    s_reg_131 <= SobelFilter_Add_33Ux33U_33U_4_17_out1;
                  end
                7'd065: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_267_out1) 
                      begin
                        s_reg_131 <= {s_reg_131[31], s_reg_131[31:0]};
                      end 
                  end
                7'd082: 
                  begin
                    if (SobelFilter_LessThan_3Sx3S_1U_4_233_out1) 
                      begin
                        s_reg_131 <= {s_reg_131[31], s_reg_131[31:0]};
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_21bx4i1c
    // resource: regr_en_21
    always @(posedge i_clk)
      begin : drive_s_reg_132
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd011: 
                  begin
                    s_reg_132 <= {7'b0000000, SobelFilter_Mul_33Sx32U_35S_4_15_out1[33:20]};
                  end
                7'd020: 
                  begin
                    s_reg_132 <= 21'd0000000;
                  end
                7'd023: 
                  begin
                    /* state37 */
                    s_reg_132 <= SobelFilter_Add_33Ux33U_33U_4_17_out1[32:12];
                  end
                7'd043, 7'd063, 7'd080: 
                  begin
                    s_reg_132 <= {5'b00000, SobelFilter_N_Mux_16_2_24_4_220_out1};
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx7i1c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_133
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd020: 
                  begin
                    s_reg_133 <= 6'd00;
                  end
                7'd023: 
                  begin
                    s_reg_133 <= {s_reg_5[4], s_reg_5[4:0]};
                  end
                7'd025, 7'd031, 7'd051, 7'd071: 
                  begin
                    s_reg_133 <= SobelFilter_Sub_6Sx4U_6S_4_130_out1;
                  end
                7'd037: 
                  begin
                    s_reg_133 <= {1'b0, SobelFilter_Add_5Ux3U_5U_4_188_out1};
                  end
                7'd041: 
                  begin
                    s_reg_133 <= {1'b0, SobelFilter_Add_5Ux3U_5U_4_222_out1};
                  end
                7'd057: 
                  begin
                    s_reg_133 <= {1'b0, SobelFilter_Add_5Ux2U_5U_4_190_out1};
                  end
                7'd061: 
                  begin
                    s_reg_133 <= {1'b0, SobelFilter_Add_5Ux2U_5U_4_224_out1};
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_14
        if (i_rst == 1'b0) 
          begin
            s_reg_14 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_14 <= SobelFilter_N_Mux_20_2_10_4_110_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_147
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd025, 7'd031, 7'd051, 7'd071: 
                  begin
                    s_reg_147 <= SobelFilter_Sub_6Sx3U_6S_4_131_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_15
        if (i_rst == 1'b0) 
          begin
            s_reg_15 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_15 <= SobelFilter_N_Mux_20_2_10_4_109_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_152
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd026, 7'd032, 7'd052, 7'd072: 
                  begin
                    s_reg_152 <= SobelFilter_Add_6Ux4U_7S_4_168_out1[5:0];
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_16
        if (i_rst == 1'b0) 
          begin
            s_reg_16 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_16 <= SobelFilter_N_Mux_20_2_10_4_108_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx3i0c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_160
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd038: 
                  begin
                    s_reg_160 <= SobelFilter_Add_2Ux1U_3U_4_198_out1;
                  end
                7'd056, 7'd066: 
                  begin
                    s_reg_160 <= SobelFilter_Add_2Ux1U_3U_4_183_out1;
                  end
                7'd076, 7'd083: 
                  begin
                    s_reg_160 <= SobelFilter_Add_2Ux1U_3U_4_185_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_32bx4i1c
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_165
        if (i_rst == 1'b0) 
          begin
            s_reg_165 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd030, 7'd070, 7'd087: 
                      begin
                        s_reg_165 <= s_reg_50;
                      end
                    7'd036, 7'd050, 7'd056, 7'd076: 
                      begin
                        s_reg_165 <= 32'd0000000000;
                      end
                    7'd044, 7'd063, 7'd080: 
                      begin
                        s_reg_165 <= SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
                      end
                    7'd045: 
                      begin
                        if (SobelFilter_LessThan_3Sx3S_1U_4_261_out1) 
                          begin
                          end 
                        else 
                          begin
                            if (s_reg_126) 
                              begin
                              end 
                            else 
                              begin
                                /* state65 */
                                s_reg_165 <= SobelFilter_N_Mux_32_2_26_4_238_out1;
                              end
                          end
                      end
                    7'd065: 
                      begin
                        if (SobelFilter_LessThan_3Sx3S_1U_4_267_out1) 
                          begin
                          end 
                        else 
                          begin
                            if (s_reg_126) 
                              begin
                              end 
                            else 
                              begin
                                /* state90 */
                                s_reg_165 <= SobelFilter_N_Mux_32_2_26_4_238_out1;
                              end
                          end
                      end
                    7'd082: 
                      begin
                        if (SobelFilter_LessThan_3Sx3S_1U_4_233_out1) 
                          begin
                          end 
                        else 
                          begin
                            if (s_reg_126) 
                              begin
                              end 
                            else 
                              begin
                                /* state112 */
                                s_reg_165 <= SobelFilter_N_Mux_32_2_26_4_238_out1;
                              end
                          end
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_17
        if (i_rst == 1'b0) 
          begin
            s_reg_17 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_17 <= SobelFilter_N_Mux_20_2_10_4_107_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx3i0c
    // resource: regr_en_4
    always @(posedge i_clk)
      begin : drive_s_reg_178
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd038, 7'd040: 
                  begin
                    s_reg_178 <= SobelFilter_Mul_2Ux2U_4U_4_196_out1;
                  end
                7'd058, 7'd060: 
                  begin
                    s_reg_178 <= SobelFilter_Mul_2Ux2U_4U_4_199_out1;
                  end
                7'd077, 7'd078: 
                  begin
                    s_reg_178 <= SobelFilter_Mul_2Ux2U_4U_4_191_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_18
        if (i_rst == 1'b0) 
          begin
            s_reg_18 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_18 <= SobelFilter_N_Mux_20_3_18_4_105_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_186
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd039, 7'd059, 7'd078: 
                  begin
                    s_reg_186 <= sharpening_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_19
        if (i_rst == 1'b0) 
          begin
            s_reg_19 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_19 <= SobelFilter_N_Mux_20_3_17_4_104_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_193
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd043, 7'd060, 7'd063, 7'd077, 7'd080: 
                  begin
                    s_reg_193 <= buffer_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_198
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd041, 7'd061: 
                  begin
                    s_reg_198 <= buffer_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_20
        if (i_rst == 1'b0) 
          begin
            s_reg_20 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_20 <= SobelFilter_N_Mux_20_3_16_4_103_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_21
        if (i_rst == 1'b0) 
          begin
            s_reg_21 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_21 <= SobelFilter_N_Mux_20_3_15_4_102_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_22
        if (i_rst == 1'b0) 
          begin
            s_reg_22 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_22 <= SobelFilter_N_Mux_20_3_14_4_101_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_23
        if (i_rst == 1'b0) 
          begin
            s_reg_23 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_23 <= SobelFilter_N_Mux_20_3_13_4_100_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_24
        if (i_rst == 1'b0) 
          begin
            s_reg_24 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_24 <= SobelFilter_N_Mux_20_2_10_4_123_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_25
        if (i_rst == 1'b0) 
          begin
            s_reg_25 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_25 <= SobelFilter_N_Mux_20_3_12_4_125_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_26
        if (i_rst == 1'b0) 
          begin
            s_reg_26 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_26 <= SobelFilter_N_Mux_20_3_11_4_124_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_27
        if (i_rst == 1'b0) 
          begin
            s_reg_27 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_27 <= SobelFilter_N_Mux_20_4_8_4_122_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_28
        if (i_rst == 1'b0) 
          begin
            s_reg_28 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_28 <= SobelFilter_N_Mux_20_4_7_4_121_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_29
        if (i_rst == 1'b0) 
          begin
            s_reg_29 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_29 <= SobelFilter_N_Mux_20_4_6_4_120_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_30
        if (i_rst == 1'b0) 
          begin
            s_reg_30 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_30 <= SobelFilter_N_Mux_20_4_5_4_119_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_31
        if (i_rst == 1'b0) 
          begin
            s_reg_31 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_31 <= SobelFilter_N_Mux_20_4_4_4_118_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_32
        if (i_rst == 1'b0) 
          begin
            s_reg_32 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_32 <= SobelFilter_N_Mux_20_4_3_4_117_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_33
        if (i_rst == 1'b0) 
          begin
            s_reg_33 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_33 <= SobelFilter_N_Mux_20_4_2_4_127_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_34
        if (i_rst == 1'b0) 
          begin
            s_reg_34 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_34 <= SobelFilter_N_Mux_20_4_1_4_126_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i0c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_36
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd009, 7'd013: 
                  begin
                    s_reg_36 <= SobelFilter_Add_2Ux1U_3U_4_8_out1;
                  end
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_36 <= {1'b0, SobelFilter_Add_2Ux1U_2U_4_26_out1};
                  end
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                      begin
                        s_reg_36 <= {1'b0, s_reg_36[1:0]};
                      end 
                    else 
                      begin
                        s_reg_36 <= {1'b0, SobelFilter_Add_2Ux1U_2U_4_26_out1};
                      end
                  end
                7'd036, 7'd046: 
                  begin
                    s_reg_36 <= SobelFilter_Add_2Ux1U_3U_4_181_out1;
                  end
                7'd058: 
                  begin
                    s_reg_36 <= SobelFilter_Add_2Ux1U_3U_4_202_out1;
                  end
                7'd077: 
                  begin
                    s_reg_36 <= SobelFilter_Add_2Ux1U_3U_4_194_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_3bx5i1c
    // resource: regr_en_3
    always @(posedge i_clk)
      begin : drive_s_reg_38
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd009, 7'd013, 7'd018, 7'd030, 7'd036, 7'd046, 7'd050, 7'd056, 7'd070, 7'd076, 7'd087: 
                  begin
                    s_reg_38 <= 3'd0;
                  end
                7'd011: 
                  begin
                    s_reg_38 <= SobelFilter_Add_2Ux1U_3U_4_13_out1;
                  end
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                      begin
                        s_reg_38 <= {1'b0, s_reg_38[1:0]};
                      end 
                    else 
                      begin
                        s_reg_38 <= {1'b0, s_reg_36[1:0]};
                      end
                  end
                7'd045, 7'd066, 7'd083: 
                  begin
                    s_reg_38 <= s_reg_160;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_39
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd011: 
                  begin
                    s_reg_39 <= SobelFilter_LessThan_3Sx3S_1U_4_11_out1;
                  end
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_39 <= SobelFilter_And_1Ux1U_1U_4_23_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_2bx3i1c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_s_reg_4_slice
        if (i_rst == 1'b0) 
          begin
            s_reg_4_slice <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd013, 7'd046, 7'd065, 7'd082: 
                      begin
                        s_reg_4_slice <= s_reg_36[1:0];
                      end
                    7'd018, 7'd030, 7'd036, 7'd050, 7'd056, 7'd066, 7'd070, 7'd076, 7'd083, 7'd087: 
                      begin
                        s_reg_4_slice <= 2'd0;
                      end
                    7'd019: 
                      begin
                        s_reg_4_slice <= SobelFilter_Add_2Ux1U_2U_4_91_out1;
                      end
                    7'd020: 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                          begin
                          end 
                        else 
                          begin
                            s_reg_4_slice <= 2'd0;
                          end
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_6bx5i0c
    // resource: regr_en_6
    always @(posedge i_clk)
      begin : drive_s_reg_49
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_49 <= SobelFilter_Mul_6Sx2U_6S_4_24_out1;
                  end
                7'd023: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                      begin
                      end 
                    else 
                      begin
                        /* state36 */
                        case (s_reg_50) 
                          32'd0000000013, 32'd0000000014, 32'd0000000015: 
                            begin
                              s_reg_49 <= SobelFilter_Sub_6Sx4U_6S_4_130_out1;
                            end
                        endcase
                      end
                  end
                7'd024: 
                  begin
                    s_reg_49 <= SobelFilter_Sub_6Sx4U_6S_4_130_out1;
                  end
                7'd025, 7'd031, 7'd051, 7'd071: 
                  begin
                    if (s_reg_81) 
                      begin
                        s_reg_49 <= SobelFilter_Mul_6Sx2U_6S_4_164_out1;
                      end 
                  end
                7'd026, 7'd032, 7'd052, 7'd072: 
                  begin
                    s_reg_49 <= SobelFilter_Add_6Ux4U_7S_4_167_out1[5:0];
                  end
                7'd028, 7'd034, 7'd054, 7'd074: 
                  begin
                    s_reg_49 <= SobelFilter_Add_6Sx2U_6S_4_175_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_6bx6i0c
    // resource: regr_en_sc_6
    always @(posedge i_clk)
      begin : drive_s_reg_5
        if (i_rst == 1'b0) 
          begin
            s_reg_5 <= 6'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd012: 
                      begin
                        if (!(SobelFilter_LessThan_3Sx3S_1U_4_16_out1 || s_reg_39)) 
                          begin
                            s_reg_5 <= {s_reg_5[4], s_reg_5[4:0]};
                          end 
                      end
                    7'd016: 
                      begin
                        s_reg_5 <= {SobelFilter_Add_4Ux1U_5U_4_18_out1[4], SobelFilter_Add_4Ux1U_5U_4_18_out1};
                      end
                    7'd017: 
                      begin
                        s_reg_5 <= {s_reg_5[4], s_reg_5[4:0]};
                      end
                    7'd018, 7'd020, 7'd030, 7'd050, 7'd070, 7'd087: 
                      begin
                        s_reg_5 <= {1'b0, SobelFilter_Add_4Ux2U_5U_4_28_out1};
                      end
                    7'd022: 
                      begin
                        s_reg_5 <= {SobelFilter_Add_4Ux1U_5U_4_148_out1[4], SobelFilter_Add_4Ux1U_5U_4_148_out1};
                      end
                    7'd023: 
                      begin
                        /* state36 */
                        case (s_reg_50) 
                          32'd0000000013, 32'd0000000014, 32'd0000000015: 
                            begin
                              s_reg_5 <= SobelFilter_Sub_6Sx3U_6S_4_131_out1;
                            end
                        endcase
                      end
                    7'd024: 
                      begin
                        s_reg_5 <= SobelFilter_Sub_6Sx3U_6S_4_131_out1;
                      end
                    7'd026, 7'd032, 7'd052, 7'd072: 
                      begin
                        s_reg_5 <= SobelFilter_Mul_6Sx2U_6S_4_166_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_50
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_50 <= SobelFilter_Add_32Sx1U_32S_4_25_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_32bx5i0c
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_6
        if (i_rst == 1'b0) 
          begin
            s_reg_6 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd009, 7'd013, 7'd017: 
                      begin
                        s_reg_6 <= {8'b00000000, s_reg_6[23:0]};
                      end
                    7'd012: 
                      begin
                        s_reg_6 <= {8'b00000000, SobelFilter_Add_33Ux33U_33U_4_17_out1[23:0]};
                      end
                    7'd021: 
                      begin
                        s_reg_6 <= {8'b00000000, Gaussian_value_out1};
                      end
                    7'd040, 7'd079: 
                      begin
                        s_reg_6 <= buffer_out1;
                      end
                    7'd044, 7'd064, 7'd081: 
                      begin
                        s_reg_6 <= {8'b00000000, SobelFilter_N_Mux_24_2_22_4_230_out1};
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_7
        if (i_rst == 1'b0) 
          begin
            s_reg_7 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_7 <= SobelFilter_N_Mux_20_2_10_4_106_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_81
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_81 <= SobelFilter_OrReduction_5U_1U_4_29_out1;
                  end
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                      begin
                        s_reg_81 <= SobelFilter_OrReduction_5U_1U_4_29_out1;
                      end 
                    else 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_129_out1) 
                          begin
                            s_reg_81 <= SobelFilter_OrReduction_5U_1U_4_29_out1;
                          end 
                        else 
                          begin
                            s_reg_81 <= SobelFilter_LessThan_32Sx5S_1U_4_22_out1;
                          end
                      end
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_81_1
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd020: 
                  begin
                    wire_s_reg_81_1 <= SobelFilter_LessThan_32Sx5S_1U_4_22_out1;
                  end
                7'd023: 
                  begin
                    if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                      begin
                        wire_s_reg_81_1 <= s_reg_81;
                      end 
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_4bx6i1c
    // resource: regr_en_4
    always @(posedge i_clk)
      begin : drive_s_reg_83
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_83 <= SobelFilter_Mul_2Ux2U_4U_4_46_out1;
                  end
                7'd020: 
                  begin
                    if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                      begin
                        s_reg_83 <= SobelFilter_Mul_2Ux2U_4U_4_46_out1;
                      end 
                    else 
                      begin
                        if (SobelFilter_LessThan_2Ux2U_1U_4_129_out1) 
                          begin
                            s_reg_83 <= SobelFilter_Mul_2Ux2U_4U_4_46_out1;
                          end 
                        else 
                          begin
                            s_reg_83 <= 4'd00;
                          end
                      end
                  end
                7'd023: 
                  begin
                    s_reg_83 <= s_reg_5[3:0];
                  end
                7'd036, 7'd046: 
                  begin
                    s_reg_83 <= SobelFilter_Mul_2Ux2U_4U_4_180_out1;
                  end
                7'd056, 7'd066: 
                  begin
                    s_reg_83 <= SobelFilter_Mul_2Ux2U_4U_4_182_out1;
                  end
                7'd076, 7'd083: 
                  begin
                    s_reg_83 <= SobelFilter_Mul_2Ux2U_4U_4_184_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_20
    always @(posedge i_clk)
      begin : drive_s_reg_9
        if (i_rst == 1'b0) 
          begin
            s_reg_9 <= 20'd0000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    7'd019: 
                      begin
                        s_reg_9 <= SobelFilter_N_Mux_20_2_10_4_115_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_92
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd020, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_92 <= SobelFilter_Equal_5Ux3U_1U_4_59_out1;
                  end
                7'd021: 
                  begin
                    s_reg_92 <= SobelFilter_Or_1Ux1U_1U_4_142_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_93
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd020, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_93 <= SobelFilter_Equal_5Ux3U_1U_4_60_out1;
                  end
                7'd021: 
                  begin
                    s_reg_93 <= SobelFilter_And_1Ux1U_1U_4_147_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_93_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd021: 
                  begin
                    wire_s_reg_93_0 <= SobelFilter_And_1Ux1U_1U_4_147_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_94
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd020, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_94 <= SobelFilter_Equal_5Ux2U_1U_4_61_out1;
                  end
                7'd022: 
                  begin
                    s_reg_94 <= SobelFilter_Or_1Ux1U_1U_4_142_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i0c
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_s_reg_95
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd018, 7'd020, 7'd030, 7'd050, 7'd070, 7'd087: 
                  begin
                    s_reg_95 <= SobelFilter_Equal_5Ux1U_1U_4_62_out1;
                  end
                7'd022: 
                  begin
                    s_reg_95 <= SobelFilter_Not_1U_1U_4_154_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_1
    always @(posedge i_clk)
      begin : drive_wire_s_reg_95_0
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                7'd022: 
                  begin
                    wire_s_reg_95_0 <= SobelFilter_Not_1U_1U_4_154_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_4bx10i9c
    always @(SobelFilter_Add_4Ux2U_5S_4_10_out1[3:0] or gs_ctrl_do_filter_h5fe)
      begin : drive_expon_value_in1
        case (gs_ctrl_do_filter_h5fe) 
          4'd01: 
            begin
              expon_value_in1 = 4'd01;
            end
          4'd02: 
            begin
              expon_value_in1 = 4'd02;
            end
          4'd03: 
            begin
              expon_value_in1 = 4'd03;
            end
          4'd04: 
            begin
              expon_value_in1 = 4'd04;
            end
          4'd05: 
            begin
              expon_value_in1 = 4'd05;
            end
          4'd06: 
            begin
              expon_value_in1 = 4'd06;
            end
          4'd07: 
            begin
              expon_value_in1 = 4'd07;
            end
          4'd08: 
            begin
              expon_value_in1 = 4'd08;
            end
          4'd09: 
            begin
              expon_value_in1 = SobelFilter_Add_4Ux2U_5S_4_10_out1[3:0];
            end
          default: 
            begin
              expon_value_in1 = 4'd00;
            end
        endcase
      end
    
    // resource: mux_24bx3i3c
    always @(gs_ctrl_do_filter_hba)
      begin : drive_expon_value_DIN
        case (gs_ctrl_do_filter_hba) 
          2'd1: 
            begin
              expon_value_DIN = 24'd00480073;
            end
          2'd2: 
            begin
              expon_value_DIN = 24'd01048576;
            end
          default: 
            begin
              expon_value_DIN = 24'd00219793;
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h5ff)
      begin : drive_expon_value_CE
        if (stall0) 
          begin
            expon_value_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h5ff) 
              begin
                expon_value_CE = 1'b1;
              end 
            else 
              begin
                expon_value_CE = 1'b0;
              end
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h1ff)
      begin : drive_expon_value_RW
        if (stall0) 
          begin
            expon_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h1ff) 
              begin
                expon_value_RW = 1'b1;
              end 
            else 
              begin
                expon_value_RW = 1'b0;
              end
          end
      end
    
    // resource: mux_2bx2i0c
    always @(s_reg_36[1:0] or gs_ctrl_do_filter_h2000 or s_reg_4_slice)
      begin : drive_SobelFilter_Add_2Ux1U_3U_4_8_in2
        if (gs_ctrl_do_filter_h2000) 
          begin
            SobelFilter_Add_2Ux1U_3U_4_8_in2 = s_reg_36[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_3U_4_8_in2 = s_reg_4_slice;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_8
    assign SobelFilter_Add_2Ux1U_3U_4_8_out1 = {1'b0, SobelFilter_Add_2Ux1U_3U_4_8_in2} + 3'd1;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_9
    assign SobelFilter_Mul_2Ux2U_4U_4_9_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_10
    assign SobelFilter_Add_4Ux2U_5S_4_10_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_9_out1} + {3'b000, s_reg_38[1:0]};
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_11
    assign SobelFilter_LessThan_3Sx3S_1U_4_11_out1 = s_reg_36[2] ^ s_reg_36 < 3'd3;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_13
    assign SobelFilter_Add_2Ux1U_3U_4_13_out1 = {1'b0, s_reg_38[1:0]} + 3'd1;
    
    // resource: mux_32bx6i0c
    always @(s_reg_193 or s_reg_198 or s_reg_6 or expon_value_out1 or Gaussian_value_out1 or gs_ctrl_do_filter_h8000380000e70003)
      begin : drive_SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice
        case (gs_ctrl_do_filter_h8000380000e70003) 
          3'd1: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = {8'b00000000, Gaussian_value_out1};
            end
          3'd2: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = {8'b00000000, s_reg_6[23:0]};
            end
          3'd3: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = s_reg_6;
            end
          3'd4: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = s_reg_198;
            end
          3'd5: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = s_reg_193;
            end
          default: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = {8'b00000000, expon_value_out1};
            end
        endcase
      end
    
    // resource: mux_32bx4i1c
    always @(s_reg_186 or SobelFilter_N_Mux_20_16_19_4_143_out1 or SobelFilter_N_Mux_20_11_20_4_155_out1 or gs_ctrl_do_filter_h8000380000e700030)
      begin : drive_SobelFilter_Mul_33Sx32U_35S_4_15_in1
        case (gs_ctrl_do_filter_h8000380000e700030) 
          2'd1: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in1 = {12'b000000000000, SobelFilter_N_Mux_20_16_19_4_143_out1};
            end
          2'd2: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in1 = {12'b000000000000, SobelFilter_N_Mux_20_11_20_4_155_out1};
            end
          2'd3: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in1 = s_reg_186;
            end
          default: 
            begin
              SobelFilter_Mul_33Sx32U_35S_4_15_in1 = 32'd0000001019;
            end
        endcase
      end
    
    // resource: SobelFilter_Mul_33Sx32U_35S_4  instance: SobelFilter_Mul_33Sx32U_35S_4_15
    assign SobelFilter_Mul_33Sx32U_35S_4_15_out1 = {3'd0, SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice} * {3'b000, SobelFilter_Mul_33Sx32U_35S_4_15_in1};
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_16
    assign SobelFilter_LessThan_3Sx3S_1U_4_16_out1 = s_reg_38[2] ^ s_reg_38 < 3'd3;
    
    // resource: mux_33bx7i0c
    always @(o_result_data[20:0] or s_reg_131[20:0] or s_reg_132 or s_reg_165 or s_reg_6[23:0] or SobelFilter_Mul_33Sx32U_35S_4_15_out1[31:0] or gs_ctrl_do_filter_h8001b80000d7001b)
      begin : drive_SobelFilter_Add_33Ux33U_33U_4_17_in2
        case (gs_ctrl_do_filter_h8001b80000d7001b) 
          3'd1: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {o_result_data[20:0], 12'd0000};
            end
          3'd2: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {s_reg_131[20:0], 12'd0000};
            end
          3'd3: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {s_reg_132, 12'd0000};
            end
          3'd4: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {1'b0, SobelFilter_Mul_33Sx32U_35S_4_15_out1[31:0]};
            end
          3'd5: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {{s_reg_132[15], s_reg_132[15:0]}, 16'd00000};
            end
          3'd6: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {s_reg_165[31], s_reg_165};
            end
          default: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in2 = {9'b000000000, s_reg_6[23:0]};
            end
        endcase
      end
    
    // resource: mux_33bx6i0c
    always @(o_result_data or s_reg_131[31:0] or s_reg_132[13:0] or s_reg_165 or s_reg_6[23:0] or SobelFilter_Mul_33Sx32U_35S_4_15_out1[32:0] or gs_ctrl_do_filter_h8001b80000d7001b0)
      begin : drive_SobelFilter_Add_33Ux33U_33U_4_17_in1
        case (gs_ctrl_do_filter_h8001b80000d7001b0) 
          3'd1: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in1 = SobelFilter_Mul_33Sx32U_35S_4_15_out1[32:0];
            end
          3'd2: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in1 = {s_reg_131[31], s_reg_131[31:0]};
            end
          3'd3: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in1 = {s_reg_165[31], s_reg_165};
            end
          3'd4: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in1 = {o_result_data[31], o_result_data};
            end
          3'd5: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in1 = {{s_reg_6[23], s_reg_6[23:0]}, 8'd000};
            end
          default: 
            begin
              SobelFilter_Add_33Ux33U_33U_4_17_in1 = {19'b0000000000000000000, s_reg_132[13:0]};
            end
        endcase
      end
    
    // resource: SobelFilter_Add_33Ux33U_33U_4  instance: SobelFilter_Add_33Ux33U_33U_4_17
    assign SobelFilter_Add_33Ux33U_33U_4_17_out1 = SobelFilter_Add_33Ux33U_33U_4_17_in2 + SobelFilter_Add_33Ux33U_33U_4_17_in1;
    
    // resource: mux_4bx3i1c
    always @(s_reg_5[3:0] or SobelFilter_Add_4Ux2U_5S_4_10_out1[3:0] or gs_ctrl_do_filter_h931000)
      begin : drive_Gaussian_value_in1
        case (gs_ctrl_do_filter_h931000) 
          2'd1: 
            begin
              Gaussian_value_in1 = s_reg_5[3:0];
            end
          2'd2: 
            begin
              Gaussian_value_in1 = 4'd00;
            end
          default: 
            begin
              Gaussian_value_in1 = SobelFilter_Add_4Ux2U_5S_4_10_out1[3:0];
            end
        endcase
      end
    
    // resource: mux_24bx2i0c
    always @(SobelFilter_Mul_33Sx32U_35S_4_15_out1[33:20] or SobelFilter_DivRem_4_19_out1[36:13] or gs_ctrl_do_filter_h10000)
      begin : drive_Gaussian_value_DIN
        if (gs_ctrl_do_filter_h10000) 
          begin
            Gaussian_value_DIN = SobelFilter_DivRem_4_19_out1[36:13];
          end 
        else 
          begin
            Gaussian_value_DIN = {10'b0000000000, SobelFilter_Mul_33Sx32U_35S_4_15_out1[33:20]};
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or s_reg_39 or SobelFilter_LessThan_3Sx3S_1U_4_16_out1 or SobelFilter_LessThan_5Sx5S_1U_4_20_out1 or SobelFilter_LessThan_2Ux2U_1U_4_128_out1 or SobelFilter_LessThan_2Ux2U_1U_4_129_out1 or SobelFilter_LessThan_5Sx5S_1U_4_156_out1 or gs_ctrl_do_filter_h931800)
      begin : drive_Gaussian_value_CE
        if (stall0) 
          begin
            Gaussian_value_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h931800) 
              3'd1: 
                begin
                  Gaussian_value_CE = 1'b1;
                end
              3'd2: 
                begin
                  if (!(SobelFilter_LessThan_3Sx3S_1U_4_16_out1 || s_reg_39)) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd3: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_20_out1) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd4: 
                begin
                  if (!(SobelFilter_LessThan_2Ux2U_1U_4_128_out1 || SobelFilter_LessThan_2Ux2U_1U_4_129_out1)) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              3'd5: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                    begin
                      Gaussian_value_CE = 1'b1;
                    end 
                  else 
                    begin
                      Gaussian_value_CE = 1'b0;
                    end
                end
              default: 
                begin
                  Gaussian_value_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h10800)
      begin : drive_Gaussian_value_RW
        if (stall0) 
          begin
            Gaussian_value_RW = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h10800) 
              begin
                Gaussian_value_RW = 1'b1;
              end 
            else 
              begin
                Gaussian_value_RW = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_18
    assign SobelFilter_Add_4Ux1U_5U_4_18_out1 = {1'b0, s_reg_5[3:0]} + 5'd01;
    
    // instance: drive_SobelFilter_DivRem_4_19_in1
    assign SobelFilter_DivRem_4_19_in1 = {Gaussian_value_out1, 25'd00000000};
    
    // instance: drive_SobelFilter_DivRem_4_19_in2
    assign SobelFilter_DivRem_4_19_in2 = s_reg_6[23:0];
    
    // resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_20
    assign SobelFilter_LessThan_5Sx5S_1U_4_20_out1 = s_reg_5[4] ^ s_reg_5[4:0] < 5'd09;
    
    // resource: mux_32bx3i1c
    always @(s_reg_165 or s_reg_50 or gs_ctrl_do_filter_h4000040800040)
      begin : drive_SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2
        case (gs_ctrl_do_filter_h4000040800040) 
          2'd1: 
            begin
              SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 = s_reg_50;
            end
          2'd2: 
            begin
              SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 = 32'd0000000000;
            end
          default: 
            begin
              SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 = s_reg_165;
            end
        endcase
      end
    
    // resource: SobelFilter_GreaterThanEQ_32Sx4S_1U_4  instance: SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21
    assign SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1 = SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2[31] ^ SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 >= 32'd0000000005;
    
    // resource: mux_4bx2i2c
    always @(gs_ctrl_do_filter_h100000)
      begin : drive_SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice
        if (gs_ctrl_do_filter_h100000) 
          begin
            SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice = 4'd05;
          end 
        else 
          begin
            SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice = 4'd10;
          end
      end
    
    // resource: SobelFilter_LessThan_32Sx5S_1U_4  instance: SobelFilter_LessThan_32Sx5S_1U_4_22
    assign SobelFilter_LessThan_32Sx5S_1U_4_22_out1 = SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2[31] ^ SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 < {28'd000000000, SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice};
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_23
    assign SobelFilter_And_1Ux1U_1U_4_23_out1 = SobelFilter_LessThan_32Sx5S_1U_4_22_out1 & SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1;
    
    // resource: mux_6bx3i1c
    always @(s_reg_165[5:0] or s_reg_50[5:0] or gs_ctrl_do_filter_h4000040800040)
      begin : drive_SobelFilter_Mul_6Sx2U_6S_4_24_in2
        case (gs_ctrl_do_filter_h4000040800040) 
          2'd1: 
            begin
              SobelFilter_Mul_6Sx2U_6S_4_24_in2 = s_reg_50[5:0];
            end
          2'd2: 
            begin
              SobelFilter_Mul_6Sx2U_6S_4_24_in2 = 6'd00;
            end
          default: 
            begin
              SobelFilter_Mul_6Sx2U_6S_4_24_in2 = s_reg_165[5:0];
            end
        endcase
      end
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_24
    assign SobelFilter_Mul_6Sx2U_6S_4_24_out1 = {{ 26 {SobelFilter_Mul_6Sx2U_6S_4_24_in2[5]}}, SobelFilter_Mul_6Sx2U_6S_4_24_in2} * 6'd03;
    
    // resource: SobelFilter_Add_32Sx1U_32S_4  instance: SobelFilter_Add_32Sx1U_32S_4_25
    assign SobelFilter_Add_32Sx1U_32S_4_25_out1 = SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 + 32'd0000000001;
    
    // resource: mux_2bx2i1c
    always @(s_reg_36[1:0] or gs_ctrl_do_filter_h100000)
      begin : drive_SobelFilter_Add_2Ux1U_2U_4_26_in2
        if (gs_ctrl_do_filter_h100000) 
          begin
            SobelFilter_Add_2Ux1U_2U_4_26_in2 = s_reg_36[1:0];
          end 
        else 
          begin
            SobelFilter_Add_2Ux1U_2U_4_26_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_26
    assign SobelFilter_Add_2Ux1U_2U_4_26_out1 = SobelFilter_Add_2Ux1U_2U_4_26_in2 + 2'd1;
    
    // resource: mux_2bx3i1c
    always @(s_reg_36[1:0] or s_reg_38[1:0] or SobelFilter_LessThan_2Ux2U_1U_4_128_out1 or gs_ctrl_do_filter_h100000)
      begin : drive_SobelFilter_Mul_2Ux2U_4U_4_46_in2
        if (gs_ctrl_do_filter_h100000) 
          begin
            if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
              begin
                SobelFilter_Mul_2Ux2U_4U_4_46_in2 = s_reg_38[1:0];
              end 
            else 
              begin
                SobelFilter_Mul_2Ux2U_4U_4_46_in2 = s_reg_36[1:0];
              end
          end 
        else 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_46_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_46
    assign SobelFilter_Mul_2Ux2U_4U_4_46_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_46_in2} * 4'd03;
    
    // resource: mux_2bx2i1c
    always @(SobelFilter_LessThan_2Ux2U_1U_4_128_out1 or gs_ctrl_do_filter_h100000 or s_reg_4_slice)
      begin : drive_SobelFilter_Add_4Ux2U_5U_4_28_in1
        if (gs_ctrl_do_filter_h100000) 
          begin
            if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
              begin
                SobelFilter_Add_4Ux2U_5U_4_28_in1 = s_reg_4_slice;
              end 
            else 
              begin
                SobelFilter_Add_4Ux2U_5U_4_28_in1 = 2'd0;
              end
          end 
        else 
          begin
            SobelFilter_Add_4Ux2U_5U_4_28_in1 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_28
    assign SobelFilter_Add_4Ux2U_5U_4_28_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_46_out1} + {3'b000, SobelFilter_Add_4Ux2U_5U_4_28_in1};
    
    // resource: SobelFilter_OrReduction_5U_1U_4  instance: SobelFilter_OrReduction_5U_1U_4_29
    assign SobelFilter_OrReduction_5U_1U_4_29_out1 = (|SobelFilter_Add_4Ux2U_5U_4_28_out1);
    
    // resource: SobelFilter_Equal_5Ux4U_1U_4  instance: SobelFilter_Equal_5Ux4U_1U_4_47
    assign SobelFilter_Equal_5Ux4U_1U_4_47_out1 = SobelFilter_Add_4Ux2U_5U_4_28_out1 == 5'd09;
    
    // resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_59
    assign SobelFilter_Equal_5Ux3U_1U_4_59_out1 = SobelFilter_Add_4Ux2U_5U_4_28_out1 == 5'd07;
    
    // resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_60
    assign SobelFilter_Equal_5Ux3U_1U_4_60_out1 = SobelFilter_Add_4Ux2U_5U_4_28_out1 == 5'd06;
    
    // resource: SobelFilter_Equal_5Ux2U_1U_4  instance: SobelFilter_Equal_5Ux2U_1U_4_61
    assign SobelFilter_Equal_5Ux2U_1U_4_61_out1 = SobelFilter_Add_4Ux2U_5U_4_28_out1 == 5'd03;
    
    // resource: SobelFilter_Equal_5Ux1U_1U_4  instance: SobelFilter_Equal_5Ux1U_1U_4_62
    assign SobelFilter_Equal_5Ux1U_1U_4_62_out1 = SobelFilter_Add_4Ux2U_5U_4_28_out1 == 5'd01;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_65
    assign SobelFilter_Mul_2Ux2U_4U_4_65_out1 = {2'b00, s_reg_38[1:0]} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_79
    assign SobelFilter_Add_4Ux2U_5U_4_79_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_65_out1} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_91
    assign SobelFilter_Add_2Ux1U_2U_4_91_out1 = s_reg_4_slice + 2'd1;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_92
    assign SobelFilter_Add_4Ux2U_5U_4_92_out1 = {1'b0, s_reg_83} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Equal_5Ux4U_1U_4  instance: SobelFilter_Equal_5Ux4U_1U_4_93
    assign SobelFilter_Equal_5Ux4U_1U_4_93_out1 = s_reg_5[4:0] == 5'd08;
    
    // resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_94
    assign SobelFilter_Equal_5Ux3U_1U_4_94_out1 = s_reg_5[4:0] == 5'd05;
    
    // resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_95
    assign SobelFilter_Equal_5Ux3U_1U_4_95_out1 = s_reg_5[4:0] == 5'd04;
    
    // resource: SobelFilter_Equal_5Ux2U_1U_4  instance: SobelFilter_Equal_5Ux2U_1U_4_96
    assign SobelFilter_Equal_5Ux2U_1U_4_96_out1 = s_reg_5[4:0] == 5'd02;
    
    // resource: SobelFilter_OrReduction_5U_1U_4  instance: SobelFilter_OrReduction_5U_1U_4_97
    assign SobelFilter_OrReduction_5U_1U_4_97_out1 = (|s_reg_5[4:0]);
    
    // resource: SobelFilter_N_Mux_24_2_0_4
    always @(i_rgb_data or i_rgb_m_stall_reg or i_rgb_m_stall_reg_full)
      begin : SobelFilter_N_Mux_24_2_0_4_98
        if (i_rgb_m_stall_reg_full) 
          begin
            SobelFilter_N_Mux_24_2_0_4_98_out1 = i_rgb_m_stall_reg;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_0_4_98_out1 = i_rgb_data;
          end
      end
    
    // instance: drive_SobelFilter_N_Mux_20_2_10_4_99_in2
    assign SobelFilter_N_Mux_20_2_10_4_99_in2 = {SobelFilter_N_Mux_24_2_0_4_98_out1[7:0], 12'd0000};
    
    // resource: SobelFilter_N_Mux_20_2_10_4
    always @(s_reg_126 or s_reg_7 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_99
        if (s_reg_126) 
          begin
            SobelFilter_N_Mux_20_2_10_4_99_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_99_out1 = s_reg_7;
          end
      end
    
    // instance: drive_SobelFilter_N_Mux_20_3_13_4_100_in2
    assign SobelFilter_N_Mux_20_3_13_4_100_in2 = {SobelFilter_N_Mux_24_2_0_4_98_out1[15:8], 12'd0000};
    
    // resource: SobelFilter_N_Mux_20_3_13_4
    always @(s_reg_23 or s_reg_5[4:0] or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_13_4_100
        case (s_reg_5[4:0]) 
          5'd06: 
            begin
              SobelFilter_N_Mux_20_3_13_4_100_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd15: 
            begin
              SobelFilter_N_Mux_20_3_13_4_100_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_13_4_100_out1 = s_reg_23;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_3_14_4
    always @(s_reg_22 or s_reg_5[4:0] or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_14_4_101
        case (s_reg_5[4:0]) 
          5'd05: 
            begin
              SobelFilter_N_Mux_20_3_14_4_101_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd14: 
            begin
              SobelFilter_N_Mux_20_3_14_4_101_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_14_4_101_out1 = s_reg_22;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_3_15_4
    always @(s_reg_21 or SobelFilter_Add_4Ux2U_5U_4_92_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_15_4_102
        case (SobelFilter_Add_4Ux2U_5U_4_92_out1) 
          5'd04: 
            begin
              SobelFilter_N_Mux_20_3_15_4_102_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd13: 
            begin
              SobelFilter_N_Mux_20_3_15_4_102_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_15_4_102_out1 = s_reg_21;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_3_16_4
    always @(s_reg_20 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_16_4_103
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd03: 
            begin
              SobelFilter_N_Mux_20_3_16_4_103_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd12: 
            begin
              SobelFilter_N_Mux_20_3_16_4_103_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_16_4_103_out1 = s_reg_20;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_3_17_4
    always @(s_reg_19 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_17_4_104
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd02: 
            begin
              SobelFilter_N_Mux_20_3_17_4_104_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd11: 
            begin
              SobelFilter_N_Mux_20_3_17_4_104_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_17_4_104_out1 = s_reg_19;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_3_18_4
    always @(s_reg_18 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_18_4_105
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd01: 
            begin
              SobelFilter_N_Mux_20_3_18_4_105_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd10: 
            begin
              SobelFilter_N_Mux_20_3_18_4_105_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_18_4_105_out1 = s_reg_18;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_2_10_4
    always @(s_reg_81 or SobelFilter_N_Mux_20_2_10_4_99_out1 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_106
        if (s_reg_81) 
          begin
            SobelFilter_N_Mux_20_2_10_4_106_out1 = SobelFilter_N_Mux_20_2_10_4_99_out1;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_106_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
          end
      end
    always @(s_reg_17 or SobelFilter_Equal_5Ux4U_1U_4_93_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_107
        if (SobelFilter_Equal_5Ux4U_1U_4_93_out1) 
          begin
            SobelFilter_N_Mux_20_2_10_4_107_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_107_out1 = s_reg_17;
          end
      end
    always @(s_reg_16 or s_reg_92 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_108
        if (s_reg_92) 
          begin
            SobelFilter_N_Mux_20_2_10_4_108_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_108_out1 = s_reg_16;
          end
      end
    always @(s_reg_15 or s_reg_93 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_109
        if (s_reg_93) 
          begin
            SobelFilter_N_Mux_20_2_10_4_109_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_109_out1 = s_reg_15;
          end
      end
    always @(s_reg_14 or SobelFilter_Equal_5Ux3U_1U_4_94_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_110
        if (SobelFilter_Equal_5Ux3U_1U_4_94_out1) 
          begin
            SobelFilter_N_Mux_20_2_10_4_110_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_110_out1 = s_reg_14;
          end
      end
    always @(s_reg_13 or SobelFilter_Equal_5Ux3U_1U_4_95_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_111
        if (SobelFilter_Equal_5Ux3U_1U_4_95_out1) 
          begin
            SobelFilter_N_Mux_20_2_10_4_111_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_111_out1 = s_reg_13;
          end
      end
    always @(s_reg_12 or s_reg_94 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_112
        if (s_reg_94) 
          begin
            SobelFilter_N_Mux_20_2_10_4_112_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_112_out1 = s_reg_12;
          end
      end
    always @(s_reg_11 or SobelFilter_Equal_5Ux2U_1U_4_96_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_113
        if (SobelFilter_Equal_5Ux2U_1U_4_96_out1) 
          begin
            SobelFilter_N_Mux_20_2_10_4_113_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_113_out1 = s_reg_11;
          end
      end
    always @(s_reg_10 or s_reg_95 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_114
        if (s_reg_95) 
          begin
            SobelFilter_N_Mux_20_2_10_4_114_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_114_out1 = s_reg_10;
          end
      end
    always @(s_reg_9 or SobelFilter_OrReduction_5U_1U_4_97_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_115
        if (SobelFilter_OrReduction_5U_1U_4_97_out1) 
          begin
            SobelFilter_N_Mux_20_2_10_4_115_out1 = s_reg_9;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_115_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
          end
      end
    
    // resource: SobelFilter_N_Mux_20_3_9_4
    always @(s_reg_24 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_9_4_116
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd09: 
            begin
              SobelFilter_N_Mux_20_3_9_4_116_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd18: 
            begin
              SobelFilter_N_Mux_20_3_9_4_116_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_9_4_116_out1 = s_reg_24;
            end
        endcase
      end
    
    // instance: drive_SobelFilter_N_Mux_20_4_3_4_117_in2
    assign SobelFilter_N_Mux_20_4_3_4_117_in2 = {SobelFilter_N_Mux_24_2_0_4_98_out1[23:16], 12'd0000};
    
    // resource: SobelFilter_N_Mux_20_4_3_4
    always @(s_reg_32 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_3_4_117
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd06: 
            begin
              SobelFilter_N_Mux_20_4_3_4_117_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd15: 
            begin
              SobelFilter_N_Mux_20_4_3_4_117_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd24: 
            begin
              SobelFilter_N_Mux_20_4_3_4_117_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_3_4_117_out1 = s_reg_32;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_4_4
    always @(s_reg_31 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_4_4_118
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd05: 
            begin
              SobelFilter_N_Mux_20_4_4_4_118_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd14: 
            begin
              SobelFilter_N_Mux_20_4_4_4_118_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd23: 
            begin
              SobelFilter_N_Mux_20_4_4_4_118_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_4_4_118_out1 = s_reg_31;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_5_4
    always @(s_reg_30 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_5_4_119
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd04: 
            begin
              SobelFilter_N_Mux_20_4_5_4_119_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd13: 
            begin
              SobelFilter_N_Mux_20_4_5_4_119_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd22: 
            begin
              SobelFilter_N_Mux_20_4_5_4_119_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_5_4_119_out1 = s_reg_30;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_6_4
    always @(s_reg_29 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_6_4_120
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd03: 
            begin
              SobelFilter_N_Mux_20_4_6_4_120_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd12: 
            begin
              SobelFilter_N_Mux_20_4_6_4_120_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd21: 
            begin
              SobelFilter_N_Mux_20_4_6_4_120_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_6_4_120_out1 = s_reg_29;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_7_4
    always @(s_reg_28 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_7_4_121
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd02: 
            begin
              SobelFilter_N_Mux_20_4_7_4_121_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd11: 
            begin
              SobelFilter_N_Mux_20_4_7_4_121_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd20: 
            begin
              SobelFilter_N_Mux_20_4_7_4_121_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_7_4_121_out1 = s_reg_28;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_8_4
    always @(s_reg_27 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_8_4_122
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd01: 
            begin
              SobelFilter_N_Mux_20_4_8_4_122_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd10: 
            begin
              SobelFilter_N_Mux_20_4_8_4_122_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd19: 
            begin
              SobelFilter_N_Mux_20_4_8_4_122_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_8_4_122_out1 = s_reg_27;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_2_10_4
    always @(s_reg_81 or SobelFilter_N_Mux_20_3_9_4_116_out1 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_2_10_4_123
        if (s_reg_81) 
          begin
            SobelFilter_N_Mux_20_2_10_4_123_out1 = SobelFilter_N_Mux_20_3_9_4_116_out1;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_2_10_4_123_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
          end
      end
    
    // resource: SobelFilter_N_Mux_20_3_11_4
    always @(s_reg_26 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_11_4_124
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd08: 
            begin
              SobelFilter_N_Mux_20_3_11_4_124_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd17: 
            begin
              SobelFilter_N_Mux_20_3_11_4_124_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_11_4_124_out1 = s_reg_26;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_3_12_4
    always @(s_reg_25 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2)
      begin : SobelFilter_N_Mux_20_3_12_4_125
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd07: 
            begin
              SobelFilter_N_Mux_20_3_12_4_125_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd16: 
            begin
              SobelFilter_N_Mux_20_3_12_4_125_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_3_12_4_125_out1 = s_reg_25;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_1_4
    always @(s_reg_34 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_1_4_126
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd08: 
            begin
              SobelFilter_N_Mux_20_4_1_4_126_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd17: 
            begin
              SobelFilter_N_Mux_20_4_1_4_126_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd26: 
            begin
              SobelFilter_N_Mux_20_4_1_4_126_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_1_4_126_out1 = s_reg_34;
            end
        endcase
      end
    
    // resource: SobelFilter_N_Mux_20_4_2_4
    always @(s_reg_33 or SobelFilter_Add_4Ux2U_5U_4_79_out1 or SobelFilter_N_Mux_20_2_10_4_99_in2 or SobelFilter_N_Mux_20_3_13_4_100_in2 or SobelFilter_N_Mux_20_4_3_4_117_in2)
      begin : SobelFilter_N_Mux_20_4_2_4_127
        case (SobelFilter_Add_4Ux2U_5U_4_79_out1) 
          5'd07: 
            begin
              SobelFilter_N_Mux_20_4_2_4_127_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2;
            end
          5'd16: 
            begin
              SobelFilter_N_Mux_20_4_2_4_127_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2;
            end
          5'd25: 
            begin
              SobelFilter_N_Mux_20_4_2_4_127_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_4_2_4_127_out1 = s_reg_33;
            end
        endcase
      end
    
    // resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_128
    assign SobelFilter_LessThan_2Ux2U_1U_4_128_out1 = s_reg_4_slice < 2'd3;
    
    // resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_129
    assign SobelFilter_LessThan_2Ux2U_1U_4_129_out1 = s_reg_36[1:0] < 2'd3;
    
    // resource: SobelFilter_Sub_6Sx4U_6S_4  instance: SobelFilter_Sub_6Sx4U_6S_4_130
    assign SobelFilter_Sub_6Sx4U_6S_4_130_out1 = s_reg_165[5:0] - 6'd10;
    
    // resource: SobelFilter_Sub_6Sx3U_6S_4  instance: SobelFilter_Sub_6Sx3U_6S_4_131
    assign SobelFilter_Sub_6Sx3U_6S_4_131_out1 = s_reg_165[5:0] - 6'd05;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_133
    assign SobelFilter_Mul_6Sx2U_6S_4_133_out1 = {{ 26 {s_reg_165[5]}}, s_reg_165[5:0]} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_134
    assign SobelFilter_Mul_6Sx2U_6S_4_134_out1 = {{ 26 {SobelFilter_Sub_6Sx4U_6S_4_130_out1[5]}}, SobelFilter_Sub_6Sx4U_6S_4_130_out1} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_135
    assign SobelFilter_Mul_6Sx2U_6S_4_135_out1 = {{ 26 {SobelFilter_Sub_6Sx3U_6S_4_131_out1[5]}}, SobelFilter_Sub_6Sx3U_6S_4_131_out1} * 6'd03;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_136
    assign SobelFilter_Not_1U_1U_4_136_out1 = !SobelFilter_LessThan_32Sx5S_1U_4_22_out1;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_139
    assign SobelFilter_And_1Ux1U_1U_4_139_out1 = SobelFilter_Not_1U_1U_4_136_out1 & s_reg_39;
    
    // resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_140
    assign SobelFilter_Add_6Sx2U_6S_4_140_out1 = SobelFilter_Mul_6Sx2U_6S_4_134_out1 + 6'd02;
    
    // resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_141
    assign SobelFilter_Add_6Sx1U_6S_4_141_out1 = SobelFilter_Mul_6Sx2U_6S_4_135_out1 + 6'd01;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_142
    assign SobelFilter_Or_1Ux1U_1U_4_142_out1 = s_reg_39 | s_reg_81;
    
    // resource: mux_20bx2i0c
    always @(s_reg_23 or s_reg_32 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in17
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in17 = s_reg_32;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in17 = s_reg_23;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_22 or s_reg_31 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in16
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in16 = s_reg_31;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in16 = s_reg_22;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_21 or s_reg_30 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in15
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in15 = s_reg_30;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in15 = s_reg_21;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_20 or s_reg_29 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in14
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in14 = s_reg_29;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in14 = s_reg_20;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_19 or s_reg_28 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in13
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in13 = s_reg_28;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in13 = s_reg_19;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_18 or s_reg_27 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in12
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in12 = s_reg_27;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in12 = s_reg_18;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_24 or s_reg_7 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in11
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in11 = s_reg_24;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in11 = s_reg_7;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_17 or s_reg_26 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in10
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in10 = s_reg_26;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in10 = s_reg_17;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_16 or s_reg_25 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in9
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in9 = s_reg_25;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in9 = s_reg_16;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_15 or s_reg_23 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in8
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in8 = s_reg_23;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in8 = s_reg_15;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_14 or s_reg_22 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in7
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in7 = s_reg_22;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in7 = s_reg_14;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_13 or s_reg_21 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in6
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in6 = s_reg_21;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in6 = s_reg_13;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_12 or s_reg_20 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in5
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in5 = s_reg_20;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in5 = s_reg_12;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_11 or s_reg_19 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in4
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in4 = s_reg_19;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in4 = s_reg_11;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_10 or s_reg_18 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in3
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in3 = s_reg_18;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in3 = s_reg_10;
          end
      end
    
    // resource: mux_20bx2i0c
    always @(s_reg_7 or s_reg_9 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_in2
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in2 = s_reg_7;
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_in2 = s_reg_9;
          end
      end
    
    // resource: mux_4bx2i0c
    always @(s_reg_133[3:0] or s_reg_83 or gs_ctrl_do_filter_h400000)
      begin : drive_SobelFilter_N_Mux_20_16_19_4_143_ctrl1
        if (gs_ctrl_do_filter_h400000) 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_ctrl1 = s_reg_133[3:0];
          end 
        else 
          begin
            SobelFilter_N_Mux_20_16_19_4_143_ctrl1 = s_reg_83;
          end
      end
    
    // resource: SobelFilter_N_Mux_20_16_19_4
    always @(SobelFilter_N_Mux_20_16_19_4_143_in17 or SobelFilter_N_Mux_20_16_19_4_143_in16 or SobelFilter_N_Mux_20_16_19_4_143_in15 or SobelFilter_N_Mux_20_16_19_4_143_in14 or SobelFilter_N_Mux_20_16_19_4_143_in13 or SobelFilter_N_Mux_20_16_19_4_143_in12 or SobelFilter_N_Mux_20_16_19_4_143_in11 or SobelFilter_N_Mux_20_16_19_4_143_in10 or SobelFilter_N_Mux_20_16_19_4_143_in9 or SobelFilter_N_Mux_20_16_19_4_143_in8 or SobelFilter_N_Mux_20_16_19_4_143_in7 or SobelFilter_N_Mux_20_16_19_4_143_in6
 or 
    SobelFilter_N_Mux_20_16_19_4_143_in5 or SobelFilter_N_Mux_20_16_19_4_143_in4 or SobelFilter_N_Mux_20_16_19_4_143_in3 or SobelFilter_N_Mux_20_16_19_4_143_in2 or SobelFilter_N_Mux_20_16_19_4_143_ctrl1)
      begin : SobelFilter_N_Mux_20_16_19_4_143
        case (SobelFilter_N_Mux_20_16_19_4_143_ctrl1) 
          4'd00: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in2;
            end
          4'd01: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in3;
            end
          4'd02: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in4;
            end
          4'd03: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in5;
            end
          4'd04: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in6;
            end
          4'd05: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in7;
            end
          4'd06: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in8;
            end
          4'd07: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in9;
            end
          4'd08: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in10;
            end
          4'd09: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in11;
            end
          4'd10: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in12;
            end
          4'd11: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in13;
            end
          4'd12: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in14;
            end
          4'd13: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in15;
            end
          4'd14: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in16;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in17;
            end
        endcase
      end
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_144
    assign SobelFilter_Not_1U_1U_4_144_out1 = !s_reg_81;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_147
    assign SobelFilter_And_1Ux1U_1U_4_147_out1 = SobelFilter_Not_1U_1U_4_144_out1 & s_reg_39;
    
    // resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_148
    assign SobelFilter_Add_4Ux1U_5U_4_148_out1 = {1'b0, s_reg_133[3:0]} + 5'd01;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_154
    assign SobelFilter_Not_1U_1U_4_154_out1 = !SobelFilter_Or_1Ux1U_1U_4_142_out1;
    
    // resource: SobelFilter_N_Mux_20_11_20_4
    always @(s_reg_10 or s_reg_133[3:0] or s_reg_24 or s_reg_27 or s_reg_28 or s_reg_29 or s_reg_30 or s_reg_31 or s_reg_32 or s_reg_33 or s_reg_34 or s_reg_9)
      begin : SobelFilter_N_Mux_20_11_20_4_155
        case (s_reg_133[3:0]) 
          4'd00: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_24;
            end
          4'd01: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_27;
            end
          4'd02: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_28;
            end
          4'd03: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_29;
            end
          4'd04: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_30;
            end
          4'd05: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_31;
            end
          4'd06: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_32;
            end
          4'd07: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_33;
            end
          4'd08: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_34;
            end
          4'd14: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_9;
            end
          default: 
            begin
              SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_10;
            end
        endcase
      end
    
    // resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_156
    assign SobelFilter_LessThan_5Sx5S_1U_4_156_out1 = s_reg_5[4] ^ s_reg_5[4:0] < 5'd09;
    
    // resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_161
    assign SobelFilter_Add_6Ux4U_7S_4_161_out1 = {1'b0, s_reg_125} + 7'd015;
    
    // resource: mux_6bx17i0c
    always @(wire_s_reg_126_0 or s_reg_152 or s_reg_49 or s_reg_93 or wire_s_reg_93_0 or SobelFilter_Add_6Ux4U_7S_4_161_out1[5:0] or SobelFilter_Add_6Ux5U_7S_4_169_out1[5:0] or SobelFilter_Add_6Sx2U_6S_4_172_out1 or SobelFilter_Add_6Sx1U_6S_4_173_out1 or SobelFilter_Add_6Ux5U_7S_4_178_out1[5:0] or SobelFilter_Add_6Ux5U_7S_4_179_out1[5:0] or SobelFilter_Add_4Ux2U_5U_4_186_out1 or SobelFilter_Add_5Ux4U_6U_4_205_out1 or SobelFilter_Add_5Ux3U_5U_4_207_out1 or SobelFilter_Add_5Ux2U_5U_4_209_out1 or 
SobelFilter_Add_5Ux5U_6U_4_211_out1
     or SobelFilter_Add_5Ux4U_6U_4_213_out1 or SobelFilter_Add_5Ux4U_6U_4_215_out1 or SobelFilter_Add_5Ux5U_6U_4_231_out1 or SobelFilter_Add_5Ux5U_6U_4_232_out1 or gs_ctrl_do_filter_h58f8058fbe0cdf80)
      begin : drive_buffer_in1
        case (gs_ctrl_do_filter_h58f8058fbe0cdf80) 
          4'd01: 
            begin
              buffer_in1 = SobelFilter_Add_6Ux4U_7S_4_161_out1[5:0];
            end
          4'd02: 
            begin
              buffer_in1 = SobelFilter_Add_6Ux5U_7S_4_169_out1[5:0];
            end
          4'd03: 
            begin
              if (s_reg_93 && wire_s_reg_93_0) 
                begin
                  buffer_in1 = SobelFilter_Add_6Sx1U_6S_4_173_out1;
                end 
              else 
                begin
                  buffer_in1 = SobelFilter_Add_6Sx2U_6S_4_172_out1;
                end
            end
          4'd04: 
            begin
              if (s_reg_93 && wire_s_reg_126_0) 
                begin
                  buffer_in1 = s_reg_152;
                end 
              else 
                begin
                  buffer_in1 = s_reg_49;
                end
            end
          4'd05: 
            begin
              if (s_reg_93 && wire_s_reg_126_0) 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux5U_7S_4_179_out1[5:0];
                end 
              else 
                begin
                  buffer_in1 = SobelFilter_Add_6Ux5U_7S_4_178_out1[5:0];
                end
            end
          4'd06: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_5Ux3U_5U_4_207_out1};
            end
          4'd07: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_213_out1;
            end
          4'd08: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_231_out1;
            end
          4'd09: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_5Ux2U_5U_4_209_out1};
            end
          4'd10: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_215_out1;
            end
          4'd11: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_232_out1;
            end
          4'd12: 
            begin
              buffer_in1 = {1'b0, SobelFilter_Add_4Ux2U_5U_4_186_out1};
            end
          4'd13: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_205_out1;
            end
          4'd14: 
            begin
              buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_211_out1;
            end
          default: 
            begin
              buffer_in1 = s_reg_49;
            end
        endcase
      end
    
    // resource: mux_32bx3i0c
    always @(o_result_data[20:12] or s_reg_131[20:12] or s_reg_132[20:12] or gs_ctrl_do_filter_hd8000db6000d80)
      begin : drive_buffer_DIN
        case (gs_ctrl_do_filter_hd8000db6000d80) 
          2'd1: 
            begin
              buffer_DIN = {23'b00000000000000000000000, s_reg_131[20:12]};
            end
          2'd2: 
            begin
              buffer_DIN = {23'b00000000000000000000000, s_reg_132[20:12]};
            end
          default: 
            begin
              buffer_DIN = {23'b00000000000000000000000, o_result_data[20:12]};
            end
        endcase
      end
    
    // resource: mux_1bx8i2c
    always @(stall0 or s_reg_126 or wire_s_reg_126_0 or s_reg_50 or s_reg_81 or wire_s_reg_81_1 or s_reg_93 or wire_s_reg_93_0 or s_reg_95 or wire_s_reg_95_0 or SobelFilter_LessThan_5Sx5S_1U_4_156_out1 or SobelFilter_Not_1U_1U_4_174_out1 or SobelFilter_Not_1U_1U_4_177_out1 or SobelFilter_LessThan_3Sx3S_1U_4_233_out1 or gs_ctrl_do_filter_h58f8058fbf8cdf80)
      begin : drive_buffer_CE
        if (stall0) 
          begin
            buffer_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h58f8058fbf8cdf80) 
              4'd01: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                    begin
                      buffer_CE = 1'b0;
                    end 
                  else 
                    begin
                      /* state36 */
                      case (s_reg_50) 
                        32'd0000000013, 32'd0000000014, 32'd0000000015: 
                          begin
                            if (s_reg_81 && wire_s_reg_81_1) 
                              begin
                                buffer_CE = s_reg_81;
                              end 
                            else 
                              begin
                                buffer_CE = 1'b0;
                              end
                          end
                        default: 
                          begin
                            buffer_CE = 1'b0;
                          end
                      endcase
                    end
                end
              4'd02: 
                begin
                  if (s_reg_81 && wire_s_reg_81_1) 
                    begin
                      buffer_CE = s_reg_81;
                    end 
                  else 
                    begin
                      buffer_CE = 1'b0;
                    end
                end
              4'd03: 
                begin
                  if (s_reg_93 && wire_s_reg_93_0) 
                    begin
                      buffer_CE = s_reg_93;
                    end 
                  else 
                    begin
                      if (s_reg_95 && wire_s_reg_95_0) 
                        begin
                          buffer_CE = s_reg_95;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd04: 
                begin
                  if (s_reg_93 && wire_s_reg_126_0) 
                    begin
                      buffer_CE = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_174_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_174_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd05: 
                begin
                  if (s_reg_93 && wire_s_reg_126_0) 
                    begin
                      buffer_CE = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_177_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_177_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd06: 
                begin
                  if (s_reg_93 && s_reg_126 && wire_s_reg_126_0) 
                    begin
                      buffer_CE = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_174_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_174_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd07: 
                begin
                  if (s_reg_93 && s_reg_126 && wire_s_reg_126_0) 
                    begin
                      buffer_CE = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_177_out1) 
                        begin
                          buffer_CE = SobelFilter_Not_1U_1U_4_177_out1;
                        end 
                      else 
                        begin
                          buffer_CE = 1'b0;
                        end
                    end
                end
              4'd08: 
                begin
                  buffer_CE = 1'b1;
                end
              4'd09: 
                begin
                  if (SobelFilter_LessThan_3Sx3S_1U_4_233_out1) 
                    begin
                      buffer_CE = 1'b1;
                    end 
                  else 
                    begin
                      buffer_CE = 1'b0;
                    end
                end
              default: 
                begin
                  buffer_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx7i1c
    always @(stall0 or s_reg_126 or wire_s_reg_126_0 or s_reg_50 or s_reg_81 or wire_s_reg_81_1 or s_reg_93 or wire_s_reg_93_0 or s_reg_95 or wire_s_reg_95_0 or SobelFilter_LessThan_5Sx5S_1U_4_156_out1 or SobelFilter_Not_1U_1U_4_174_out1 or SobelFilter_Not_1U_1U_4_177_out1 or gs_ctrl_do_filter_hf8000fbf800f80)
      begin : drive_buffer_RW
        if (stall0) 
          begin
            buffer_RW = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_hf8000fbf800f80) 
              3'd1: 
                begin
                  if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                    begin
                      buffer_RW = 1'b0;
                    end 
                  else 
                    begin
                      /* state36 */
                      case (s_reg_50) 
                        32'd0000000013, 32'd0000000014, 32'd0000000015: 
                          begin
                            if (s_reg_81 && wire_s_reg_81_1) 
                              begin
                                buffer_RW = s_reg_81;
                              end 
                            else 
                              begin
                                buffer_RW = 1'b0;
                              end
                          end
                        default: 
                          begin
                            buffer_RW = 1'b0;
                          end
                      endcase
                    end
                end
              3'd2: 
                begin
                  if (s_reg_81 && wire_s_reg_81_1) 
                    begin
                      buffer_RW = s_reg_81;
                    end 
                  else 
                    begin
                      buffer_RW = 1'b0;
                    end
                end
              3'd3: 
                begin
                  if (s_reg_93 && wire_s_reg_93_0) 
                    begin
                      buffer_RW = s_reg_93;
                    end 
                  else 
                    begin
                      if (s_reg_95 && wire_s_reg_95_0) 
                        begin
                          buffer_RW = s_reg_95;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd4: 
                begin
                  if (s_reg_93 && wire_s_reg_126_0) 
                    begin
                      buffer_RW = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_174_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_174_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd5: 
                begin
                  if (s_reg_93 && wire_s_reg_126_0) 
                    begin
                      buffer_RW = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_177_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_177_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd6: 
                begin
                  if (s_reg_93 && s_reg_126 && wire_s_reg_126_0) 
                    begin
                      buffer_RW = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_174_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_174_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              3'd7: 
                begin
                  if (s_reg_93 && s_reg_126 && wire_s_reg_126_0) 
                    begin
                      buffer_RW = s_reg_126;
                    end 
                  else 
                    begin
                      if (s_reg_95 && SobelFilter_Not_1U_1U_4_177_out1) 
                        begin
                          buffer_RW = SobelFilter_Not_1U_1U_4_177_out1;
                        end 
                      else 
                        begin
                          buffer_RW = 1'b0;
                        end
                    end
                end
              default: 
                begin
                  buffer_RW = 1'b0;
                end
            endcase
          end
      end
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_164
    assign SobelFilter_Mul_6Sx2U_6S_4_164_out1 = {{ 26 {s_reg_165[5]}}, s_reg_165[5:0]} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_165
    assign SobelFilter_Mul_6Sx2U_6S_4_165_out1 = {{ 26 {s_reg_49[5]}}, s_reg_49} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_166
    assign SobelFilter_Mul_6Sx2U_6S_4_166_out1 = {{ 26 {s_reg_5[5]}}, s_reg_5} * 6'd03;
    
    // resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_167
    assign SobelFilter_Add_6Ux4U_7S_4_167_out1 = {1'b0, s_reg_125} + 7'd015;
    
    // resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_168
    assign SobelFilter_Add_6Ux4U_7S_4_168_out1 = {1'b0, s_reg_125} + 7'd015;
    
    // resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_169
    assign SobelFilter_Add_6Ux5U_7S_4_169_out1 = {1'b0, s_reg_49} + 7'd030;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_170
    assign SobelFilter_Mul_6Sx2U_6S_4_170_out1 = {{ 26 {s_reg_133[5]}}, s_reg_133} * 6'd03;
    
    // resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_171
    assign SobelFilter_Mul_6Sx2U_6S_4_171_out1 = {{ 26 {s_reg_147[5]}}, s_reg_147} * 6'd03;
    
    // resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_172
    assign SobelFilter_Add_6Sx2U_6S_4_172_out1 = SobelFilter_Mul_6Sx2U_6S_4_170_out1 + 6'd02;
    
    // resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_173
    assign SobelFilter_Add_6Sx1U_6S_4_173_out1 = SobelFilter_Mul_6Sx2U_6S_4_171_out1 + 6'd01;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_174
    assign SobelFilter_Not_1U_1U_4_174_out1 = !s_reg_92;
    
    // resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_175
    assign SobelFilter_Add_6Sx2U_6S_4_175_out1 = s_reg_125 + 6'd02;
    
    // resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_176
    assign SobelFilter_Add_6Sx1U_6S_4_176_out1 = s_reg_5 + 6'd01;
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_177
    assign SobelFilter_Not_1U_1U_4_177_out1 = !s_reg_94;
    
    // resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_178
    assign SobelFilter_Add_6Ux5U_7S_4_178_out1 = {1'b0, s_reg_49} + 7'd030;
    
    // resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_179
    assign SobelFilter_Add_6Ux5U_7S_4_179_out1 = {1'b0, s_reg_125} + 7'd030;
    
    // resource: mux_2bx2i1c
    always @(s_reg_36[1:0] or gs_ctrl_do_filter_h400000000000)
      begin : drive_SobelFilter_Mul_2Ux2U_4U_4_180_in2
        if (gs_ctrl_do_filter_h400000000000) 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_180_in2 = s_reg_36[1:0];
          end 
        else 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_180_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_180
    assign SobelFilter_Mul_2Ux2U_4U_4_180_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_180_in2} * 4'd03;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_181
    assign SobelFilter_Add_2Ux1U_3U_4_181_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_180_in2} + 3'd1;
    
    // resource: mux_2bx2i1c
    always @(s_reg_160[1:0] or gs_ctrl_do_filter_h4)
      begin : drive_SobelFilter_Mul_2Ux2U_4U_4_182_in2
        if (gs_ctrl_do_filter_h4) 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_182_in2 = s_reg_160[1:0];
          end 
        else 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_182_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_182
    assign SobelFilter_Mul_2Ux2U_4U_4_182_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_182_in2} * 4'd03;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_183
    assign SobelFilter_Add_2Ux1U_3U_4_183_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_182_in2} + 3'd1;
    
    // resource: mux_2bx2i1c
    always @(s_reg_160[1:0] or gs_ctrl_do_filter_h80000)
      begin : drive_SobelFilter_Mul_2Ux2U_4U_4_184_in2
        if (gs_ctrl_do_filter_h80000) 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_184_in2 = s_reg_160[1:0];
          end 
        else 
          begin
            SobelFilter_Mul_2Ux2U_4U_4_184_in2 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_184
    assign SobelFilter_Mul_2Ux2U_4U_4_184_out1 = {2'b00, SobelFilter_Mul_2Ux2U_4U_4_184_in2} * 4'd03;
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_185
    assign SobelFilter_Add_2Ux1U_3U_4_185_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_184_in2} + 3'd1;
    
    // resource: mux_4bx2i0c
    always @(s_reg_83 or SobelFilter_Mul_2Ux2U_4U_4_184_out1 or gs_ctrl_do_filter_h40000)
      begin : drive_SobelFilter_Add_4Ux2U_5U_4_186_in2
        if (gs_ctrl_do_filter_h40000) 
          begin
            SobelFilter_Add_4Ux2U_5U_4_186_in2 = s_reg_83;
          end 
        else 
          begin
            SobelFilter_Add_4Ux2U_5U_4_186_in2 = SobelFilter_Mul_2Ux2U_4U_4_184_out1;
          end
      end
    
    // resource: mux_2bx2i1c
    always @(s_reg_36[1:0] or gs_ctrl_do_filter_h40000)
      begin : drive_SobelFilter_Add_4Ux2U_5U_4_186_in1
        if (gs_ctrl_do_filter_h40000) 
          begin
            SobelFilter_Add_4Ux2U_5U_4_186_in1 = s_reg_36[1:0];
          end 
        else 
          begin
            SobelFilter_Add_4Ux2U_5U_4_186_in1 = 2'd0;
          end
      end
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_186
    assign SobelFilter_Add_4Ux2U_5U_4_186_out1 = {1'b0, SobelFilter_Add_4Ux2U_5U_4_186_in2} + {3'b000, SobelFilter_Add_4Ux2U_5U_4_186_in1};
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_187
    assign SobelFilter_Add_4Ux2U_5U_4_187_out1 = {1'b0, s_reg_83} + {3'b000, s_reg_38[1:0]};
    
    // resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_188
    assign SobelFilter_Add_5Ux3U_5U_4_188_out1 = SobelFilter_Add_4Ux2U_5U_4_187_out1 + 5'd06;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_189
    assign SobelFilter_Add_4Ux2U_5U_4_189_out1 = {1'b0, s_reg_83} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_190
    assign SobelFilter_Add_5Ux2U_5U_4_190_out1 = SobelFilter_Add_4Ux2U_5U_4_189_out1 + 5'd03;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_191
    assign SobelFilter_Mul_2Ux2U_4U_4_191_out1 = {2'b00, s_reg_38[1:0]} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_193
    assign SobelFilter_Add_4Ux2U_5S_4_193_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_191_out1} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_194
    assign SobelFilter_Add_2Ux1U_3U_4_194_out1 = {1'b0, s_reg_4_slice} + 3'd1;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_196
    assign SobelFilter_Mul_2Ux2U_4U_4_196_out1 = {2'b00, s_reg_4_slice} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_197
    assign SobelFilter_Add_4Ux2U_5S_4_197_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_196_out1} + {3'b000, s_reg_38[1:0]};
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_198
    assign SobelFilter_Add_2Ux1U_3U_4_198_out1 = {1'b0, s_reg_38[1:0]} + 3'd1;
    
    // resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_199
    assign SobelFilter_Mul_2Ux2U_4U_4_199_out1 = {2'b00, s_reg_38[1:0]} * 4'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_201
    assign SobelFilter_Add_4Ux2U_5S_4_201_out1 = {1'b0, SobelFilter_Mul_2Ux2U_4U_4_199_out1} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_202
    assign SobelFilter_Add_2Ux1U_3U_4_202_out1 = {1'b0, s_reg_4_slice} + 3'd1;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_204
    assign SobelFilter_Add_4Ux2U_5U_4_204_out1 = {1'b0, s_reg_178} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_205
    assign SobelFilter_Add_5Ux4U_6U_4_205_out1 = {1'b0, SobelFilter_Add_4Ux2U_5U_4_204_out1} + 6'd15;
    
    // resource: mux_4bx3i0c
    always @(SobelFilter_Add_4Ux2U_5S_4_193_out1[3:0] or SobelFilter_Add_4Ux2U_5S_4_197_out1[3:0] or SobelFilter_Add_4Ux2U_5S_4_201_out1[3:0] or gs_ctrl_do_filter_h400000000002000)
      begin : drive_sharpening_in1
        case (gs_ctrl_do_filter_h400000000002000) 
          2'd1: 
            begin
              sharpening_in1 = SobelFilter_Add_4Ux2U_5S_4_201_out1[3:0];
            end
          2'd2: 
            begin
              sharpening_in1 = SobelFilter_Add_4Ux2U_5S_4_193_out1[3:0];
            end
          default: 
            begin
              sharpening_in1 = SobelFilter_Add_4Ux2U_5S_4_197_out1[3:0];
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h400004000002000)
      begin : drive_sharpening_CE
        if (stall0) 
          begin
            sharpening_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h400004000002000) 
              begin
                sharpening_CE = 1'b1;
              end 
            else 
              begin
                sharpening_CE = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_206
    assign SobelFilter_Add_4Ux2U_5U_4_206_out1 = {1'b0, s_reg_178} + {3'b000, s_reg_38[1:0]};
    
    // resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_207
    assign SobelFilter_Add_5Ux3U_5U_4_207_out1 = SobelFilter_Add_4Ux2U_5U_4_206_out1 + 5'd06;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_208
    assign SobelFilter_Add_4Ux2U_5U_4_208_out1 = {1'b0, s_reg_178} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_209
    assign SobelFilter_Add_5Ux2U_5U_4_209_out1 = SobelFilter_Add_4Ux2U_5U_4_208_out1 + 5'd03;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_210
    assign SobelFilter_Add_4Ux2U_5U_4_210_out1 = {1'b0, s_reg_178} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_211
    assign SobelFilter_Add_5Ux5U_6U_4_211_out1 = {1'b0, SobelFilter_Add_4Ux2U_5U_4_210_out1} + 6'd30;
    
    // resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_213
    assign SobelFilter_Add_5Ux4U_6U_4_213_out1 = {1'b0, s_reg_133[4:0]} + 6'd15;
    
    // resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_215
    assign SobelFilter_Add_5Ux4U_6U_4_215_out1 = {1'b0, s_reg_133[4:0]} + 6'd15;
    
    // resource: SobelFilter_GreaterThan_32Sx9S_1U_4  instance: SobelFilter_GreaterThan_32Sx9S_1U_4_228
    assign SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 = SobelFilter_Add_33Ux33U_33U_4_17_out1[31] ^ SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0] > 32'd0000000255;
    
    // instance: drive_SobelFilter_N_Mux_16_2_23_4_219_ctrl1
    assign SobelFilter_N_Mux_16_2_23_4_219_ctrl1 = SobelFilter_Add_33Ux33U_33U_4_17_out1[31];
    
    // resource: SobelFilter_N_Mux_16_2_23_4
    always @(SobelFilter_Add_33Ux33U_33U_4_17_out1[15:0] or SobelFilter_N_Mux_16_2_23_4_219_ctrl1)
      begin : SobelFilter_N_Mux_16_2_23_4_219
        if (SobelFilter_N_Mux_16_2_23_4_219_ctrl1) 
          begin
            SobelFilter_N_Mux_16_2_23_4_219_out1 = 16'd00000;
          end 
        else 
          begin
            SobelFilter_N_Mux_16_2_23_4_219_out1 = SobelFilter_Add_33Ux33U_33U_4_17_out1[15:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_16_2_24_4
    always @(SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 or SobelFilter_N_Mux_16_2_23_4_219_out1)
      begin : SobelFilter_N_Mux_16_2_24_4_220
        if (SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1) 
          begin
            SobelFilter_N_Mux_16_2_24_4_220_out1 = 16'd00255;
          end 
        else 
          begin
            SobelFilter_N_Mux_16_2_24_4_220_out1 = SobelFilter_N_Mux_16_2_23_4_219_out1;
          end
      end
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_221
    assign SobelFilter_Add_4Ux2U_5U_4_221_out1 = {1'b0, s_reg_178} + {3'b000, s_reg_38[1:0]};
    
    // resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_222
    assign SobelFilter_Add_5Ux3U_5U_4_222_out1 = SobelFilter_Add_4Ux2U_5U_4_221_out1 + 5'd06;
    
    // resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_223
    assign SobelFilter_Add_4Ux2U_5U_4_223_out1 = {1'b0, s_reg_178} + {3'b000, s_reg_4_slice};
    
    // resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_224
    assign SobelFilter_Add_5Ux2U_5U_4_224_out1 = SobelFilter_Add_4Ux2U_5U_4_223_out1 + 5'd03;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_225
    assign SobelFilter_LessThan_3Sx3S_1U_4_225_out1 = s_reg_160[2] ^ s_reg_160 < 3'd3;
    
    // resource: SobelFilter_N_Mux_24_2_21_4
    always @(SobelFilter_Add_33Ux33U_33U_4_17_out1[23:0] or SobelFilter_N_Mux_16_2_23_4_219_ctrl1)
      begin : SobelFilter_N_Mux_24_2_21_4_229
        if (SobelFilter_N_Mux_16_2_23_4_219_ctrl1) 
          begin
            SobelFilter_N_Mux_24_2_21_4_229_out1 = 24'd00000000;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_21_4_229_out1 = SobelFilter_Add_33Ux33U_33U_4_17_out1[23:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_24_2_22_4
    always @(SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 or SobelFilter_N_Mux_24_2_21_4_229_out1)
      begin : SobelFilter_N_Mux_24_2_22_4_230
        if (SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1) 
          begin
            SobelFilter_N_Mux_24_2_22_4_230_out1 = 24'd00000255;
          end 
        else 
          begin
            SobelFilter_N_Mux_24_2_22_4_230_out1 = SobelFilter_N_Mux_24_2_21_4_229_out1;
          end
      end
    
    // resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_231
    assign SobelFilter_Add_5Ux5U_6U_4_231_out1 = {1'b0, s_reg_133[4:0]} + 6'd30;
    
    // resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_232
    assign SobelFilter_Add_5Ux5U_6U_4_232_out1 = {1'b0, s_reg_133[4:0]} + 6'd30;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_233
    assign SobelFilter_LessThan_3Sx3S_1U_4_233_out1 = s_reg_36[2] ^ s_reg_36 < 3'd3;
    
    // resource: SobelFilter_N_Mux_32_2_25_4
    always @(SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0] or SobelFilter_N_Mux_16_2_23_4_219_ctrl1)
      begin : SobelFilter_N_Mux_32_2_25_4_237
        if (SobelFilter_N_Mux_16_2_23_4_219_ctrl1) 
          begin
            SobelFilter_N_Mux_32_2_25_4_237_out1 = 32'd0000000000;
          end 
        else 
          begin
            SobelFilter_N_Mux_32_2_25_4_237_out1 = SobelFilter_Add_33Ux33U_33U_4_17_out1[31:0];
          end
      end
    
    // resource: SobelFilter_N_Mux_32_2_26_4
    always @(SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 or SobelFilter_N_Mux_32_2_25_4_237_out1)
      begin : SobelFilter_N_Mux_32_2_26_4_238
        if (SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1) 
          begin
            SobelFilter_N_Mux_32_2_26_4_238_out1 = 32'd0000000255;
          end 
        else 
          begin
            SobelFilter_N_Mux_32_2_26_4_238_out1 = SobelFilter_N_Mux_32_2_25_4_237_out1;
          end
      end
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_249
    assign SobelFilter_LessThan_3Sx3S_1U_4_249_out1 = s_reg_36[2] ^ s_reg_36 < 3'd3;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_255
    assign SobelFilter_LessThan_3Sx3S_1U_4_255_out1 = s_reg_160[2] ^ s_reg_160 < 3'd3;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_261
    assign SobelFilter_LessThan_3Sx3S_1U_4_261_out1 = s_reg_160[2] ^ s_reg_160 < 3'd3;
    
    // resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_267
    assign SobelFilter_LessThan_3Sx3S_1U_4_267_out1 = s_reg_36[2] ^ s_reg_36 < 3'd3;
    
    // resource: regr_en_sc_7
    always @(posedge i_clk)
      begin : drive_global_state
        if (i_rst == 1'b0) 
          begin
            global_state <= 7'd000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // resource: mux_7bx14i13c
    always @(s_reg_126 or s_reg_39 or s_reg_50 or SobelFilter_LessThan_3Sx3S_1U_4_16_out1 or SobelFilter_LessThan_5Sx5S_1U_4_20_out1 or SobelFilter_LessThan_2Ux2U_1U_4_128_out1 or SobelFilter_LessThan_2Ux2U_1U_4_129_out1 or SobelFilter_LessThan_5Sx5S_1U_4_156_out1 or SobelFilter_LessThan_3Sx3S_1U_4_233_out1 or SobelFilter_LessThan_3Sx3S_1U_4_261_out1 or SobelFilter_LessThan_3Sx3S_1U_4_267_out1 or global_state)
      begin : drive_global_state_next
        case (global_state) 
          7'd009, 7'd013: 
            begin
              global_state_next = 7'd010;
            end
          7'd012: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_16_out1) 
                begin
                  global_state_next = 7'd010;
                end 
              else 
                begin
                  if (s_reg_39) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd014;
                    end
                end
            end
          7'd017: 
            begin
              if (SobelFilter_LessThan_5Sx5S_1U_4_20_out1) 
                begin
                  global_state_next = 7'd014;
                end 
              else 
                begin
                  global_state_next = global_state + 7'd001;
                end
            end
          7'd018, 7'd030, 7'd050, 7'd070, 7'd087: 
            begin
              global_state_next = 7'd019;
            end
          7'd020: 
            begin
              if (SobelFilter_LessThan_2Ux2U_1U_4_128_out1) 
                begin
                  global_state_next = 7'd019;
                end 
              else 
                begin
                  if (SobelFilter_LessThan_2Ux2U_1U_4_129_out1) 
                    begin
                      global_state_next = 7'd019;
                    end 
                  else 
                    begin
                      global_state_next = global_state + 7'd001;
                    end
                end
            end
          7'd023: 
            begin
              if (SobelFilter_LessThan_5Sx5S_1U_4_156_out1) 
                begin
                  global_state_next = 7'd021;
                end 
              else 
                begin
                  /* state36 */
                  case (s_reg_50) 
                    32'd0000000013: 
                      begin
                        global_state_next = 7'd071;
                      end
                    32'd0000000014: 
                      begin
                        global_state_next = 7'd051;
                      end
                    32'd0000000015: 
                      begin
                        global_state_next = 7'd031;
                      end
                    default: 
                      begin
                        global_state_next = global_state + 7'd001;
                      end
                  endcase
                end
            end
          7'd036, 7'd046: 
            begin
              global_state_next = 7'd037;
            end
          7'd045: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_261_out1) 
                begin
                  global_state_next = 7'd037;
                end 
              else 
                begin
                  if (s_reg_126) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd047;
                    end
                end
            end
          7'd056, 7'd066: 
            begin
              global_state_next = 7'd057;
            end
          7'd065: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_267_out1) 
                begin
                  global_state_next = 7'd057;
                end 
              else 
                begin
                  if (s_reg_126) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd067;
                    end
                end
            end
          7'd076, 7'd083: 
            begin
              global_state_next = 7'd077;
            end
          7'd082: 
            begin
              if (SobelFilter_LessThan_3Sx3S_1U_4_233_out1) 
                begin
                  global_state_next = 7'd077;
                end 
              else 
                begin
                  if (s_reg_126) 
                    begin
                      global_state_next = global_state + 7'd001;
                    end 
                  else 
                    begin
                      global_state_next = 7'd084;
                    end
                end
            end
          default: 
            begin
              global_state_next = global_state + 7'd001;
            end
        endcase
      end
    
    // resource: mux_4bx10i10c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h5fe
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h5fe <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd001: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd01;
                      end
                    7'd002: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd02;
                      end
                    7'd003: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd03;
                      end
                    7'd004: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd04;
                      end
                    7'd005: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd05;
                      end
                    7'd006: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd06;
                      end
                    7'd007: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd07;
                      end
                    7'd008: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd08;
                      end
                    7'd010: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd09;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h5fe <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hba
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hba <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd001, 7'd003, 7'd005, 7'd007: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd1;
                      end
                    7'd004: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hba <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h5ff
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h5ff <= 1'b1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd000, 7'd001, 7'd002, 7'd003, 7'd004, 7'd005, 7'd006, 7'd007, 7'd008, 7'd010: 
                      begin
                        gs_ctrl_do_filter_h5ff <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h5ff <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1ff
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1ff <= 1'b1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd000, 7'd001, 7'd002, 7'd003, 7'd004, 7'd005, 7'd006, 7'd007, 7'd008: 
                      begin
                        gs_ctrl_do_filter_h1ff <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1ff <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd013: 
                      begin
                        gs_ctrl_do_filter_h2000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h8000380000e70003
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h8000380000e70003 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd021: 
                      begin
                        gs_ctrl_do_filter_h8000380000e70003 <= 3'd1;
                      end
                    7'd022, 7'd023: 
                      begin
                        gs_ctrl_do_filter_h8000380000e70003 <= 3'd2;
                      end
                    7'd043, 7'd081: 
                      begin
                        gs_ctrl_do_filter_h8000380000e70003 <= 3'd3;
                      end
                    7'd044, 7'd064: 
                      begin
                        gs_ctrl_do_filter_h8000380000e70003 <= 3'd4;
                      end
                    7'd045, 7'd063, 7'd065, 7'd080, 7'd082: 
                      begin
                        gs_ctrl_do_filter_h8000380000e70003 <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h8000380000e70003 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h8000380000e700030
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h8000380000e700030 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd021, 7'd022: 
                      begin
                        gs_ctrl_do_filter_h8000380000e700030 <= 2'd1;
                      end
                    7'd023: 
                      begin
                        gs_ctrl_do_filter_h8000380000e700030 <= 2'd2;
                      end
                    7'd043, 7'd044, 7'd045, 7'd063, 7'd064, 7'd065, 7'd080, 7'd081, 7'd082: 
                      begin
                        gs_ctrl_do_filter_h8000380000e700030 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h8000380000e700030 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx7i7c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h8001b80000d7001b
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h8001b80000d7001b <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd021: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd1;
                      end
                    7'd022: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd2;
                      end
                    7'd023: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd3;
                      end
                    7'd043, 7'd044, 7'd045, 7'd063, 7'd064, 7'd065, 7'd080, 7'd081, 7'd082: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd4;
                      end
                    7'd047, 7'd067, 7'd084: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd5;
                      end
                    7'd048, 7'd068, 7'd085: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd6;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h8001b80000d7001b0
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd021, 7'd022, 7'd023: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd1;
                      end
                    7'd043, 7'd048, 7'd064, 7'd068, 7'd081, 7'd085: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd2;
                      end
                    7'd044, 7'd063, 7'd080: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd3;
                      end
                    7'd045, 7'd065, 7'd082: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd4;
                      end
                    7'd047, 7'd067, 7'd084: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h8001b80000d7001b0 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h931000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h931000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd012, 7'd016, 7'd017, 7'd023: 
                      begin
                        gs_ctrl_do_filter_h931000 <= 2'd1;
                      end
                    7'd020: 
                      begin
                        gs_ctrl_do_filter_h931000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h931000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h10000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h10000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd016: 
                      begin
                        gs_ctrl_do_filter_h10000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h10000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h931800
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h931800 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd011, 7'd016: 
                      begin
                        gs_ctrl_do_filter_h931800 <= 3'd1;
                      end
                    7'd012: 
                      begin
                        gs_ctrl_do_filter_h931800 <= 3'd2;
                      end
                    7'd017: 
                      begin
                        gs_ctrl_do_filter_h931800 <= 3'd3;
                      end
                    7'd020: 
                      begin
                        gs_ctrl_do_filter_h931800 <= 3'd4;
                      end
                    7'd023: 
                      begin
                        gs_ctrl_do_filter_h931800 <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h931800 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h10800
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h10800 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd011, 7'd016: 
                      begin
                        gs_ctrl_do_filter_h10800 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h10800 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h4000040800040
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h4000040800040 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd030, 7'd070, 7'd087: 
                      begin
                        gs_ctrl_do_filter_h4000040800040 <= 2'd1;
                      end
                    7'd050: 
                      begin
                        gs_ctrl_do_filter_h4000040800040 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h4000040800040 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h100000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h100000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd020: 
                      begin
                        gs_ctrl_do_filter_h100000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h100000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd022: 
                      begin
                        gs_ctrl_do_filter_h400000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx15i15c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h58f8058fbe0cdf80
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd025, 7'd031, 7'd051, 7'd071: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd01;
                      end
                    7'd026, 7'd032, 7'd052, 7'd072: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd02;
                      end
                    7'd027, 7'd033, 7'd053, 7'd073: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd03;
                      end
                    7'd028, 7'd034, 7'd054, 7'd074: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd04;
                      end
                    7'd029, 7'd035, 7'd055, 7'd075: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd05;
                      end
                    7'd039: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd06;
                      end
                    7'd040: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd07;
                      end
                    7'd042: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd08;
                      end
                    7'd059: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd09;
                      end
                    7'd060: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd10;
                      end
                    7'd062: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd11;
                      end
                    7'd076, 7'd082, 7'd083: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd12;
                      end
                    7'd078: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd13;
                      end
                    7'd079: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd14;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbe0cdf80 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hd8000db6000d80
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hd8000db6000d80 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd025, 7'd028, 7'd031, 7'd034, 7'd051, 7'd054, 7'd071, 7'd074: 
                      begin
                        gs_ctrl_do_filter_hd8000db6000d80 <= 2'd1;
                      end
                    7'd026, 7'd029, 7'd032, 7'd035, 7'd052, 7'd055, 7'd072, 7'd075: 
                      begin
                        gs_ctrl_do_filter_hd8000db6000d80 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hd8000db6000d80 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx10i10c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h58f8058fbf8cdf80
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd023: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd01;
                      end
                    7'd024, 7'd025, 7'd026, 7'd031, 7'd032, 7'd051, 7'd052, 7'd071, 7'd072: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd02;
                      end
                    7'd027, 7'd033, 7'd053, 7'd073: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd03;
                      end
                    7'd028: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd04;
                      end
                    7'd029: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd05;
                      end
                    7'd034, 7'd054, 7'd074: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd06;
                      end
                    7'd035, 7'd055, 7'd075: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd07;
                      end
                    7'd039, 7'd040, 7'd042, 7'd059, 7'd060, 7'd062, 7'd076, 7'd078, 7'd079, 7'd083: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd08;
                      end
                    7'd082: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd09;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h58f8058fbf8cdf80 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx8i8c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_hf8000fbf800f80
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd023: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd1;
                      end
                    7'd024, 7'd025, 7'd026, 7'd031, 7'd032, 7'd051, 7'd052, 7'd071, 7'd072: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd2;
                      end
                    7'd027, 7'd033, 7'd053, 7'd073: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd3;
                      end
                    7'd028: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd4;
                      end
                    7'd029: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd5;
                      end
                    7'd034, 7'd054, 7'd074: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd6;
                      end
                    7'd035, 7'd055, 7'd075: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd7;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_hf8000fbf800f80 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400000000000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400000000000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd046: 
                      begin
                        gs_ctrl_do_filter_h400000000000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400000000000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h4
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h4 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd066: 
                      begin
                        gs_ctrl_do_filter_h4 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h4 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h80000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h80000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd083: 
                      begin
                        gs_ctrl_do_filter_h80000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h80000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h40000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h40000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd082: 
                      begin
                        gs_ctrl_do_filter_h40000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h40000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400000000002000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400000000002000 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd058: 
                      begin
                        gs_ctrl_do_filter_h400000000002000 <= 2'd1;
                      end
                    7'd077: 
                      begin
                        gs_ctrl_do_filter_h400000000002000 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400000000002000 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400004000002000
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400004000002000 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    7'd038, 7'd058, 7'd077: 
                      begin
                        gs_ctrl_do_filter_h400004000002000 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400004000002000 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // instance: drive_i_rgb_busy
    assign i_rgb_busy = SobelFilter_gen_busy_r_4_282_out1[2];
    
    // instance: drive_i_rgb_m_data_is_valid
    assign i_rgb_m_data_is_valid = SobelFilter_gen_busy_r_4_282_out1[1];
    
    // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_282 (5 concurrent statements)
      assign SobelFilter_gen_busy_r_4_282_out1 = {SobelFilter_gen_busy_r_4_282_gnew_busy, {SobelFilter_gen_busy_r_4_282_gdiv, SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next}};
      assign SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~SobelFilter_gen_busy_r_4_282_gdiv;
      assign SobelFilter_gen_busy_r_4_282_gdiv = i_rgb_vld & !SobelFilter_gen_busy_r_4_282_gnew_req | i_rgb_m_stall_reg_full;
      assign SobelFilter_gen_busy_r_4_282_gnew_busy = SobelFilter_gen_busy_r_4_282_gnew_req | i_rgb_m_stall_reg_full;
      assign SobelFilter_gen_busy_r_4_282_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);
    // (end of SobelFilter_gen_busy_r_4_282)
    
    // resource: regr_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_unvalidated_req
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_unvalidated_req <= 1'd1;
          end 
        else 
          begin
            i_rgb_m_unvalidated_req <= SobelFilter_N_Muxb_1_2_27_4_4_out1;
          end
      end
    
    // resource: SobelFilter_N_Muxb_1_2_27_4
    always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
      begin : SobelFilter_N_Muxb_1_2_27_4_4
        if (i_rgb_m_busy_req_0) 
          begin
            SobelFilter_N_Muxb_1_2_27_4_4_out1 = i_rgb_m_unvalidated_req;
          end 
        else 
          begin
            SobelFilter_N_Muxb_1_2_27_4_4_out1 = i_rgb_vld;
          end
      end
    
    // resource: regr_en_24
    always @(posedge i_clk)
      begin : drive_i_rgb_m_stall_reg
        case (SobelFilter_And_1Ux1U_1U_4_7_out1) 
          1'b1: 
            begin
              i_rgb_m_stall_reg <= i_rgb_data;
            end
          default: 
            begin
            end
        endcase
      end
    
    // resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_5
    assign SobelFilter_Not_1U_1U_4_5_out1 = !i_rgb_m_stall_reg_full;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_6
    assign SobelFilter_And_1Ux1U_1U_4_6_out1 = i_rgb_m_data_is_valid & stall0;
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_7
    assign SobelFilter_And_1Ux1U_1U_4_7_out1 = SobelFilter_And_1Ux1U_1U_4_6_out1 & SobelFilter_Not_1U_1U_4_5_out1;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_stall_reg_full
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_stall_reg_full <= 1'd0;
          end 
        else 
          begin
            i_rgb_m_stall_reg_full <= SobelFilter_And_1Ux1U_1U_4_280_out1;
          end
      end
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_280
    assign SobelFilter_And_1Ux1U_1U_4_280_out1 = i_rgb_m_data_is_valid & stall0;
    
    // instance: drive_o_result_vld
    assign o_result_vld = SobelFilter_Or_1Ux1U_1U_4_2_out1;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
    assign SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_result_m_unacked_req
        if (i_rst == 1'b0) 
          begin
            o_result_m_unacked_req <= 1'd0;
          end 
        else 
          begin
            o_result_m_unacked_req <= SobelFilter_And_1Ux1U_1U_4_279_out1;
          end
      end
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_279
    assign SobelFilter_And_1Ux1U_1U_4_279_out1 = o_result_busy & o_result_vld;
    
    // resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
    assign SobelFilter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_result_m_req_m_prev_trig_req
        if (i_rst == 1'b0) 
          begin
            o_result_m_req_m_prev_trig_req <= 1'd0;
          end 
        else 
          begin
            o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
          end
      end
    
    // resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
    assign SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;

endmodule


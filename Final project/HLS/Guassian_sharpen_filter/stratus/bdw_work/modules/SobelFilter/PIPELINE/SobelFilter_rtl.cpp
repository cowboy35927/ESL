// Generated by stratus_hls 21.20-p100  (96289.240513)
// Mon May 29 16:10:37 2023
// from ../SobelFilter.cpp
#include "SobelFilter_rtl.h"

struct SobelFilter;
SobelFilter::SobelFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_result_busy("o_result_busy")
    ,o_result_vld("o_result_vld")
    ,o_result_data("o_result_data")
    ,o_result_m_req_m_prev_trig_req("o_result_m_req_m_prev_trig_req")
    ,SobelFilter_Xor_1Ux1U_1U_1_1_out1("SobelFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_result_m_unacked_req("o_result_m_unacked_req")
    ,SobelFilter_Or_1Ux1U_1U_4_2_out1("SobelFilter_Or_1Ux1U_1U_4_2_out1")
    ,SobelFilter_And_1Ux1U_1U_4_280_out1("SobelFilter_And_1Ux1U_1U_4_280_out1")
    ,SobelFilter_And_1Ux1U_1U_4_6_out1("SobelFilter_And_1Ux1U_1U_4_6_out1")
    ,SobelFilter_Not_1U_1U_4_5_out1("SobelFilter_Not_1U_1U_4_5_out1")
    ,SobelFilter_And_1Ux1U_1U_4_7_out1("SobelFilter_And_1Ux1U_1U_4_7_out1")
    ,SobelFilter_N_Muxb_1_2_27_4_4_out1("SobelFilter_N_Muxb_1_2_27_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,SobelFilter_gen_busy_r_4_282_gnew_req("SobelFilter_gen_busy_r_4_282_gnew_req")
    ,SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,SobelFilter_gen_busy_r_4_282_gdiv("SobelFilter_gen_busy_r_4_282_gdiv")
    ,SobelFilter_gen_busy_r_4_282_gnew_busy("SobelFilter_gen_busy_r_4_282_gnew_busy")
    ,i_rgb_m_data_is_valid("i_rgb_m_data_is_valid")
    ,global_state_next("global_state_next")
    ,SobelFilter_N_Mux_32_2_25_4_237_out1("SobelFilter_N_Mux_32_2_25_4_237_out1")
    ,SobelFilter_N_Mux_24_2_21_4_229_out1("SobelFilter_N_Mux_24_2_21_4_229_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_223_out1("SobelFilter_Add_4Ux2U_5U_4_223_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_221_out1("SobelFilter_Add_4Ux2U_5U_4_221_out1")
    ,SobelFilter_N_Mux_16_2_23_4_219_out1("SobelFilter_N_Mux_16_2_23_4_219_out1")
    ,SobelFilter_N_Mux_16_2_23_4_219_ctrl1("SobelFilter_N_Mux_16_2_23_4_219_ctrl1")
    ,SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1("SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_210_out1("SobelFilter_Add_4Ux2U_5U_4_210_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_208_out1("SobelFilter_Add_4Ux2U_5U_4_208_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_206_out1("SobelFilter_Add_4Ux2U_5U_4_206_out1")
    ,gs_ctrl_do_filter_h400004000002000("gs_ctrl_do_filter_h400004000002000")
    ,gs_ctrl_do_filter_h400000000002000("gs_ctrl_do_filter_h400000000002000")
    ,SobelFilter_Add_4Ux2U_5U_4_204_out1("SobelFilter_Add_4Ux2U_5U_4_204_out1")
    ,SobelFilter_Add_4Ux2U_5S_4_201_out1("SobelFilter_Add_4Ux2U_5S_4_201_out1")
    ,SobelFilter_Add_4Ux2U_5S_4_197_out1("SobelFilter_Add_4Ux2U_5S_4_197_out1")
    ,SobelFilter_Add_4Ux2U_5S_4_193_out1("SobelFilter_Add_4Ux2U_5S_4_193_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_189_out1("SobelFilter_Add_4Ux2U_5U_4_189_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_187_out1("SobelFilter_Add_4Ux2U_5U_4_187_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_186_in1("SobelFilter_Add_4Ux2U_5U_4_186_in1")
    ,SobelFilter_Add_4Ux2U_5U_4_186_in2("SobelFilter_Add_4Ux2U_5U_4_186_in2")
    ,gs_ctrl_do_filter_h40000("gs_ctrl_do_filter_h40000")
    ,SobelFilter_Mul_2Ux2U_4U_4_184_in2("SobelFilter_Mul_2Ux2U_4U_4_184_in2")
    ,gs_ctrl_do_filter_h80000("gs_ctrl_do_filter_h80000")
    ,SobelFilter_Mul_2Ux2U_4U_4_182_in2("SobelFilter_Mul_2Ux2U_4U_4_182_in2")
    ,gs_ctrl_do_filter_h4("gs_ctrl_do_filter_h4")
    ,SobelFilter_Mul_2Ux2U_4U_4_180_in2("SobelFilter_Mul_2Ux2U_4U_4_180_in2")
    ,gs_ctrl_do_filter_h400000000000("gs_ctrl_do_filter_h400000000000")
    ,SobelFilter_Mul_6Sx2U_6S_4_171_out1("SobelFilter_Mul_6Sx2U_6S_4_171_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_170_out1("SobelFilter_Mul_6Sx2U_6S_4_170_out1")
    ,gs_ctrl_do_filter_hf8000fbf800f80("gs_ctrl_do_filter_hf8000fbf800f80")
    ,gs_ctrl_do_filter_h58f8058fbf8cdf80("gs_ctrl_do_filter_h58f8058fbf8cdf80")
    ,SobelFilter_Not_1U_1U_4_174_out1("SobelFilter_Not_1U_1U_4_174_out1")
    ,SobelFilter_Not_1U_1U_4_177_out1("SobelFilter_Not_1U_1U_4_177_out1")
    ,gs_ctrl_do_filter_hd8000db6000d80("gs_ctrl_do_filter_hd8000db6000d80")
    ,gs_ctrl_do_filter_h58f8058fbe0cdf80("gs_ctrl_do_filter_h58f8058fbe0cdf80")
    ,SobelFilter_Add_6Ux5U_7S_4_169_out1("SobelFilter_Add_6Ux5U_7S_4_169_out1")
    ,SobelFilter_Add_6Sx1U_6S_4_173_out1("SobelFilter_Add_6Sx1U_6S_4_173_out1")
    ,SobelFilter_Add_6Sx2U_6S_4_172_out1("SobelFilter_Add_6Sx2U_6S_4_172_out1")
    ,SobelFilter_Add_6Ux5U_7S_4_179_out1("SobelFilter_Add_6Ux5U_7S_4_179_out1")
    ,SobelFilter_Add_6Ux5U_7S_4_178_out1("SobelFilter_Add_6Ux5U_7S_4_178_out1")
    ,SobelFilter_Add_5Ux3U_5U_4_207_out1("SobelFilter_Add_5Ux3U_5U_4_207_out1")
    ,SobelFilter_Add_5Ux4U_6U_4_213_out1("SobelFilter_Add_5Ux4U_6U_4_213_out1")
    ,SobelFilter_Add_5Ux5U_6U_4_231_out1("SobelFilter_Add_5Ux5U_6U_4_231_out1")
    ,SobelFilter_Add_5Ux2U_5U_4_209_out1("SobelFilter_Add_5Ux2U_5U_4_209_out1")
    ,SobelFilter_Add_5Ux4U_6U_4_215_out1("SobelFilter_Add_5Ux4U_6U_4_215_out1")
    ,SobelFilter_Add_5Ux5U_6U_4_232_out1("SobelFilter_Add_5Ux5U_6U_4_232_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_186_out1("SobelFilter_Add_4Ux2U_5U_4_186_out1")
    ,SobelFilter_Add_5Ux4U_6U_4_205_out1("SobelFilter_Add_5Ux4U_6U_4_205_out1")
    ,SobelFilter_Add_5Ux5U_6U_4_211_out1("SobelFilter_Add_5Ux5U_6U_4_211_out1")
    ,SobelFilter_Add_6Ux4U_7S_4_161_out1("SobelFilter_Add_6Ux4U_7S_4_161_out1")
    ,SobelFilter_Not_1U_1U_4_144_out1("SobelFilter_Not_1U_1U_4_144_out1")
    ,SobelFilter_N_Mux_20_16_19_4_143_ctrl1("SobelFilter_N_Mux_20_16_19_4_143_ctrl1")
    ,SobelFilter_N_Mux_20_16_19_4_143_in2("SobelFilter_N_Mux_20_16_19_4_143_in2")
    ,SobelFilter_N_Mux_20_16_19_4_143_in3("SobelFilter_N_Mux_20_16_19_4_143_in3")
    ,SobelFilter_N_Mux_20_16_19_4_143_in4("SobelFilter_N_Mux_20_16_19_4_143_in4")
    ,SobelFilter_N_Mux_20_16_19_4_143_in5("SobelFilter_N_Mux_20_16_19_4_143_in5")
    ,SobelFilter_N_Mux_20_16_19_4_143_in6("SobelFilter_N_Mux_20_16_19_4_143_in6")
    ,SobelFilter_N_Mux_20_16_19_4_143_in7("SobelFilter_N_Mux_20_16_19_4_143_in7")
    ,SobelFilter_N_Mux_20_16_19_4_143_in8("SobelFilter_N_Mux_20_16_19_4_143_in8")
    ,SobelFilter_N_Mux_20_16_19_4_143_in9("SobelFilter_N_Mux_20_16_19_4_143_in9")
    ,SobelFilter_N_Mux_20_16_19_4_143_in10("SobelFilter_N_Mux_20_16_19_4_143_in10")
    ,SobelFilter_N_Mux_20_16_19_4_143_in11("SobelFilter_N_Mux_20_16_19_4_143_in11")
    ,SobelFilter_N_Mux_20_16_19_4_143_in12("SobelFilter_N_Mux_20_16_19_4_143_in12")
    ,SobelFilter_N_Mux_20_16_19_4_143_in13("SobelFilter_N_Mux_20_16_19_4_143_in13")
    ,SobelFilter_N_Mux_20_16_19_4_143_in14("SobelFilter_N_Mux_20_16_19_4_143_in14")
    ,SobelFilter_N_Mux_20_16_19_4_143_in15("SobelFilter_N_Mux_20_16_19_4_143_in15")
    ,SobelFilter_N_Mux_20_16_19_4_143_in16("SobelFilter_N_Mux_20_16_19_4_143_in16")
    ,SobelFilter_N_Mux_20_16_19_4_143_in17("SobelFilter_N_Mux_20_16_19_4_143_in17")
    ,gs_ctrl_do_filter_h400000("gs_ctrl_do_filter_h400000")
    ,SobelFilter_Not_1U_1U_4_136_out1("SobelFilter_Not_1U_1U_4_136_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_135_out1("SobelFilter_Mul_6Sx2U_6S_4_135_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_134_out1("SobelFilter_Mul_6Sx2U_6S_4_134_out1")
    ,SobelFilter_N_Mux_20_4_3_4_117_in2("SobelFilter_N_Mux_20_4_3_4_117_in2")
    ,SobelFilter_N_Mux_20_3_9_4_116_out1("SobelFilter_N_Mux_20_3_9_4_116_out1")
    ,SobelFilter_N_Mux_20_3_13_4_100_in2("SobelFilter_N_Mux_20_3_13_4_100_in2")
    ,SobelFilter_N_Mux_20_2_10_4_99_out1("SobelFilter_N_Mux_20_2_10_4_99_out1")
    ,SobelFilter_N_Mux_20_2_10_4_99_in2("SobelFilter_N_Mux_20_2_10_4_99_in2")
    ,SobelFilter_N_Mux_24_2_0_4_98_out1("SobelFilter_N_Mux_24_2_0_4_98_out1")
    ,i_rgb_m_stall_reg_full("i_rgb_m_stall_reg_full")
    ,i_rgb_m_stall_reg("i_rgb_m_stall_reg")
    ,SobelFilter_OrReduction_5U_1U_4_97_out1("SobelFilter_OrReduction_5U_1U_4_97_out1")
    ,SobelFilter_Equal_5Ux2U_1U_4_96_out1("SobelFilter_Equal_5Ux2U_1U_4_96_out1")
    ,SobelFilter_Equal_5Ux3U_1U_4_95_out1("SobelFilter_Equal_5Ux3U_1U_4_95_out1")
    ,SobelFilter_Equal_5Ux3U_1U_4_94_out1("SobelFilter_Equal_5Ux3U_1U_4_94_out1")
    ,SobelFilter_Equal_5Ux4U_1U_4_93_out1("SobelFilter_Equal_5Ux4U_1U_4_93_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_92_out1("SobelFilter_Add_4Ux2U_5U_4_92_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_79_out1("SobelFilter_Add_4Ux2U_5U_4_79_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_65_out1("SobelFilter_Mul_2Ux2U_4U_4_65_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_28_in1("SobelFilter_Add_4Ux2U_5U_4_28_in1")
    ,SobelFilter_Mul_2Ux2U_4U_4_46_in2("SobelFilter_Mul_2Ux2U_4U_4_46_in2")
    ,SobelFilter_Add_2Ux1U_2U_4_26_in2("SobelFilter_Add_2Ux1U_2U_4_26_in2")
    ,SobelFilter_Mul_6Sx2U_6S_4_24_in2("SobelFilter_Mul_6Sx2U_6S_4_24_in2")
    ,SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice("SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice")
    ,gs_ctrl_do_filter_h100000("gs_ctrl_do_filter_h100000")
    ,SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1("SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1")
    ,SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2("SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2")
    ,gs_ctrl_do_filter_h4000040800040("gs_ctrl_do_filter_h4000040800040")
    ,gs_ctrl_do_filter_h10800("gs_ctrl_do_filter_h10800")
    ,gs_ctrl_do_filter_h931800("gs_ctrl_do_filter_h931800")
    ,gs_ctrl_do_filter_h10000("gs_ctrl_do_filter_h10000")
    ,gs_ctrl_do_filter_h931000("gs_ctrl_do_filter_h931000")
    ,SobelFilter_Add_33Ux33U_33U_4_17_in1("SobelFilter_Add_33Ux33U_33U_4_17_in1")
    ,gs_ctrl_do_filter_h8001b80000d7001b0("gs_ctrl_do_filter_h8001b80000d7001b0")
    ,SobelFilter_Add_33Ux33U_33U_4_17_in2("SobelFilter_Add_33Ux33U_33U_4_17_in2")
    ,gs_ctrl_do_filter_h8001b80000d7001b("gs_ctrl_do_filter_h8001b80000d7001b")
    ,SobelFilter_Mul_33Sx32U_35S_4_15_in1("SobelFilter_Mul_33Sx32U_35S_4_15_in1")
    ,gs_ctrl_do_filter_h8000380000e700030("gs_ctrl_do_filter_h8000380000e700030")
    ,SobelFilter_N_Mux_20_16_19_4_143_out1("SobelFilter_N_Mux_20_16_19_4_143_out1")
    ,SobelFilter_N_Mux_20_11_20_4_155_out1("SobelFilter_N_Mux_20_11_20_4_155_out1")
    ,SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice("SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice")
    ,gs_ctrl_do_filter_h8000380000e70003("gs_ctrl_do_filter_h8000380000e70003")
    ,SobelFilter_Mul_2Ux2U_4U_4_9_out1("SobelFilter_Mul_2Ux2U_4U_4_9_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_8_in2("SobelFilter_Add_2Ux1U_3U_4_8_in2")
    ,gs_ctrl_do_filter_h2000("gs_ctrl_do_filter_h2000")
    ,gs_ctrl_do_filter_h1ff("gs_ctrl_do_filter_h1ff")
    ,gs_ctrl_do_filter_h5ff("gs_ctrl_do_filter_h5ff")
    ,gs_ctrl_do_filter_hba("gs_ctrl_do_filter_hba")
    ,gs_ctrl_do_filter_h5fe("gs_ctrl_do_filter_h5fe")
    ,SobelFilter_Add_4Ux2U_5S_4_10_out1("SobelFilter_Add_4Ux2U_5S_4_10_out1")
    ,wire_s_reg_95_0("wire_s_reg_95_0")
    ,SobelFilter_Not_1U_1U_4_154_out1("SobelFilter_Not_1U_1U_4_154_out1")
    ,SobelFilter_Equal_5Ux1U_1U_4_62_out1("SobelFilter_Equal_5Ux1U_1U_4_62_out1")
    ,s_reg_95("s_reg_95")
    ,SobelFilter_Equal_5Ux2U_1U_4_61_out1("SobelFilter_Equal_5Ux2U_1U_4_61_out1")
    ,s_reg_94("s_reg_94")
    ,wire_s_reg_93_0("wire_s_reg_93_0")
    ,SobelFilter_And_1Ux1U_1U_4_147_out1("SobelFilter_And_1Ux1U_1U_4_147_out1")
    ,SobelFilter_Equal_5Ux3U_1U_4_60_out1("SobelFilter_Equal_5Ux3U_1U_4_60_out1")
    ,s_reg_93("s_reg_93")
    ,SobelFilter_Or_1Ux1U_1U_4_142_out1("SobelFilter_Or_1Ux1U_1U_4_142_out1")
    ,SobelFilter_Equal_5Ux3U_1U_4_59_out1("SobelFilter_Equal_5Ux3U_1U_4_59_out1")
    ,s_reg_92("s_reg_92")
    ,SobelFilter_N_Mux_20_2_10_4_115_out1("SobelFilter_N_Mux_20_2_10_4_115_out1")
    ,s_reg_9("s_reg_9")
    ,SobelFilter_Mul_2Ux2U_4U_4_184_out1("SobelFilter_Mul_2Ux2U_4U_4_184_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_182_out1("SobelFilter_Mul_2Ux2U_4U_4_182_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_180_out1("SobelFilter_Mul_2Ux2U_4U_4_180_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_46_out1("SobelFilter_Mul_2Ux2U_4U_4_46_out1")
    ,s_reg_83("s_reg_83")
    ,wire_s_reg_81_1("wire_s_reg_81_1")
    ,SobelFilter_OrReduction_5U_1U_4_29_out1("SobelFilter_OrReduction_5U_1U_4_29_out1")
    ,SobelFilter_N_Mux_20_2_10_4_106_out1("SobelFilter_N_Mux_20_2_10_4_106_out1")
    ,s_reg_7("s_reg_7")
    ,SobelFilter_N_Mux_24_2_22_4_230_out1("SobelFilter_N_Mux_24_2_22_4_230_out1")
    ,s_reg_6("s_reg_6")
    ,SobelFilter_Add_32Sx1U_32S_4_25_out1("SobelFilter_Add_32Sx1U_32S_4_25_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_166_out1("SobelFilter_Mul_6Sx2U_6S_4_166_out1")
    ,SobelFilter_Add_4Ux1U_5U_4_148_out1("SobelFilter_Add_4Ux1U_5U_4_148_out1")
    ,SobelFilter_Add_4Ux2U_5U_4_28_out1("SobelFilter_Add_4Ux2U_5U_4_28_out1")
    ,SobelFilter_Add_4Ux1U_5U_4_18_out1("SobelFilter_Add_4Ux1U_5U_4_18_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_16_out1("SobelFilter_LessThan_3Sx3S_1U_4_16_out1")
    ,SobelFilter_Add_6Sx2U_6S_4_175_out1("SobelFilter_Add_6Sx2U_6S_4_175_out1")
    ,SobelFilter_Add_6Ux4U_7S_4_167_out1("SobelFilter_Add_6Ux4U_7S_4_167_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_164_out1("SobelFilter_Mul_6Sx2U_6S_4_164_out1")
    ,s_reg_81("s_reg_81")
    ,SobelFilter_Mul_6Sx2U_6S_4_24_out1("SobelFilter_Mul_6Sx2U_6S_4_24_out1")
    ,s_reg_49("s_reg_49")
    ,SobelFilter_Add_2Ux1U_2U_4_91_out1("SobelFilter_Add_2Ux1U_2U_4_91_out1")
    ,s_reg_4_slice("s_reg_4_slice")
    ,SobelFilter_And_1Ux1U_1U_4_23_out1("SobelFilter_And_1Ux1U_1U_4_23_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_11_out1("SobelFilter_LessThan_3Sx3S_1U_4_11_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_13_out1("SobelFilter_Add_2Ux1U_3U_4_13_out1")
    ,s_reg_38("s_reg_38")
    ,SobelFilter_Add_2Ux1U_3U_4_194_out1("SobelFilter_Add_2Ux1U_3U_4_194_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_202_out1("SobelFilter_Add_2Ux1U_3U_4_202_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_181_out1("SobelFilter_Add_2Ux1U_3U_4_181_out1")
    ,SobelFilter_Add_2Ux1U_2U_4_26_out1("SobelFilter_Add_2Ux1U_2U_4_26_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_8_out1("SobelFilter_Add_2Ux1U_3U_4_8_out1")
    ,s_reg_36("s_reg_36")
    ,SobelFilter_N_Mux_20_4_1_4_126_out1("SobelFilter_N_Mux_20_4_1_4_126_out1")
    ,s_reg_34("s_reg_34")
    ,SobelFilter_N_Mux_20_4_2_4_127_out1("SobelFilter_N_Mux_20_4_2_4_127_out1")
    ,s_reg_33("s_reg_33")
    ,SobelFilter_N_Mux_20_4_3_4_117_out1("SobelFilter_N_Mux_20_4_3_4_117_out1")
    ,s_reg_32("s_reg_32")
    ,SobelFilter_N_Mux_20_4_4_4_118_out1("SobelFilter_N_Mux_20_4_4_4_118_out1")
    ,s_reg_31("s_reg_31")
    ,SobelFilter_N_Mux_20_4_5_4_119_out1("SobelFilter_N_Mux_20_4_5_4_119_out1")
    ,s_reg_30("s_reg_30")
    ,SobelFilter_N_Mux_20_4_6_4_120_out1("SobelFilter_N_Mux_20_4_6_4_120_out1")
    ,s_reg_29("s_reg_29")
    ,SobelFilter_N_Mux_20_4_7_4_121_out1("SobelFilter_N_Mux_20_4_7_4_121_out1")
    ,s_reg_28("s_reg_28")
    ,SobelFilter_N_Mux_20_4_8_4_122_out1("SobelFilter_N_Mux_20_4_8_4_122_out1")
    ,s_reg_27("s_reg_27")
    ,SobelFilter_N_Mux_20_3_11_4_124_out1("SobelFilter_N_Mux_20_3_11_4_124_out1")
    ,s_reg_26("s_reg_26")
    ,SobelFilter_N_Mux_20_3_12_4_125_out1("SobelFilter_N_Mux_20_3_12_4_125_out1")
    ,s_reg_25("s_reg_25")
    ,SobelFilter_N_Mux_20_2_10_4_123_out1("SobelFilter_N_Mux_20_2_10_4_123_out1")
    ,s_reg_24("s_reg_24")
    ,SobelFilter_N_Mux_20_3_13_4_100_out1("SobelFilter_N_Mux_20_3_13_4_100_out1")
    ,s_reg_23("s_reg_23")
    ,SobelFilter_N_Mux_20_3_14_4_101_out1("SobelFilter_N_Mux_20_3_14_4_101_out1")
    ,s_reg_22("s_reg_22")
    ,SobelFilter_N_Mux_20_3_15_4_102_out1("SobelFilter_N_Mux_20_3_15_4_102_out1")
    ,s_reg_21("s_reg_21")
    ,SobelFilter_N_Mux_20_3_16_4_103_out1("SobelFilter_N_Mux_20_3_16_4_103_out1")
    ,s_reg_20("s_reg_20")
    ,s_reg_198("s_reg_198")
    ,s_reg_193("s_reg_193")
    ,SobelFilter_N_Mux_20_3_17_4_104_out1("SobelFilter_N_Mux_20_3_17_4_104_out1")
    ,s_reg_19("s_reg_19")
    ,s_reg_186("s_reg_186")
    ,SobelFilter_N_Mux_20_3_18_4_105_out1("SobelFilter_N_Mux_20_3_18_4_105_out1")
    ,s_reg_18("s_reg_18")
    ,SobelFilter_Mul_2Ux2U_4U_4_191_out1("SobelFilter_Mul_2Ux2U_4U_4_191_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_199_out1("SobelFilter_Mul_2Ux2U_4U_4_199_out1")
    ,SobelFilter_Mul_2Ux2U_4U_4_196_out1("SobelFilter_Mul_2Ux2U_4U_4_196_out1")
    ,s_reg_178("s_reg_178")
    ,SobelFilter_N_Mux_20_2_10_4_107_out1("SobelFilter_N_Mux_20_2_10_4_107_out1")
    ,s_reg_17("s_reg_17")
    ,SobelFilter_N_Mux_32_2_26_4_238_out1("SobelFilter_N_Mux_32_2_26_4_238_out1")
    ,s_reg_50("s_reg_50")
    ,s_reg_165("s_reg_165")
    ,SobelFilter_Add_2Ux1U_3U_4_185_out1("SobelFilter_Add_2Ux1U_3U_4_185_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_183_out1("SobelFilter_Add_2Ux1U_3U_4_183_out1")
    ,SobelFilter_Add_2Ux1U_3U_4_198_out1("SobelFilter_Add_2Ux1U_3U_4_198_out1")
    ,s_reg_160("s_reg_160")
    ,SobelFilter_N_Mux_20_2_10_4_108_out1("SobelFilter_N_Mux_20_2_10_4_108_out1")
    ,s_reg_16("s_reg_16")
    ,SobelFilter_Add_6Ux4U_7S_4_168_out1("SobelFilter_Add_6Ux4U_7S_4_168_out1")
    ,s_reg_152("s_reg_152")
    ,SobelFilter_N_Mux_20_2_10_4_109_out1("SobelFilter_N_Mux_20_2_10_4_109_out1")
    ,s_reg_15("s_reg_15")
    ,SobelFilter_Sub_6Sx3U_6S_4_131_out1("SobelFilter_Sub_6Sx3U_6S_4_131_out1")
    ,s_reg_147("s_reg_147")
    ,SobelFilter_N_Mux_20_2_10_4_110_out1("SobelFilter_N_Mux_20_2_10_4_110_out1")
    ,s_reg_14("s_reg_14")
    ,SobelFilter_Add_5Ux2U_5U_4_224_out1("SobelFilter_Add_5Ux2U_5U_4_224_out1")
    ,SobelFilter_Add_5Ux2U_5U_4_190_out1("SobelFilter_Add_5Ux2U_5U_4_190_out1")
    ,SobelFilter_Add_5Ux3U_5U_4_222_out1("SobelFilter_Add_5Ux3U_5U_4_222_out1")
    ,SobelFilter_Add_5Ux3U_5U_4_188_out1("SobelFilter_Add_5Ux3U_5U_4_188_out1")
    ,SobelFilter_Sub_6Sx4U_6S_4_130_out1("SobelFilter_Sub_6Sx4U_6S_4_130_out1")
    ,s_reg_5("s_reg_5")
    ,s_reg_133("s_reg_133")
    ,SobelFilter_N_Mux_16_2_24_4_220_out1("SobelFilter_N_Mux_16_2_24_4_220_out1")
    ,SobelFilter_Mul_33Sx32U_35S_4_15_out1("SobelFilter_Mul_33Sx32U_35S_4_15_out1")
    ,s_reg_132("s_reg_132")
    ,s_reg_131("s_reg_131")
    ,SobelFilter_N_Mux_20_2_10_4_111_out1("SobelFilter_N_Mux_20_2_10_4_111_out1")
    ,s_reg_13("s_reg_13")
    ,wire_s_reg_126_0("wire_s_reg_126_0")
    ,SobelFilter_LessThan_3Sx3S_1U_4_225_out1("SobelFilter_LessThan_3Sx3S_1U_4_225_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_255_out1("SobelFilter_LessThan_3Sx3S_1U_4_255_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_249_out1("SobelFilter_LessThan_3Sx3S_1U_4_249_out1")
    ,SobelFilter_And_1Ux1U_1U_4_139_out1("SobelFilter_And_1Ux1U_1U_4_139_out1")
    ,SobelFilter_Equal_5Ux4U_1U_4_47_out1("SobelFilter_Equal_5Ux4U_1U_4_47_out1")
    ,SobelFilter_Add_6Sx1U_6S_4_176_out1("SobelFilter_Add_6Sx1U_6S_4_176_out1")
    ,SobelFilter_Mul_6Sx2U_6S_4_165_out1("SobelFilter_Mul_6Sx2U_6S_4_165_out1")
    ,SobelFilter_Add_6Sx2U_6S_4_140_out1("SobelFilter_Add_6Sx2U_6S_4_140_out1")
    ,SobelFilter_Add_6Sx1U_6S_4_141_out1("SobelFilter_Add_6Sx1U_6S_4_141_out1")
    ,s_reg_39("s_reg_39")
    ,SobelFilter_Mul_6Sx2U_6S_4_133_out1("SobelFilter_Mul_6Sx2U_6S_4_133_out1")
    ,s_reg_125("s_reg_125")
    ,SobelFilter_LessThan_32Sx5S_1U_4_22_out1("SobelFilter_LessThan_32Sx5S_1U_4_22_out1")
    ,SobelFilter_N_Mux_20_2_10_4_112_out1("SobelFilter_N_Mux_20_2_10_4_112_out1")
    ,s_reg_12("s_reg_12")
    ,SobelFilter_N_Mux_20_2_10_4_113_out1("SobelFilter_N_Mux_20_2_10_4_113_out1")
    ,s_reg_11("s_reg_11")
    ,SobelFilter_N_Mux_20_2_10_4_114_out1("SobelFilter_N_Mux_20_2_10_4_114_out1")
    ,s_reg_10("s_reg_10")
    ,SobelFilter_gen_busy_r_4_282_out1("SobelFilter_gen_busy_r_4_282_out1")
    ,SobelFilter_And_1Ux1U_1U_4_279_out1("SobelFilter_And_1Ux1U_1U_4_279_out1")
    ,SobelFilter_Not_1U_1U_1_3_out1("SobelFilter_Not_1U_1U_1_3_out1")
    ,o_result_m_req_m_trig_req("o_result_m_req_m_trig_req")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,SobelFilter_LessThan_5Sx5S_1U_4_20_out1("SobelFilter_LessThan_5Sx5S_1U_4_20_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_233_out1("SobelFilter_LessThan_3Sx3S_1U_4_233_out1")
    ,SobelFilter_LessThan_3Sx3S_1U_4_267_out1("SobelFilter_LessThan_3Sx3S_1U_4_267_out1")
    ,s_reg_126("s_reg_126")
    ,SobelFilter_LessThan_3Sx3S_1U_4_261_out1("SobelFilter_LessThan_3Sx3S_1U_4_261_out1")
    ,SobelFilter_LessThan_5Sx5S_1U_4_156_out1("SobelFilter_LessThan_5Sx5S_1U_4_156_out1")
    ,SobelFilter_Add_33Ux33U_33U_4_17_out1("SobelFilter_Add_33Ux33U_33U_4_17_out1")
    ,SobelFilter_LessThan_2Ux2U_1U_4_128_out1("SobelFilter_LessThan_2Ux2U_1U_4_128_out1")
    ,SobelFilter_LessThan_2Ux2U_1U_4_129_out1("SobelFilter_LessThan_2Ux2U_1U_4_129_out1")
    ,global_state("global_state")
    ,Gaussian_value_DIN("Gaussian_value_DIN")
    ,Gaussian_value_CE("Gaussian_value_CE")
    ,Gaussian_value_RW("Gaussian_value_RW")
    ,Gaussian_value_in1("Gaussian_value_in1")
    ,Gaussian_value_out1("Gaussian_value_out1")
    ,SobelFilter_DivRem_4_19_in1("SobelFilter_DivRem_4_19_in1")
    ,SobelFilter_DivRem_4_19_in2("SobelFilter_DivRem_4_19_in2")
    ,SobelFilter_DivRem_4_19_out1("SobelFilter_DivRem_4_19_out1")
    ,stall0("stall0")
    ,buffer_DIN("buffer_DIN")
    ,buffer_CE("buffer_CE")
    ,buffer_RW("buffer_RW")
    ,buffer_in1("buffer_in1")
    ,buffer_out1("buffer_out1")
    ,expon_value_DIN("expon_value_DIN")
    ,expon_value_CE("expon_value_CE")
    ,expon_value_RW("expon_value_RW")
    ,expon_value_in1("expon_value_in1")
    ,expon_value_out1("expon_value_out1")
    ,sharpening_CE("sharpening_CE")
    ,sharpening_in1("sharpening_in1")
    ,sharpening_out1("sharpening_out1")
{
  sharpening = new SobelFilter_ROM_9X32_sharpening("sharpening");
  sharpening->CE(sharpening_CE);
  sharpening->in1(sharpening_in1);
  sharpening->out1(sharpening_out1);
  sharpening->clk(i_clk);

  expon_value = new SobelFilter_RAM_9X24_1("expon_value");
  expon_value->DIN(expon_value_DIN);
  expon_value->CE(expon_value_CE);
  expon_value->RW(expon_value_RW);
  expon_value->in1(expon_value_in1);
  expon_value->out1(expon_value_out1);
  expon_value->clk(i_clk);

  buffer = new SobelFilter_RAM_45X32_3("buffer");
  buffer->DIN(buffer_DIN);
  buffer->CE(buffer_CE);
  buffer->RW(buffer_RW);
  buffer->in1(buffer_in1);
  buffer->out1(buffer_out1);
  buffer->clk(i_clk);

  SobelFilter_DivRem_4_19 = new SobelFilter_DivRem_4("SobelFilter_DivRem_4_19");
  SobelFilter_DivRem_4_19->in1(SobelFilter_DivRem_4_19_in1);
  SobelFilter_DivRem_4_19->in2(SobelFilter_DivRem_4_19_in2);
  SobelFilter_DivRem_4_19->out1(SobelFilter_DivRem_4_19_out1);
  SobelFilter_DivRem_4_19->clk(i_clk);
  SobelFilter_DivRem_4_19->stall(stall0);

  Gaussian_value = new SobelFilter_RAM_9X24_1("Gaussian_value");
  Gaussian_value->DIN(Gaussian_value_DIN);
  Gaussian_value->CE(Gaussian_value_CE);
  Gaussian_value->RW(Gaussian_value_RW);
  Gaussian_value->in1(Gaussian_value_in1);
  Gaussian_value->out1(Gaussian_value_out1);
  Gaussian_value->clk(i_clk);

  SC_METHOD(drive_o_result_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_result_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_gen_busy_r_4_282_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_279_out1 );

  SC_METHOD(drive_s_reg_10);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_11);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_125);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_126);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_126_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_13);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_131);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_132);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_133);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_14);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_147);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_15);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_152);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_16);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_160);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_165);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_17);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_178);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_186);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_19);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_193);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_198);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_20);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_21);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_22);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_23);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_27);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_28);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_30);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_31);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_34);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_36);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_38);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_39);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_4_slice);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_49);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_5);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_50);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_7);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_81);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_81_1);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_83);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_92);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_93);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_93_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_94);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_95);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_wire_s_reg_95_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_expon_value_in1);
  sensitive << ( gs_ctrl_do_filter_h5fe );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_10_out1 );

  SC_METHOD(drive_expon_value_DIN);
  sensitive << ( gs_ctrl_do_filter_hba );

  SC_METHOD(drive_expon_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h5ff );

  SC_METHOD(drive_expon_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h1ff );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_3U_4_8_in2);
  sensitive << ( gs_ctrl_do_filter_h2000 );
  sensitive << ( s_reg_36 );
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_8);
  sensitive << ( SobelFilter_Add_2Ux1U_3U_4_8_in2 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_9);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_10);
  sensitive << ( s_reg_38 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_9_out1 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_11);
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_13);
  sensitive << ( s_reg_38 );

  SC_METHOD(drive_SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice);
  sensitive << ( gs_ctrl_do_filter_h8000380000e70003 );
  sensitive << ( expon_value_out1 );
  sensitive << ( Gaussian_value_out1 );
  sensitive << ( s_reg_6 );
  sensitive << ( s_reg_198 );
  sensitive << ( s_reg_193 );

  SC_METHOD(drive_SobelFilter_Mul_33Sx32U_35S_4_15_in1);
  sensitive << ( gs_ctrl_do_filter_h8000380000e700030 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_out1 );
  sensitive << ( SobelFilter_N_Mux_20_11_20_4_155_out1 );
  sensitive << ( s_reg_186 );

  SC_METHOD(SobelFilter_Mul_33Sx32U_35S_4_15);
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_15_in1 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_16);
  sensitive << ( s_reg_38 );

  SC_METHOD(drive_SobelFilter_Add_33Ux33U_33U_4_17_in2);
  sensitive << ( gs_ctrl_do_filter_h8001b80000d7001b );
  sensitive << ( s_reg_6 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_131 );
  sensitive << ( s_reg_132 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_15_out1 );
  sensitive << ( s_reg_165 );

  SC_METHOD(drive_SobelFilter_Add_33Ux33U_33U_4_17_in1);
  sensitive << ( gs_ctrl_do_filter_h8001b80000d7001b0 );
  sensitive << ( s_reg_132 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_15_out1 );
  sensitive << ( s_reg_131 );
  sensitive << ( s_reg_165 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_6 );

  SC_METHOD(SobelFilter_Add_33Ux33U_33U_4_17);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_in1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_in2 );

  SC_METHOD(drive_Gaussian_value_in1);
  sensitive << ( gs_ctrl_do_filter_h931000 );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_10_out1 );
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_Gaussian_value_DIN);
  sensitive << ( gs_ctrl_do_filter_h10000 );
  sensitive << ( SobelFilter_DivRem_4_19_out1 );
  sensitive << ( SobelFilter_Mul_33Sx32U_35S_4_15_out1 );

  SC_METHOD(drive_Gaussian_value_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h931800 );
  sensitive << ( s_reg_39 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_16_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_20_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1 );

  SC_METHOD(drive_Gaussian_value_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h10800 );

  SC_METHOD(SobelFilter_Add_4Ux1U_5U_4_18);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_DivRem_4_19_in1);
  sensitive << ( Gaussian_value_out1 );

  SC_METHOD(drive_SobelFilter_DivRem_4_19_in2);
  sensitive << ( s_reg_6 );

  SC_METHOD(SobelFilter_LessThan_5Sx5S_1U_4_20);
  sensitive << ( s_reg_5 );

  SC_METHOD(drive_SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2);
  sensitive << ( gs_ctrl_do_filter_h4000040800040 );
  sensitive << ( s_reg_165 );
  sensitive << ( s_reg_50 );

  SC_METHOD(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21);
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 );

  SC_METHOD(drive_SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h100000 );

  SC_METHOD(SobelFilter_LessThan_32Sx5S_1U_4_22);
  sensitive << ( SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice );
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_23);
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1 );
  sensitive << ( SobelFilter_LessThan_32Sx5S_1U_4_22_out1 );

  SC_METHOD(drive_SobelFilter_Mul_6Sx2U_6S_4_24_in2);
  sensitive << ( gs_ctrl_do_filter_h4000040800040 );
  sensitive << ( s_reg_165 );
  sensitive << ( s_reg_50 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_24);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_24_in2 );

  SC_METHOD(SobelFilter_Add_32Sx1U_32S_4_25);
  sensitive << ( SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 );

  SC_METHOD(drive_SobelFilter_Add_2Ux1U_2U_4_26_in2);
  sensitive << ( gs_ctrl_do_filter_h100000 );
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_Add_2Ux1U_2U_4_26);
  sensitive << ( SobelFilter_Add_2Ux1U_2U_4_26_in2 );

  SC_METHOD(drive_SobelFilter_Mul_2Ux2U_4U_4_46_in2);
  sensitive << ( gs_ctrl_do_filter_h100000 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1 );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_46);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_46_in2 );

  SC_METHOD(drive_SobelFilter_Add_4Ux2U_5U_4_28_in1);
  sensitive << ( gs_ctrl_do_filter_h100000 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1 );
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_28);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_in1 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_46_out1 );

  SC_METHOD(SobelFilter_OrReduction_5U_1U_4_29);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_out1 );

  SC_METHOD(SobelFilter_Equal_5Ux4U_1U_4_47);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_out1 );

  SC_METHOD(SobelFilter_Equal_5Ux3U_1U_4_59);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_out1 );

  SC_METHOD(SobelFilter_Equal_5Ux3U_1U_4_60);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_out1 );

  SC_METHOD(SobelFilter_Equal_5Ux2U_1U_4_61);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_out1 );

  SC_METHOD(SobelFilter_Equal_5Ux1U_1U_4_62);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_28_out1 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_65);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_79);
  sensitive << ( s_reg_4_slice );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_65_out1 );

  SC_METHOD(SobelFilter_Add_2Ux1U_2U_4_91);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_92);
  sensitive << ( s_reg_4_slice );
  sensitive << ( s_reg_83 );

  SC_METHOD(SobelFilter_Equal_5Ux4U_1U_4_93);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Equal_5Ux3U_1U_4_94);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Equal_5Ux3U_1U_4_95);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Equal_5Ux2U_1U_4_96);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_OrReduction_5U_1U_4_97);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_N_Mux_24_2_0_4_98);
  sensitive << ( i_rgb_m_stall_reg_full );
  sensitive << ( i_rgb_m_stall_reg );
  sensitive << ( i_rgb_data );

  SC_METHOD(drive_SobelFilter_N_Mux_20_2_10_4_99_in2);
  sensitive << ( SobelFilter_N_Mux_24_2_0_4_98_out1 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_99);
  sensitive << ( s_reg_126 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_7 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_3_13_4_100_in2);
  sensitive << ( SobelFilter_N_Mux_24_2_0_4_98_out1 );

  SC_METHOD(SobelFilter_N_Mux_20_3_13_4_100);
  sensitive << ( s_reg_5 );
  sensitive << ( s_reg_23 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_14_4_101);
  sensitive << ( s_reg_5 );
  sensitive << ( s_reg_22 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_15_4_102);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_92_out1 );
  sensitive << ( s_reg_21 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_16_4_103);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_20 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_17_4_104);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_19 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_18_4_105);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_18 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_106);
  sensitive << ( s_reg_81 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_out1 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_107);
  sensitive << ( SobelFilter_Equal_5Ux4U_1U_4_93_out1 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_17 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_108);
  sensitive << ( s_reg_92 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_16 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_109);
  sensitive << ( s_reg_93 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_15 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_110);
  sensitive << ( SobelFilter_Equal_5Ux3U_1U_4_94_out1 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_14 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_111);
  sensitive << ( SobelFilter_Equal_5Ux3U_1U_4_95_out1 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_13 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_112);
  sensitive << ( s_reg_94 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_12 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_113);
  sensitive << ( SobelFilter_Equal_5Ux2U_1U_4_96_out1 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_11 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_114);
  sensitive << ( s_reg_95 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );
  sensitive << ( s_reg_10 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_115);
  sensitive << ( SobelFilter_OrReduction_5U_1U_4_97_out1 );
  sensitive << ( s_reg_9 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_9_4_116);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_24 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_4_3_4_117_in2);
  sensitive << ( SobelFilter_N_Mux_24_2_0_4_98_out1 );

  SC_METHOD(SobelFilter_N_Mux_20_4_3_4_117);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_32 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_4_4_118);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_31 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_5_4_119);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_30 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_6_4_120);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_29 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_7_4_121);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_28 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_8_4_122);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_27 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_2_10_4_123);
  sensitive << ( s_reg_81 );
  sensitive << ( SobelFilter_N_Mux_20_3_9_4_116_out1 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_11_4_124);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_26 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_3_12_4_125);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_25 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_1_4_126);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_34 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_N_Mux_20_4_2_4_127);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_79_out1 );
  sensitive << ( s_reg_33 );
  sensitive << ( SobelFilter_N_Mux_20_4_3_4_117_in2 );
  sensitive << ( SobelFilter_N_Mux_20_3_13_4_100_in2 );
  sensitive << ( SobelFilter_N_Mux_20_2_10_4_99_in2 );

  SC_METHOD(SobelFilter_LessThan_2Ux2U_1U_4_128);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_LessThan_2Ux2U_1U_4_129);
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_Sub_6Sx4U_6S_4_130);
  sensitive << ( s_reg_165 );

  SC_METHOD(SobelFilter_Sub_6Sx3U_6S_4_131);
  sensitive << ( s_reg_165 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_133);
  sensitive << ( s_reg_165 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_134);
  sensitive << ( SobelFilter_Sub_6Sx4U_6S_4_130_out1 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_135);
  sensitive << ( SobelFilter_Sub_6Sx3U_6S_4_131_out1 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_136);
  sensitive << ( SobelFilter_LessThan_32Sx5S_1U_4_22_out1 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_139);
  sensitive << ( s_reg_39 );
  sensitive << ( SobelFilter_Not_1U_1U_4_136_out1 );

  SC_METHOD(SobelFilter_Add_6Sx2U_6S_4_140);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_134_out1 );

  SC_METHOD(SobelFilter_Add_6Sx1U_6S_4_141);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_135_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_142);
  sensitive << ( s_reg_81 );
  sensitive << ( s_reg_39 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in17);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_23 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in16);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_31 );
  sensitive << ( s_reg_22 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in15);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_30 );
  sensitive << ( s_reg_21 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in14);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_29 );
  sensitive << ( s_reg_20 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in13);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_28 );
  sensitive << ( s_reg_19 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in12);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_27 );
  sensitive << ( s_reg_18 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in11);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_7 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in10);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_17 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in9);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_16 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in8);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_23 );
  sensitive << ( s_reg_15 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in7);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_22 );
  sensitive << ( s_reg_14 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in6);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_21 );
  sensitive << ( s_reg_13 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in5);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_20 );
  sensitive << ( s_reg_12 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in4);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_19 );
  sensitive << ( s_reg_11 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in3);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_18 );
  sensitive << ( s_reg_10 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_in2);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_7 );
  sensitive << ( s_reg_9 );

  SC_METHOD(drive_SobelFilter_N_Mux_20_16_19_4_143_ctrl1);
  sensitive << ( gs_ctrl_do_filter_h400000 );
  sensitive << ( s_reg_133 );
  sensitive << ( s_reg_83 );

  SC_METHOD(SobelFilter_N_Mux_20_16_19_4_143);
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_ctrl1 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in17 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in2 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in3 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in4 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in5 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in6 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in7 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in8 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in9 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in10 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in11 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in12 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in13 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in14 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in15 );
  sensitive << ( SobelFilter_N_Mux_20_16_19_4_143_in16 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_144);
  sensitive << ( s_reg_81 );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_147);
  sensitive << ( s_reg_39 );
  sensitive << ( SobelFilter_Not_1U_1U_4_144_out1 );

  SC_METHOD(SobelFilter_Add_4Ux1U_5U_4_148);
  sensitive << ( s_reg_133 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_154);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_142_out1 );

  SC_METHOD(SobelFilter_N_Mux_20_11_20_4_155);
  sensitive << ( s_reg_133 );
  sensitive << ( s_reg_10 );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_27 );
  sensitive << ( s_reg_28 );
  sensitive << ( s_reg_29 );
  sensitive << ( s_reg_30 );
  sensitive << ( s_reg_31 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_33 );
  sensitive << ( s_reg_34 );
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_LessThan_5Sx5S_1U_4_156);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_6Ux4U_7S_4_161);
  sensitive << ( s_reg_125 );

  SC_METHOD(drive_buffer_in1);
  sensitive << ( gs_ctrl_do_filter_h58f8058fbe0cdf80 );
  sensitive << ( s_reg_49 );
  sensitive << ( SobelFilter_Add_6Ux4U_7S_4_161_out1 );
  sensitive << ( SobelFilter_Add_6Ux5U_7S_4_169_out1 );
  sensitive << ( wire_s_reg_93_0 );
  sensitive << ( s_reg_93 );
  sensitive << ( SobelFilter_Add_6Sx1U_6S_4_173_out1 );
  sensitive << ( SobelFilter_Add_6Sx2U_6S_4_172_out1 );
  sensitive << ( wire_s_reg_126_0 );
  sensitive << ( s_reg_152 );
  sensitive << ( SobelFilter_Add_6Ux5U_7S_4_179_out1 );
  sensitive << ( SobelFilter_Add_6Ux5U_7S_4_178_out1 );
  sensitive << ( SobelFilter_Add_5Ux3U_5U_4_207_out1 );
  sensitive << ( SobelFilter_Add_5Ux4U_6U_4_213_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_6U_4_231_out1 );
  sensitive << ( SobelFilter_Add_5Ux2U_5U_4_209_out1 );
  sensitive << ( SobelFilter_Add_5Ux4U_6U_4_215_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_6U_4_232_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_186_out1 );
  sensitive << ( SobelFilter_Add_5Ux4U_6U_4_205_out1 );
  sensitive << ( SobelFilter_Add_5Ux5U_6U_4_211_out1 );

  SC_METHOD(drive_buffer_DIN);
  sensitive << ( gs_ctrl_do_filter_hd8000db6000d80 );
  sensitive << ( o_result_data );
  sensitive << ( s_reg_131 );
  sensitive << ( s_reg_132 );

  SC_METHOD(drive_buffer_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h58f8058fbf8cdf80 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1 );
  sensitive << ( s_reg_50 );
  sensitive << ( wire_s_reg_81_1 );
  sensitive << ( s_reg_81 );
  sensitive << ( wire_s_reg_93_0 );
  sensitive << ( s_reg_93 );
  sensitive << ( wire_s_reg_95_0 );
  sensitive << ( s_reg_95 );
  sensitive << ( wire_s_reg_126_0 );
  sensitive << ( s_reg_126 );
  sensitive << ( SobelFilter_Not_1U_1U_4_174_out1 );
  sensitive << ( SobelFilter_Not_1U_1U_4_177_out1 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1 );

  SC_METHOD(drive_buffer_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_hf8000fbf800f80 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1 );
  sensitive << ( s_reg_50 );
  sensitive << ( wire_s_reg_81_1 );
  sensitive << ( s_reg_81 );
  sensitive << ( wire_s_reg_93_0 );
  sensitive << ( s_reg_93 );
  sensitive << ( wire_s_reg_95_0 );
  sensitive << ( s_reg_95 );
  sensitive << ( wire_s_reg_126_0 );
  sensitive << ( s_reg_126 );
  sensitive << ( SobelFilter_Not_1U_1U_4_174_out1 );
  sensitive << ( SobelFilter_Not_1U_1U_4_177_out1 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_164);
  sensitive << ( s_reg_165 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_165);
  sensitive << ( s_reg_49 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_166);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Add_6Ux4U_7S_4_167);
  sensitive << ( s_reg_125 );

  SC_METHOD(SobelFilter_Add_6Ux4U_7S_4_168);
  sensitive << ( s_reg_125 );

  SC_METHOD(SobelFilter_Add_6Ux5U_7S_4_169);
  sensitive << ( s_reg_49 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_170);
  sensitive << ( s_reg_133 );

  SC_METHOD(SobelFilter_Mul_6Sx2U_6S_4_171);
  sensitive << ( s_reg_147 );

  SC_METHOD(SobelFilter_Add_6Sx2U_6S_4_172);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_170_out1 );

  SC_METHOD(SobelFilter_Add_6Sx1U_6S_4_173);
  sensitive << ( SobelFilter_Mul_6Sx2U_6S_4_171_out1 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_174);
  sensitive << ( s_reg_92 );

  SC_METHOD(SobelFilter_Add_6Sx2U_6S_4_175);
  sensitive << ( s_reg_125 );

  SC_METHOD(SobelFilter_Add_6Sx1U_6S_4_176);
  sensitive << ( s_reg_5 );

  SC_METHOD(SobelFilter_Not_1U_1U_4_177);
  sensitive << ( s_reg_94 );

  SC_METHOD(SobelFilter_Add_6Ux5U_7S_4_178);
  sensitive << ( s_reg_49 );

  SC_METHOD(SobelFilter_Add_6Ux5U_7S_4_179);
  sensitive << ( s_reg_125 );

  SC_METHOD(drive_SobelFilter_Mul_2Ux2U_4U_4_180_in2);
  sensitive << ( gs_ctrl_do_filter_h400000000000 );
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_180);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_180_in2 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_181);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_180_in2 );

  SC_METHOD(drive_SobelFilter_Mul_2Ux2U_4U_4_182_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( s_reg_160 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_182);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_182_in2 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_183);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_182_in2 );

  SC_METHOD(drive_SobelFilter_Mul_2Ux2U_4U_4_184_in2);
  sensitive << ( gs_ctrl_do_filter_h80000 );
  sensitive << ( s_reg_160 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_184);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_184_in2 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_185);
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_184_in2 );

  SC_METHOD(drive_SobelFilter_Add_4Ux2U_5U_4_186_in2);
  sensitive << ( gs_ctrl_do_filter_h40000 );
  sensitive << ( s_reg_83 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_184_out1 );

  SC_METHOD(drive_SobelFilter_Add_4Ux2U_5U_4_186_in1);
  sensitive << ( gs_ctrl_do_filter_h40000 );
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_186);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_186_in1 );
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_186_in2 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_187);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_83 );

  SC_METHOD(SobelFilter_Add_5Ux3U_5U_4_188);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_187_out1 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_189);
  sensitive << ( s_reg_4_slice );
  sensitive << ( s_reg_83 );

  SC_METHOD(SobelFilter_Add_5Ux2U_5U_4_190);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_189_out1 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_191);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_193);
  sensitive << ( s_reg_4_slice );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_191_out1 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_194);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_196);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_197);
  sensitive << ( s_reg_38 );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_196_out1 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_198);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Mul_2Ux2U_4U_4_199);
  sensitive << ( s_reg_38 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5S_4_201);
  sensitive << ( s_reg_4_slice );
  sensitive << ( SobelFilter_Mul_2Ux2U_4U_4_199_out1 );

  SC_METHOD(SobelFilter_Add_2Ux1U_3U_4_202);
  sensitive << ( s_reg_4_slice );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_204);
  sensitive << ( s_reg_4_slice );
  sensitive << ( s_reg_178 );

  SC_METHOD(SobelFilter_Add_5Ux4U_6U_4_205);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_204_out1 );

  SC_METHOD(drive_sharpening_in1);
  sensitive << ( gs_ctrl_do_filter_h400000000002000 );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_197_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_201_out1 );
  sensitive << ( SobelFilter_Add_4Ux2U_5S_4_193_out1 );

  SC_METHOD(drive_sharpening_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h400004000002000 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_206);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_178 );

  SC_METHOD(SobelFilter_Add_5Ux3U_5U_4_207);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_206_out1 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_208);
  sensitive << ( s_reg_4_slice );
  sensitive << ( s_reg_178 );

  SC_METHOD(SobelFilter_Add_5Ux2U_5U_4_209);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_208_out1 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_210);
  sensitive << ( s_reg_4_slice );
  sensitive << ( s_reg_178 );

  SC_METHOD(SobelFilter_Add_5Ux5U_6U_4_211);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_210_out1 );

  SC_METHOD(SobelFilter_Add_5Ux4U_6U_4_213);
  sensitive << ( s_reg_133 );

  SC_METHOD(SobelFilter_Add_5Ux4U_6U_4_215);
  sensitive << ( s_reg_133 );

  SC_METHOD(SobelFilter_GreaterThan_32Sx9S_1U_4_228);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_out1 );

  SC_METHOD(drive_SobelFilter_N_Mux_16_2_23_4_219_ctrl1);
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_out1 );

  SC_METHOD(SobelFilter_N_Mux_16_2_23_4_219);
  sensitive << ( SobelFilter_N_Mux_16_2_23_4_219_ctrl1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_out1 );

  SC_METHOD(SobelFilter_N_Mux_16_2_24_4_220);
  sensitive << ( SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 );
  sensitive << ( SobelFilter_N_Mux_16_2_23_4_219_out1 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_221);
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_178 );

  SC_METHOD(SobelFilter_Add_5Ux3U_5U_4_222);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_221_out1 );

  SC_METHOD(SobelFilter_Add_4Ux2U_5U_4_223);
  sensitive << ( s_reg_4_slice );
  sensitive << ( s_reg_178 );

  SC_METHOD(SobelFilter_Add_5Ux2U_5U_4_224);
  sensitive << ( SobelFilter_Add_4Ux2U_5U_4_223_out1 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_225);
  sensitive << ( s_reg_160 );

  SC_METHOD(SobelFilter_N_Mux_24_2_21_4_229);
  sensitive << ( SobelFilter_N_Mux_16_2_23_4_219_ctrl1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_out1 );

  SC_METHOD(SobelFilter_N_Mux_24_2_22_4_230);
  sensitive << ( SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 );
  sensitive << ( SobelFilter_N_Mux_24_2_21_4_229_out1 );

  SC_METHOD(SobelFilter_Add_5Ux5U_6U_4_231);
  sensitive << ( s_reg_133 );

  SC_METHOD(SobelFilter_Add_5Ux5U_6U_4_232);
  sensitive << ( s_reg_133 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_233);
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_N_Mux_32_2_25_4_237);
  sensitive << ( SobelFilter_N_Mux_16_2_23_4_219_ctrl1 );
  sensitive << ( SobelFilter_Add_33Ux33U_33U_4_17_out1 );

  SC_METHOD(SobelFilter_N_Mux_32_2_26_4_238);
  sensitive << ( SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 );
  sensitive << ( SobelFilter_N_Mux_32_2_25_4_237_out1 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_249);
  sensitive << ( s_reg_36 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_255);
  sensitive << ( s_reg_160 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_261);
  sensitive << ( s_reg_160 );

  SC_METHOD(SobelFilter_LessThan_3Sx3S_1U_4_267);
  sensitive << ( s_reg_36 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_16_out1 );
  sensitive << ( s_reg_39 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_20_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1 );
  sensitive << ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1 );
  sensitive << ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1 );
  sensitive << ( s_reg_50 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_261_out1 );
  sensitive << ( s_reg_126 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_267_out1 );
  sensitive << ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1 );

  SC_METHOD(drive_gs_ctrl_do_filter_h5fe);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hba);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h5ff);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h1ff);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8000380000e70003);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8000380000e700030);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8001b80000d7001b);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8001b80000d7001b0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h931000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h10000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h931800);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h10800);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h4000040800040);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h100000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h400000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h58f8058fbe0cdf80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hd8000db6000d80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h58f8058fbf8cdf80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_hf8000fbf800f80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h400000000000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h4);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h80000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h40000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h400000000002000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h400004000002000);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( SobelFilter_gen_busy_r_4_282_out1 );

  SC_METHOD(drive_i_rgb_m_data_is_valid);
  sensitive << ( SobelFilter_gen_busy_r_4_282_out1 );

  SC_METHOD(SobelFilter_gen_busy_r_4_282_p9);
  sensitive << ( 
  SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( SobelFilter_gen_busy_r_4_282_gdiv );
  sensitive << ( SobelFilter_gen_busy_r_4_282_gnew_busy );

  SC_METHOD(SobelFilter_gen_busy_r_4_282_p8);
  sensitive << ( SobelFilter_gen_busy_r_4_282_gdiv );

  SC_METHOD(SobelFilter_gen_busy_r_4_282_p7);
  sensitive << ( i_rgb_m_stall_reg_full );
  sensitive << ( SobelFilter_gen_busy_r_4_282_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(SobelFilter_gen_busy_r_4_282_p6);
  sensitive << ( i_rgb_m_stall_reg_full );
  sensitive << ( SobelFilter_gen_busy_r_4_282_gnew_req );

  SC_METHOD(SobelFilter_gen_busy_r_4_282_p5);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_N_Muxb_1_2_27_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_i_rgb_m_stall_reg);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_4_5);
  sensitive << ( i_rgb_m_stall_reg_full );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_6);
  sensitive << ( stall0 );
  sensitive << ( i_rgb_m_data_is_valid );

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_7);
  sensitive << ( SobelFilter_Not_1U_1U_4_5_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_6_out1 );

  SC_METHOD(drive_i_rgb_m_stall_reg_full);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_280);
  sensitive << ( stall0 );
  sensitive << ( i_rgb_m_data_is_valid );

  SC_METHOD(drive_o_result_vld);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( SobelFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_result_m_unacked_req );

  SC_METHOD(drive_o_result_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_279);
  sensitive << ( o_result_vld );
  sensitive << ( o_result_busy );

  SC_METHOD(SobelFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_result_m_req_m_prev_trig_req );
  sensitive << ( o_result_m_req_m_trig_req );

  SC_METHOD(drive_o_result_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_1_3);
  sensitive << ( o_result_m_req_m_trig_req );

}
// resource: mux_32bx5i1c
// resource: regr_en_32
void SobelFilter::drive_o_result_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 20ULL: 
      if ( !( (SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read()||
           SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read()) ) ) {
        o_result_data = 0ULL;
      } 
      break;
    case 21ULL: 
      o_result_data = (sc_uint<32> ) (SobelFilter_Add_33Ux33U_33U_4_17_out1
                      .read().range(32,12));
      break;
    case 23ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        o_result_data = (sc_uint<32> ) ((sc_uint<21> )o_result_data.read());
      } 
      break;
    case 36ULL: case 56ULL: case 76ULL: 
      o_result_data = 0ULL;
      break;
    case 45ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_261_out1.read() ) {
        o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                        .read();
      } else {
        if ( s_reg_126.read() ) {
          /* state63 */
          o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                          .read();
        } 
      }
      break;
    case 48ULL: case 68ULL: case 85ULL: 
      o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1.read()
      ;
      break;
    case 65ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_267_out1.read() ) {
        o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                        .read();
      } else {
        if ( s_reg_126.read() ) {
          /* state88 */
          o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                          .read();
        } 
      }
      break;
    case 82ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1.read() ) {
        o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                        .read();
      } else {
        if ( s_reg_126.read() ) {
          /* state110 */
          o_result_data = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                          .read();
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_1
void SobelFilter::drive_i_rgb_m_busy_req_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 17ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_20_out1.read() );
      else {
        i_rgb_m_busy_req_0 = 1ULL;
      }
      break;
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      i_rgb_m_busy_req_0 = 0ULL;
      break;
    case 19ULL: 
      i_rgb_m_busy_req_0 = 1ULL;
      break;
    case 20ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
        i_rgb_m_busy_req_0 = 0ULL;
      } else {
        if ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read() ) {
          i_rgb_m_busy_req_0 = 0ULL;
        } 
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i1c
// resource: regr_en_1
void SobelFilter::drive_o_result_m_req_m_trig_req(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 17ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_20_out1.read() );
      else {
        o_result_m_req_m_trig_req = 0ULL;
      }
      break;
    case 48ULL: case 68ULL: case 85ULL: 
      o_result_m_req_m_trig_req = (sc_uint<1> ) (SobelFilter_Not_1U_1U_1_3_out1
                                  .read());
      break;
    }
    break;
  }
}
// resource: mux_1bx3i1c
void SobelFilter::drive_stall0(){
  switch( (sc_uint<7>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 19ULL: 
    stall0 = (sc_uint<1> )SobelFilter_gen_busy_r_4_282_out1.read();
    break;
  case 49ULL: case 69ULL: case 86ULL: 
    stall0 = SobelFilter_And_1Ux1U_1U_4_279_out1.read();
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_10(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_10 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_10 = SobelFilter_N_Mux_20_2_10_4_114_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_11(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_11 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_11 = SobelFilter_N_Mux_20_2_10_4_113_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_12(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_12 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_12 = SobelFilter_N_Mux_20_2_10_4_112_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_6bx5i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_125(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 20ULL: 
      if ( SobelFilter_LessThan_32Sx5S_1U_4_22_out1.read() ) {
        s_reg_125 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_133_out1.read());
      } else {
        if ( s_reg_39.read() ) {
          s_reg_125 = (sc_uint<6> ) (SobelFilter_Add_6Sx1U_6S_4_141_out1.read())
          ;
        } else {
          s_reg_125 = (sc_uint<6> ) (SobelFilter_Add_6Sx2U_6S_4_140_out1.read())
          ;
        }
      }
      break;
    case 26ULL: case 32ULL: case 52ULL: case 72ULL: 
      s_reg_125 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_165_out1.read());
      break;
    case 28ULL: case 34ULL: case 54ULL: case 74ULL: 
      s_reg_125 = (sc_uint<6> ) (SobelFilter_Add_6Sx1U_6S_4_176_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_1bx5i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_126(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_126 = SobelFilter_Equal_5Ux4U_1U_4_47_out1.read();
      break;
    case 20ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
        s_reg_126 = SobelFilter_Equal_5Ux4U_1U_4_47_out1.read();
      } else {
        if ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read() ) {
          s_reg_126 = SobelFilter_Equal_5Ux4U_1U_4_47_out1.read();
        } else {
          s_reg_126 = SobelFilter_And_1Ux1U_1U_4_139_out1.read();
        }
      }
      break;
    case 44ULL: 
      s_reg_126 = SobelFilter_LessThan_3Sx3S_1U_4_249_out1.read();
      break;
    case 64ULL: 
      s_reg_126 = SobelFilter_LessThan_3Sx3S_1U_4_255_out1.read();
      break;
    case 81ULL: 
      s_reg_126 = SobelFilter_LessThan_3Sx3S_1U_4_225_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_126_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 20ULL: 
      wire_s_reg_126_0 = SobelFilter_And_1Ux1U_1U_4_139_out1.read();
      break;
    case 23ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        wire_s_reg_126_0 = s_reg_126.read();
      } 
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_13(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_13 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_13 = SobelFilter_N_Mux_20_2_10_4_111_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_33bx6i1c
// resource: regr_en_33
void SobelFilter::drive_s_reg_131(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 20ULL: case 36ULL: case 56ULL: case 76ULL: 
      s_reg_131 = 0ULL;
      break;
    case 22ULL: 
      s_reg_131 = (sc_uint<33> ) (SobelFilter_Add_33Ux33U_33U_4_17_out1.read()
                  .range(32,12));
      break;
    case 23ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        s_reg_131 = (sc_uint<33> ) ((sc_uint<21> )s_reg_131.read());
      } 
      break;
    case 43ULL: case 64ULL: case 81ULL: 
      s_reg_131 = (sc_uint<33> ) ((sc_int<32> )
                  SobelFilter_Add_33Ux33U_33U_4_17_out1.read());
      break;
    case 45ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_261_out1.read() ) {
        s_reg_131 = (sc_uint<33> ) ((sc_int<32> )s_reg_131.read());
      } 
      break;
    case 46ULL: case 66ULL: case 83ULL: 
      s_reg_131 = (sc_uint<33> ) ((sc_int<32> )s_reg_131.read());
      break;
    case 47ULL: case 67ULL: case 84ULL: 
      s_reg_131 = SobelFilter_Add_33Ux33U_33U_4_17_out1.read();
      break;
    case 65ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_267_out1.read() ) {
        s_reg_131 = (sc_uint<33> ) ((sc_int<32> )s_reg_131.read());
      } 
      break;
    case 82ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1.read() ) {
        s_reg_131 = (sc_uint<33> ) ((sc_int<32> )s_reg_131.read());
      } 
      break;
    }
    break;
  }
}
// resource: mux_21bx4i1c
// resource: regr_en_21
void SobelFilter::drive_s_reg_132(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 11ULL: 
      s_reg_132 = (sc_uint<21> ) (((/*imp*/sc_uint<14> ) 
                  SobelFilter_Mul_33Sx32U_35S_4_15_out1.read().range(33,20)));
      break;
    case 20ULL: 
      s_reg_132 = 0ULL;
      break;
    case 23ULL: 
      /* state37 */
      s_reg_132 = (sc_uint<21> ) (SobelFilter_Add_33Ux33U_33U_4_17_out1.read()
                  .range(32,12));
      break;
    case 43ULL: case 63ULL: case 80ULL: 
      s_reg_132 = (sc_uint<21> ) (SobelFilter_N_Mux_16_2_24_4_220_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_6bx7i1c
// resource: regr_en_6
void SobelFilter::drive_s_reg_133(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 20ULL: 
      s_reg_133 = 0ULL;
      break;
    case 23ULL: 
      s_reg_133 = (sc_uint<6> ) ((sc_int<5> )s_reg_5.read());
      break;
    case 25ULL: case 31ULL: case 51ULL: case 71ULL: 
      s_reg_133 = (sc_uint<6> ) (SobelFilter_Sub_6Sx4U_6S_4_130_out1.read());
      break;
    case 37ULL: 
      s_reg_133 = (sc_uint<6> ) (SobelFilter_Add_5Ux3U_5U_4_188_out1.read());
      break;
    case 41ULL: 
      s_reg_133 = (sc_uint<6> ) (SobelFilter_Add_5Ux3U_5U_4_222_out1.read());
      break;
    case 57ULL: 
      s_reg_133 = (sc_uint<6> ) (SobelFilter_Add_5Ux2U_5U_4_190_out1.read());
      break;
    case 61ULL: 
      s_reg_133 = (sc_uint<6> ) (SobelFilter_Add_5Ux2U_5U_4_224_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_14(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_14 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_14 = SobelFilter_N_Mux_20_2_10_4_110_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_6
void SobelFilter::drive_s_reg_147(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 25ULL: case 31ULL: case 51ULL: case 71ULL: 
      s_reg_147 = (sc_uint<6> ) (SobelFilter_Sub_6Sx3U_6S_4_131_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_15(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_15 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_15 = SobelFilter_N_Mux_20_2_10_4_109_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_6
void SobelFilter::drive_s_reg_152(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 26ULL: case 32ULL: case 52ULL: case 72ULL: 
      s_reg_152 = (sc_uint<6> )SobelFilter_Add_6Ux4U_7S_4_168_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_16(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_16 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_16 = SobelFilter_N_Mux_20_2_10_4_108_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx3i0c
// resource: regr_en_3
void SobelFilter::drive_s_reg_160(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 38ULL: 
      s_reg_160 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_198_out1.read());
      break;
    case 56ULL: case 66ULL: 
      s_reg_160 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_183_out1.read());
      break;
    case 76ULL: case 83ULL: 
      s_reg_160 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_185_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_32bx4i1c
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_165(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_165 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 30ULL: case 70ULL: case 87ULL: 
        s_reg_165 = s_reg_50.read();
        break;
      case 36ULL: case 50ULL: case 56ULL: case 76ULL: 
        s_reg_165 = 0ULL;
        break;
      case 44ULL: case 63ULL: case 80ULL: 
        s_reg_165 = (sc_uint<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1.read();
        break;
      case 45ULL: 
        if ( SobelFilter_LessThan_3Sx3S_1U_4_261_out1.read() );
        else {
          if ( s_reg_126.read() );
          else {
            /* state65 */
            s_reg_165 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_26_4_238_out1
                        .read());
          }
        }
        break;
      case 65ULL: 
        if ( SobelFilter_LessThan_3Sx3S_1U_4_267_out1.read() );
        else {
          if ( s_reg_126.read() );
          else {
            /* state90 */
            s_reg_165 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_26_4_238_out1
                        .read());
          }
        }
        break;
      case 82ULL: 
        if ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1.read() );
        else {
          if ( s_reg_126.read() );
          else {
            /* state112 */
            s_reg_165 = (sc_uint<32> ) (SobelFilter_N_Mux_32_2_26_4_238_out1
                        .read());
          }
        }
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_17(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_17 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_17 = SobelFilter_N_Mux_20_2_10_4_107_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx3i0c
// resource: regr_en_4
void SobelFilter::drive_s_reg_178(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 38ULL: case 40ULL: 
      s_reg_178 = SobelFilter_Mul_2Ux2U_4U_4_196_out1.read();
      break;
    case 58ULL: case 60ULL: 
      s_reg_178 = SobelFilter_Mul_2Ux2U_4U_4_199_out1.read();
      break;
    case 77ULL: case 78ULL: 
      s_reg_178 = SobelFilter_Mul_2Ux2U_4U_4_191_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_18(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_18 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_18 = SobelFilter_N_Mux_20_3_18_4_105_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_186(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 39ULL: case 59ULL: case 78ULL: 
      s_reg_186 = sharpening_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_19(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_19 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_19 = SobelFilter_N_Mux_20_3_17_4_104_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_193(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 43ULL: case 60ULL: case 63ULL: case 77ULL: case 80ULL: 
      s_reg_193 = buffer_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_198(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 41ULL: case 61ULL: 
      s_reg_198 = buffer_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_20(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_20 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_20 = SobelFilter_N_Mux_20_3_16_4_103_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_21(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_21 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_21 = SobelFilter_N_Mux_20_3_15_4_102_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_22(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_22 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_22 = SobelFilter_N_Mux_20_3_14_4_101_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_23(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_23 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_23 = SobelFilter_N_Mux_20_3_13_4_100_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_24(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_24 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_24 = SobelFilter_N_Mux_20_2_10_4_123_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_25(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_25 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_25 = SobelFilter_N_Mux_20_3_12_4_125_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_26(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_26 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_26 = SobelFilter_N_Mux_20_3_11_4_124_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_27(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_27 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_27 = SobelFilter_N_Mux_20_4_8_4_122_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_28(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_28 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_28 = SobelFilter_N_Mux_20_4_7_4_121_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_29(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_29 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_29 = SobelFilter_N_Mux_20_4_6_4_120_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_30(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_30 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_30 = SobelFilter_N_Mux_20_4_5_4_119_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_31(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_31 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_31 = SobelFilter_N_Mux_20_4_4_4_118_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_32(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_32 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_32 = SobelFilter_N_Mux_20_4_3_4_117_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_33(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_33 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_33 = SobelFilter_N_Mux_20_4_2_4_127_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_34(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_34 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_34 = SobelFilter_N_Mux_20_4_1_4_126_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i0c
// resource: regr_en_3
void SobelFilter::drive_s_reg_36(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 9ULL: case 13ULL: 
      s_reg_36 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_8_out1.read());
      break;
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_36 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_2U_4_26_out1.read());
      break;
    case 20ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
        s_reg_36 = (sc_uint<3> ) ((sc_uint<2> )s_reg_36.read());
      } else {
        s_reg_36 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_2U_4_26_out1.read());
      }
      break;
    case 36ULL: case 46ULL: 
      s_reg_36 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_181_out1.read());
      break;
    case 58ULL: 
      s_reg_36 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_202_out1.read());
      break;
    case 77ULL: 
      s_reg_36 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_194_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_3bx5i1c
// resource: regr_en_3
void SobelFilter::drive_s_reg_38(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 9ULL: case 13ULL: case 18ULL: case 30ULL: case 36ULL: case 46ULL: case 
    50ULL: case 56ULL: case 70ULL: case 76ULL: case 87ULL: 
      s_reg_38 = 0ULL;
      break;
    case 11ULL: 
      s_reg_38 = (sc_uint<3> ) (SobelFilter_Add_2Ux1U_3U_4_13_out1.read());
      break;
    case 20ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
        s_reg_38 = (sc_uint<3> ) ((sc_uint<2> )s_reg_38.read());
      } else {
        s_reg_38 = (sc_uint<3> ) ((sc_uint<2> )s_reg_36.read());
      }
      break;
    case 45ULL: case 66ULL: case 83ULL: 
      s_reg_38 = s_reg_160.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_39(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 11ULL: 
      s_reg_39 = SobelFilter_LessThan_3Sx3S_1U_4_11_out1.read();
      break;
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_39 = SobelFilter_And_1Ux1U_1U_4_23_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_2bx3i1c
// resource: regr_en_sc_2
void SobelFilter::drive_s_reg_4_slice(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_4_slice = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 13ULL: case 46ULL: case 65ULL: case 82ULL: 
        s_reg_4_slice = (sc_uint<2> )s_reg_36.read();
        break;
      case 18ULL: case 30ULL: case 36ULL: case 50ULL: case 56ULL: case 66ULL: 
      case 70ULL: case 76ULL: case 83ULL: case 87ULL: 
        s_reg_4_slice = 0ULL;
        break;
      case 19ULL: 
        s_reg_4_slice = (sc_uint<2> ) (SobelFilter_Add_2Ux1U_2U_4_91_out1.read()
                        );
        break;
      case 20ULL: 
        if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() );
        else {
          s_reg_4_slice = 0ULL;
        }
        break;
      }
      break;
    }
  }
}
// resource: mux_6bx5i0c
// resource: regr_en_6
void SobelFilter::drive_s_reg_49(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_49 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_24_out1.read());
      break;
    case 23ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() );
      else {
        /* state36 */
        switch( (sc_uint<32>)(s_reg_50.read()) ) {
        case 13ULL: case 14ULL: case 15ULL: 
          s_reg_49 = (sc_uint<6> ) (SobelFilter_Sub_6Sx4U_6S_4_130_out1.read());
          break;
        }
      }
      break;
    case 24ULL: 
      s_reg_49 = (sc_uint<6> ) (SobelFilter_Sub_6Sx4U_6S_4_130_out1.read());
      break;
    case 25ULL: case 31ULL: case 51ULL: case 71ULL: 
      if ( s_reg_81.read() ) {
        s_reg_49 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_164_out1.read());
      } 
      break;
    case 26ULL: case 32ULL: case 52ULL: case 72ULL: 
      s_reg_49 = (sc_uint<6> )SobelFilter_Add_6Ux4U_7S_4_167_out1.read();
      break;
    case 28ULL: case 34ULL: case 54ULL: case 74ULL: 
      s_reg_49 = (sc_uint<6> ) (SobelFilter_Add_6Sx2U_6S_4_175_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_6bx6i0c
// resource: regr_en_sc_6
void SobelFilter::drive_s_reg_5(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 12ULL: 
        if ( !( (SobelFilter_LessThan_3Sx3S_1U_4_16_out1.read()||s_reg_39.read()
             ) ) ) {
          s_reg_5 = (sc_uint<6> ) ((sc_int<5> )s_reg_5.read());
        } 
        break;
      case 16ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_int<5> )SobelFilter_Add_4Ux1U_5U_4_18_out1
                  .read());
        break;
      case 17ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_int<5> )s_reg_5.read());
        break;
      case 18ULL: case 20ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_4Ux2U_5U_4_28_out1
                  .read());
        break;
      case 22ULL: 
        s_reg_5 = (sc_uint<6> ) ((sc_int<5> )SobelFilter_Add_4Ux1U_5U_4_148_out1
                  .read());
        break;
      case 23ULL: 
        /* state36 */
        switch( (sc_uint<32>)(s_reg_50.read()) ) {
        case 13ULL: case 14ULL: case 15ULL: 
          s_reg_5 = (sc_uint<6> ) (SobelFilter_Sub_6Sx3U_6S_4_131_out1.read());
          break;
        }
        break;
      case 24ULL: 
        s_reg_5 = (sc_uint<6> ) (SobelFilter_Sub_6Sx3U_6S_4_131_out1.read());
        break;
      case 26ULL: case 32ULL: case 52ULL: case 72ULL: 
        s_reg_5 = (sc_uint<6> ) (SobelFilter_Mul_6Sx2U_6S_4_166_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_50(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_50 = (sc_uint<32> ) (SobelFilter_Add_32Sx1U_32S_4_25_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_32bx5i0c
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_6(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 9ULL: case 13ULL: case 17ULL: 
        s_reg_6 = (sc_uint<32> ) ((sc_uint<24> )s_reg_6.read());
        break;
      case 12ULL: 
        s_reg_6 = (sc_uint<32> ) ((sc_uint<24> )
                  SobelFilter_Add_33Ux33U_33U_4_17_out1.read());
        break;
      case 21ULL: 
        s_reg_6 = (sc_uint<32> ) (Gaussian_value_out1.read());
        break;
      case 40ULL: case 79ULL: 
        s_reg_6 = buffer_out1.read();
        break;
      case 44ULL: case 64ULL: case 81ULL: 
        s_reg_6 = (sc_uint<32> ) (SobelFilter_N_Mux_24_2_22_4_230_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_7(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_7 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_7 = SobelFilter_N_Mux_20_2_10_4_106_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_81(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_81 = SobelFilter_OrReduction_5U_1U_4_29_out1.read();
      break;
    case 20ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
        s_reg_81 = SobelFilter_OrReduction_5U_1U_4_29_out1.read();
      } else {
        if ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read() ) {
          s_reg_81 = SobelFilter_OrReduction_5U_1U_4_29_out1.read();
        } else {
          s_reg_81 = SobelFilter_LessThan_32Sx5S_1U_4_22_out1.read();
        }
      }
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_81_1(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 20ULL: 
      wire_s_reg_81_1 = SobelFilter_LessThan_32Sx5S_1U_4_22_out1.read();
      break;
    case 23ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        wire_s_reg_81_1 = s_reg_81.read();
      } 
      break;
    }
    break;
  }
}
// resource: mux_4bx6i1c
// resource: regr_en_4
void SobelFilter::drive_s_reg_83(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_83 = SobelFilter_Mul_2Ux2U_4U_4_46_out1.read();
      break;
    case 20ULL: 
      if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
        s_reg_83 = SobelFilter_Mul_2Ux2U_4U_4_46_out1.read();
      } else {
        if ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read() ) {
          s_reg_83 = SobelFilter_Mul_2Ux2U_4U_4_46_out1.read();
        } else {
          s_reg_83 = 0ULL;
        }
      }
      break;
    case 23ULL: 
      s_reg_83 = (sc_uint<4> )s_reg_5.read();
      break;
    case 36ULL: case 46ULL: 
      s_reg_83 = SobelFilter_Mul_2Ux2U_4U_4_180_out1.read();
      break;
    case 56ULL: case 66ULL: 
      s_reg_83 = SobelFilter_Mul_2Ux2U_4U_4_182_out1.read();
      break;
    case 76ULL: case 83ULL: 
      s_reg_83 = SobelFilter_Mul_2Ux2U_4U_4_184_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_sc_20
void SobelFilter::drive_s_reg_9(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_9 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state.read()) ) {
      case 19ULL: 
        s_reg_9 = SobelFilter_N_Mux_20_2_10_4_115_out1.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_92(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 20ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_92 = SobelFilter_Equal_5Ux3U_1U_4_59_out1.read();
      break;
    case 21ULL: 
      s_reg_92 = SobelFilter_Or_1Ux1U_1U_4_142_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_93(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 20ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_93 = SobelFilter_Equal_5Ux3U_1U_4_60_out1.read();
      break;
    case 21ULL: 
      s_reg_93 = SobelFilter_And_1Ux1U_1U_4_147_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_93_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 21ULL: 
      wire_s_reg_93_0 = SobelFilter_And_1Ux1U_1U_4_147_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_94(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 20ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_94 = SobelFilter_Equal_5Ux2U_1U_4_61_out1.read();
      break;
    case 22ULL: 
      s_reg_94 = SobelFilter_Or_1Ux1U_1U_4_142_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx2i0c
// resource: regr_en_1
void SobelFilter::drive_s_reg_95(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 18ULL: case 20ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
      s_reg_95 = SobelFilter_Equal_5Ux1U_1U_4_62_out1.read();
      break;
    case 22ULL: 
      s_reg_95 = SobelFilter_Not_1U_1U_4_154_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void SobelFilter::drive_wire_s_reg_95_0(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<7>)(global_state.read()) ) {
    case 22ULL: 
      wire_s_reg_95_0 = SobelFilter_Not_1U_1U_4_154_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_4bx10i9c
void SobelFilter::drive_expon_value_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h5fe.read()) ) {
  default:
    expon_value_in1 = 0ULL;
    break;
  case 1ULL: 
    expon_value_in1 = 1ULL;
    break;
  case 2ULL: 
    expon_value_in1 = 2ULL;
    break;
  case 3ULL: 
    expon_value_in1 = 3ULL;
    break;
  case 4ULL: 
    expon_value_in1 = 4ULL;
    break;
  case 5ULL: 
    expon_value_in1 = 5ULL;
    break;
  case 6ULL: 
    expon_value_in1 = 6ULL;
    break;
  case 7ULL: 
    expon_value_in1 = 7ULL;
    break;
  case 8ULL: 
    expon_value_in1 = 8ULL;
    break;
  case 9ULL: 
    expon_value_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_10_out1.read();
    break;
  }
}
// resource: mux_24bx3i3c
void SobelFilter::drive_expon_value_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_hba.read()) ) {
  default:
    expon_value_DIN = 219793ULL;
    break;
  case 1ULL: 
    expon_value_DIN = 480073ULL;
    break;
  case 2ULL: 
    expon_value_DIN = 1048576ULL;
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_expon_value_CE(){
  if ( stall0.read() ) {
    expon_value_CE = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h5ff.read() ) {
      expon_value_CE = 1ULL;
    } else {
      expon_value_CE = 0ULL;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_expon_value_RW(){
  if ( stall0.read() ) {
    expon_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h1ff.read() ) {
      expon_value_RW = 1ULL;
    } else {
      expon_value_RW = 0ULL;
    }
  }
}
// resource: mux_2bx2i0c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_3U_4_8_in2(){
  if ( gs_ctrl_do_filter_h2000.read() ) {
    SobelFilter_Add_2Ux1U_3U_4_8_in2 = (sc_uint<2> )s_reg_36.read();
  } else {
    SobelFilter_Add_2Ux1U_3U_4_8_in2 = s_reg_4_slice.read();
  }
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_8
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_8(){
  SobelFilter_Add_2Ux1U_3U_4_8_out1 = (/*cliff*/sc_uint<32>)(
                                      SobelFilter_Add_2Ux1U_3U_4_8_in2.read() + 
                                      1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_9
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_9(){
  SobelFilter_Mul_2Ux2U_4U_4_9_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_10
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_10(){
  SobelFilter_Add_4Ux2U_5S_4_10_out1 = (SobelFilter_Mul_2Ux2U_4U_4_9_out1.read()
                                        + (sc_uint<2> )s_reg_38.read());
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_11
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_11(){
  SobelFilter_LessThan_3Sx3S_1U_4_11_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                            s_reg_36.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_13
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_13(){
  SobelFilter_Add_2Ux1U_3U_4_13_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                       s_reg_38.read() + 1ULL);
}
// resource: mux_32bx6i0c
void SobelFilter::drive_SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h8000380000e70003.read()) ) {
  default:
    SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = (sc_int<32> )expon_value_out1
                                                 .read();
    break;
  case 1ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = (sc_int<32> )
                                                 Gaussian_value_out1.read();
    break;
  case 2ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = (sc_int<32> )((sc_uint<24> )
                                                 s_reg_6.read());
    break;
  case 3ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = (sc_int<32> ) (s_reg_6.read());
    break;
  case 4ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = (sc_int<32> ) (s_reg_198.read()
                                                 );
    break;
  case 5ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice = (sc_int<32> ) (s_reg_193.read()
                                                 );
    break;
  }
}
// resource: mux_32bx4i1c
void SobelFilter::drive_SobelFilter_Mul_33Sx32U_35S_4_15_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h8000380000e700030.read()) ) {
  default:
    SobelFilter_Mul_33Sx32U_35S_4_15_in1 = 1019ULL;
    break;
  case 1ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in1 = (sc_uint<32> ) (
                                           SobelFilter_N_Mux_20_16_19_4_143_out1
                                           .read());
    break;
  case 2ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in1 = (sc_uint<32> ) (
                                           SobelFilter_N_Mux_20_11_20_4_155_out1
                                           .read());
    break;
  case 3ULL: 
    SobelFilter_Mul_33Sx32U_35S_4_15_in1 = s_reg_186.read();
    break;
  }
}
// resource: SobelFilter_Mul_33Sx32U_35S_4  instance: SobelFilter_Mul_33Sx32U_35S_4_15
void SobelFilter::SobelFilter_Mul_33Sx32U_35S_4_15(){
  SobelFilter_Mul_33Sx32U_35S_4_15_out1 = ( (sc_int<33> )(sc_bv<33>)((sc_bv<1>)(
                                          0ULL), 
                                          (sc_bv<32>)(SobelFilter_Mul_33Sx32U_35S_4_15_in2_slice
                                          .read())) ) * 
                                          SobelFilter_Mul_33Sx32U_35S_4_15_in1
                                          .read();
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_16
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_16(){
  SobelFilter_LessThan_3Sx3S_1U_4_16_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                            s_reg_38.read() < (sc_int<3> )3LL);
}
// resource: mux_33bx7i0c
void SobelFilter::drive_SobelFilter_Add_33Ux33U_33U_4_17_in2(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h8001b80000d7001b.read()) ) {
  default:
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = (sc_uint<33> ) ((sc_uint<24> )s_reg_6
                                           .read());
    break;
  case 1ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = ( (sc_uint<33> )(sc_bv<33>)(
                                           (sc_bv<21>)((sc_uint<21> )
                                           o_result_data.read()), 
                                           (sc_bv<12>)(0ULL)) );
    break;
  case 2ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = ( (sc_uint<33> )(sc_bv<33>)(
                                           (sc_bv<21>)((sc_uint<21> )s_reg_131
                                           .read()), 
                                           (sc_bv<12>)(0ULL)) );
    break;
  case 3ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = ( (sc_uint<33> )(sc_bv<33>)(
                                           (sc_bv<21>)(s_reg_132.read()), 
                                           (sc_bv<12>)(0ULL)) );
    break;
  case 4ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = (sc_uint<33> ) ((sc_uint<32> )
                                           SobelFilter_Mul_33Sx32U_35S_4_15_out1
                                           .read());
    break;
  case 5ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = (sc_uint<33> ) ((sc_int<32> )(( (
                                           sc_uint<32> )(sc_bv<32>)((sc_bv<16>)(
                                           (sc_uint<16> )s_reg_132.read()), 
                                           (sc_bv<16>)(0ULL)) )));
    break;
  case 6ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in2 = (sc_uint<33> ) ((sc_int<32> )
                                           s_reg_165.read());
    break;
  }
}
// resource: mux_33bx6i0c
void SobelFilter::drive_SobelFilter_Add_33Ux33U_33U_4_17_in1(){
  switch( (sc_uint<3>)(gs_ctrl_do_filter_h8001b80000d7001b0.read()) ) {
  default:
    SobelFilter_Add_33Ux33U_33U_4_17_in1 = (sc_uint<33> ) ((sc_uint<14> )
                                           s_reg_132.read());
    break;
  case 1ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in1 = (sc_uint<33> )
                                           SobelFilter_Mul_33Sx32U_35S_4_15_out1
                                           .read();
    break;
  case 2ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in1 = (sc_uint<33> ) ((sc_int<32> )
                                           s_reg_131.read());
    break;
  case 3ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in1 = (sc_uint<33> ) ((sc_int<32> )
                                           s_reg_165.read());
    break;
  case 4ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in1 = (sc_uint<33> ) ((sc_int<32> )
                                           o_result_data.read());
    break;
  case 5ULL: 
    SobelFilter_Add_33Ux33U_33U_4_17_in1 = (sc_uint<33> ) ((sc_int<32> )(( (
                                           sc_uint<32> )(sc_bv<32>)((sc_bv<24>)(
                                           (sc_uint<24> )s_reg_6.read()), 
                                           (sc_bv<8>)(0ULL)) )));
    break;
  }
}
// resource: SobelFilter_Add_33Ux33U_33U_4  instance: SobelFilter_Add_33Ux33U_33U_4_17
void SobelFilter::SobelFilter_Add_33Ux33U_33U_4_17(){
  SobelFilter_Add_33Ux33U_33U_4_17_out1 = (SobelFilter_Add_33Ux33U_33U_4_17_in2
                                          .read() + 
                                          SobelFilter_Add_33Ux33U_33U_4_17_in1
                                          .read());
}
// resource: mux_4bx3i1c
void SobelFilter::drive_Gaussian_value_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h931000.read()) ) {
  default:
    Gaussian_value_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_10_out1.read();
    break;
  case 1ULL: 
    Gaussian_value_in1 = (sc_uint<4> )s_reg_5.read();
    break;
  case 2ULL: 
    Gaussian_value_in1 = 0ULL;
    break;
  }
}
// resource: mux_24bx2i0c
void SobelFilter::drive_Gaussian_value_DIN(){
  if ( gs_ctrl_do_filter_h10000.read() ) {
    Gaussian_value_DIN = (sc_uint<24> ) (SobelFilter_DivRem_4_19_out1.read()
                         .range(36,13));
  } else {
    Gaussian_value_DIN = (sc_uint<24> ) (((/*imp*/sc_uint<14> ) 
                         SobelFilter_Mul_33Sx32U_35S_4_15_out1.read().range(33,
                         20)));
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_Gaussian_value_CE(){
  if ( stall0.read() ) {
    Gaussian_value_CE = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_h931800.read()) ) {
    default:
      Gaussian_value_CE = 0ULL;
      break;
    case 1ULL: 
      Gaussian_value_CE = 1ULL;
      break;
    case 2ULL: 
      if ( !( (SobelFilter_LessThan_3Sx3S_1U_4_16_out1.read()||s_reg_39.read())
            ) ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_20_out1.read() ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 4ULL: 
      if ( !( (SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read()||
           SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read()) ) ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    case 5ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        Gaussian_value_CE = 1ULL;
      } else {
        Gaussian_value_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_Gaussian_value_RW(){
  if ( stall0.read() ) {
    Gaussian_value_RW = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h10800.read() ) {
      Gaussian_value_RW = 1ULL;
    } else {
      Gaussian_value_RW = 0ULL;
    }
  }
}
// resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_18
void SobelFilter::SobelFilter_Add_4Ux1U_5U_4_18(){
  SobelFilter_Add_4Ux1U_5U_4_18_out1 = (/*cliff*/sc_uint<32>)((sc_uint<4> )
                                       s_reg_5.read() + 1ULL);
}
void SobelFilter::drive_SobelFilter_DivRem_4_19_in1(){
  SobelFilter_DivRem_4_19_in1 = ( (sc_uint<49> )(sc_bv<49>)((sc_bv<24>)(
                                Gaussian_value_out1.read()), 
                                (sc_bv<25>)(0ULL)) );
}
void SobelFilter::drive_SobelFilter_DivRem_4_19_in2(){
  SobelFilter_DivRem_4_19_in2 = (sc_uint<24> )s_reg_6.read();
}
// resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_20
void SobelFilter::SobelFilter_LessThan_5Sx5S_1U_4_20(){
  SobelFilter_LessThan_5Sx5S_1U_4_20_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )
                                            s_reg_5.read() < (sc_int<5> )9LL);
}
// resource: mux_32bx3i1c
void SobelFilter::drive_SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h4000040800040.read()) ) {
  default:
    SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 = (sc_int<32> ) (s_reg_165
                                                   .read());
    break;
  case 1ULL: 
    SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 = (sc_int<32> ) (s_reg_50
                                                   .read());
    break;
  case 2ULL: 
    SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2 = 0LL;
    break;
  }
}
// resource: SobelFilter_GreaterThanEQ_32Sx4S_1U_4  instance: SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21
void SobelFilter::SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21(){
  SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1 = (/*imp*/sc_uint<1>)(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2
                                                  .read() >= (sc_int<4> )5LL);
}
// resource: mux_4bx2i2c
void SobelFilter::drive_SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice(){
  if ( gs_ctrl_do_filter_h100000.read() ) {
    SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice = 5LL;
  } else {
    SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice = -6LL;
  }
}
// resource: SobelFilter_LessThan_32Sx5S_1U_4  instance: SobelFilter_LessThan_32Sx5S_1U_4_22
void SobelFilter::SobelFilter_LessThan_32Sx5S_1U_4_22(){
  SobelFilter_LessThan_32Sx5S_1U_4_22_out1 = (/*imp*/sc_uint<1>)(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2
                                             .read() < ((/*imp*/sc_int<5> )(( (
                                             sc_int<5> )(sc_bv<5>)((sc_bv<1>)(
                                             0ULL), 
                                             (sc_bv<4>)((sc_int<4> )SobelFilter_LessThan_32Sx5S_1U_4_22_in1_slice
                                             .read())) ))));
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_23
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_23(){
  SobelFilter_And_1Ux1U_1U_4_23_out1 = SobelFilter_LessThan_32Sx5S_1U_4_22_out1
                                       .read() & SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_out1
                                       .read();
}
// resource: mux_6bx3i1c
void SobelFilter::drive_SobelFilter_Mul_6Sx2U_6S_4_24_in2(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h4000040800040.read()) ) {
  default:
    SobelFilter_Mul_6Sx2U_6S_4_24_in2 = (sc_int<6> )s_reg_165.read();
    break;
  case 1ULL: 
    SobelFilter_Mul_6Sx2U_6S_4_24_in2 = (sc_int<6> )s_reg_50.read();
    break;
  case 2ULL: 
    SobelFilter_Mul_6Sx2U_6S_4_24_in2 = 0LL;
    break;
  }
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_24
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_24(){
  SobelFilter_Mul_6Sx2U_6S_4_24_out1 = (/*cliff*/sc_int<32>)
                                       SobelFilter_Mul_6Sx2U_6S_4_24_in2.read()
                                        * 3ULL;
}
// resource: SobelFilter_Add_32Sx1U_32S_4  instance: SobelFilter_Add_32Sx1U_32S_4_25
void SobelFilter::SobelFilter_Add_32Sx1U_32S_4_25(){
  SobelFilter_Add_32Sx1U_32S_4_25_out1 = (/*cliff*/sc_int<32>)(SobelFilter_GreaterThanEQ_32Sx4S_1U_4_21_in2
                                         .read() + 1ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_2Ux1U_2U_4_26_in2(){
  if ( gs_ctrl_do_filter_h100000.read() ) {
    SobelFilter_Add_2Ux1U_2U_4_26_in2 = (sc_uint<2> )s_reg_36.read();
  } else {
    SobelFilter_Add_2Ux1U_2U_4_26_in2 = 0ULL;
  }
}
// resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_26
void SobelFilter::SobelFilter_Add_2Ux1U_2U_4_26(){
  SobelFilter_Add_2Ux1U_2U_4_26_out1 = (/*cliff*/sc_uint<32>)(
                                       SobelFilter_Add_2Ux1U_2U_4_26_in2.read()
                                        + 1ULL);
}
// resource: mux_2bx3i1c
void SobelFilter::drive_SobelFilter_Mul_2Ux2U_4U_4_46_in2(){
  if ( gs_ctrl_do_filter_h100000.read() ) {
    if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
      SobelFilter_Mul_2Ux2U_4U_4_46_in2 = (sc_uint<2> )s_reg_38.read();
    } else {
      SobelFilter_Mul_2Ux2U_4U_4_46_in2 = (sc_uint<2> )s_reg_36.read();
    }
  } else {
    SobelFilter_Mul_2Ux2U_4U_4_46_in2 = 0ULL;
  }
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_46
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_46(){
  SobelFilter_Mul_2Ux2U_4U_4_46_out1 = SobelFilter_Mul_2Ux2U_4U_4_46_in2.read()
                                        * 3ULL;
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_4Ux2U_5U_4_28_in1(){
  if ( gs_ctrl_do_filter_h100000.read() ) {
    if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
      SobelFilter_Add_4Ux2U_5U_4_28_in1 = s_reg_4_slice.read();
    } else {
      SobelFilter_Add_4Ux2U_5U_4_28_in1 = 0ULL;
    }
  } else {
    SobelFilter_Add_4Ux2U_5U_4_28_in1 = 0ULL;
  }
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_28
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_28(){
  SobelFilter_Add_4Ux2U_5U_4_28_out1 = (SobelFilter_Mul_2Ux2U_4U_4_46_out1
                                       .read() + 
                                       SobelFilter_Add_4Ux2U_5U_4_28_in1.read())
  ;
}
// resource: SobelFilter_OrReduction_5U_1U_4  instance: SobelFilter_OrReduction_5U_1U_4_29
void SobelFilter::SobelFilter_OrReduction_5U_1U_4_29(){
  SobelFilter_OrReduction_5U_1U_4_29_out1 = ((sc_uint<5>)
                                            SobelFilter_Add_4Ux2U_5U_4_28_out1
                                            .read()).or_reduce();
}
// resource: SobelFilter_Equal_5Ux4U_1U_4  instance: SobelFilter_Equal_5Ux4U_1U_4_47
void SobelFilter::SobelFilter_Equal_5Ux4U_1U_4_47(){
  SobelFilter_Equal_5Ux4U_1U_4_47_out1 = (SobelFilter_Add_4Ux2U_5U_4_28_out1
                                         .read() == 9ULL);
}
// resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_59
void SobelFilter::SobelFilter_Equal_5Ux3U_1U_4_59(){
  SobelFilter_Equal_5Ux3U_1U_4_59_out1 = (SobelFilter_Add_4Ux2U_5U_4_28_out1
                                         .read() == 7ULL);
}
// resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_60
void SobelFilter::SobelFilter_Equal_5Ux3U_1U_4_60(){
  SobelFilter_Equal_5Ux3U_1U_4_60_out1 = (SobelFilter_Add_4Ux2U_5U_4_28_out1
                                         .read() == 6ULL);
}
// resource: SobelFilter_Equal_5Ux2U_1U_4  instance: SobelFilter_Equal_5Ux2U_1U_4_61
void SobelFilter::SobelFilter_Equal_5Ux2U_1U_4_61(){
  SobelFilter_Equal_5Ux2U_1U_4_61_out1 = (SobelFilter_Add_4Ux2U_5U_4_28_out1
                                         .read() == 3ULL);
}
// resource: SobelFilter_Equal_5Ux1U_1U_4  instance: SobelFilter_Equal_5Ux1U_1U_4_62
void SobelFilter::SobelFilter_Equal_5Ux1U_1U_4_62(){
  SobelFilter_Equal_5Ux1U_1U_4_62_out1 = (SobelFilter_Add_4Ux2U_5U_4_28_out1
                                         .read() == 1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_65
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_65(){
  SobelFilter_Mul_2Ux2U_4U_4_65_out1 = (sc_uint<2> )s_reg_38.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_79
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_79(){
  SobelFilter_Add_4Ux2U_5U_4_79_out1 = (SobelFilter_Mul_2Ux2U_4U_4_65_out1
                                       .read() + s_reg_4_slice.read());
}
// resource: SobelFilter_Add_2Ux1U_2U_4  instance: SobelFilter_Add_2Ux1U_2U_4_91
void SobelFilter::SobelFilter_Add_2Ux1U_2U_4_91(){
  SobelFilter_Add_2Ux1U_2U_4_91_out1 = (/*cliff*/sc_uint<32>)(s_reg_4_slice
                                       .read() + 1ULL);
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_92
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_92(){
  SobelFilter_Add_4Ux2U_5U_4_92_out1 = (s_reg_83.read() + s_reg_4_slice.read());
}
// resource: SobelFilter_Equal_5Ux4U_1U_4  instance: SobelFilter_Equal_5Ux4U_1U_4_93
void SobelFilter::SobelFilter_Equal_5Ux4U_1U_4_93(){
  SobelFilter_Equal_5Ux4U_1U_4_93_out1 = ((sc_uint<5> )s_reg_5.read() == 8ULL);
}
// resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_94
void SobelFilter::SobelFilter_Equal_5Ux3U_1U_4_94(){
  SobelFilter_Equal_5Ux3U_1U_4_94_out1 = ((sc_uint<5> )s_reg_5.read() == 5ULL);
}
// resource: SobelFilter_Equal_5Ux3U_1U_4  instance: SobelFilter_Equal_5Ux3U_1U_4_95
void SobelFilter::SobelFilter_Equal_5Ux3U_1U_4_95(){
  SobelFilter_Equal_5Ux3U_1U_4_95_out1 = ((sc_uint<5> )s_reg_5.read() == 4ULL);
}
// resource: SobelFilter_Equal_5Ux2U_1U_4  instance: SobelFilter_Equal_5Ux2U_1U_4_96
void SobelFilter::SobelFilter_Equal_5Ux2U_1U_4_96(){
  SobelFilter_Equal_5Ux2U_1U_4_96_out1 = ((sc_uint<5> )s_reg_5.read() == 2ULL);
}
// resource: SobelFilter_OrReduction_5U_1U_4  instance: SobelFilter_OrReduction_5U_1U_4_97
void SobelFilter::SobelFilter_OrReduction_5U_1U_4_97(){
  SobelFilter_OrReduction_5U_1U_4_97_out1 = ((sc_uint<5>)( (sc_uint<5> )s_reg_5
                                            .read() )).or_reduce();
}
// resource: SobelFilter_N_Mux_24_2_0_4
void SobelFilter::SobelFilter_N_Mux_24_2_0_4_98(){
  if ( i_rgb_m_stall_reg_full.read() ) {
    SobelFilter_N_Mux_24_2_0_4_98_out1 = i_rgb_m_stall_reg.read();
  } else {
    SobelFilter_N_Mux_24_2_0_4_98_out1 = i_rgb_data.read();
  }
}
void SobelFilter::drive_SobelFilter_N_Mux_20_2_10_4_99_in2(){
  SobelFilter_N_Mux_20_2_10_4_99_in2 = ( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)((
                                       sc_uint<8> )
                                       SobelFilter_N_Mux_24_2_0_4_98_out1.read()
                                       ), 
                                       (sc_bv<12>)(0ULL)) );
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_99(){
  if ( s_reg_126.read() ) {
    SobelFilter_N_Mux_20_2_10_4_99_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_99_out1 = s_reg_7.read();
  }
}
void SobelFilter::drive_SobelFilter_N_Mux_20_3_13_4_100_in2(){
  SobelFilter_N_Mux_20_3_13_4_100_in2 = ( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)(
                                        SobelFilter_N_Mux_24_2_0_4_98_out1
                                        .read().range(15,8)), 
                                        (sc_bv<12>)(0ULL)) );
}
// resource: SobelFilter_N_Mux_20_3_13_4
void SobelFilter::SobelFilter_N_Mux_20_3_13_4_100(){
  switch( (sc_uint<5> )s_reg_5.read() ) {
  default:
    SobelFilter_N_Mux_20_3_13_4_100_out1 = s_reg_23.read();
    break;
  case 6ULL: 
    SobelFilter_N_Mux_20_3_13_4_100_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 15ULL: 
    SobelFilter_N_Mux_20_3_13_4_100_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_3_14_4
void SobelFilter::SobelFilter_N_Mux_20_3_14_4_101(){
  switch( (sc_uint<5> )s_reg_5.read() ) {
  default:
    SobelFilter_N_Mux_20_3_14_4_101_out1 = s_reg_22.read();
    break;
  case 5ULL: 
    SobelFilter_N_Mux_20_3_14_4_101_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 14ULL: 
    SobelFilter_N_Mux_20_3_14_4_101_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_3_15_4
void SobelFilter::SobelFilter_N_Mux_20_3_15_4_102(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_92_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_15_4_102_out1 = s_reg_21.read();
    break;
  case 4ULL: 
    SobelFilter_N_Mux_20_3_15_4_102_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 13ULL: 
    SobelFilter_N_Mux_20_3_15_4_102_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_3_16_4
void SobelFilter::SobelFilter_N_Mux_20_3_16_4_103(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_16_4_103_out1 = s_reg_20.read();
    break;
  case 3ULL: 
    SobelFilter_N_Mux_20_3_16_4_103_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 12ULL: 
    SobelFilter_N_Mux_20_3_16_4_103_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_3_17_4
void SobelFilter::SobelFilter_N_Mux_20_3_17_4_104(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_17_4_104_out1 = s_reg_19.read();
    break;
  case 2ULL: 
    SobelFilter_N_Mux_20_3_17_4_104_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 11ULL: 
    SobelFilter_N_Mux_20_3_17_4_104_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_3_18_4
void SobelFilter::SobelFilter_N_Mux_20_3_18_4_105(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_18_4_105_out1 = s_reg_18.read();
    break;
  case 1ULL: 
    SobelFilter_N_Mux_20_3_18_4_105_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 10ULL: 
    SobelFilter_N_Mux_20_3_18_4_105_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_106(){
  if ( s_reg_81.read() ) {
    SobelFilter_N_Mux_20_2_10_4_106_out1 = SobelFilter_N_Mux_20_2_10_4_99_out1
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_106_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_107(){
  if ( SobelFilter_Equal_5Ux4U_1U_4_93_out1.read() ) {
    SobelFilter_N_Mux_20_2_10_4_107_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_107_out1 = s_reg_17.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_108(){
  if ( s_reg_92.read() ) {
    SobelFilter_N_Mux_20_2_10_4_108_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_108_out1 = s_reg_16.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_109(){
  if ( s_reg_93.read() ) {
    SobelFilter_N_Mux_20_2_10_4_109_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_109_out1 = s_reg_15.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_110(){
  if ( SobelFilter_Equal_5Ux3U_1U_4_94_out1.read() ) {
    SobelFilter_N_Mux_20_2_10_4_110_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_110_out1 = s_reg_14.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_111(){
  if ( SobelFilter_Equal_5Ux3U_1U_4_95_out1.read() ) {
    SobelFilter_N_Mux_20_2_10_4_111_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_111_out1 = s_reg_13.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_112(){
  if ( s_reg_94.read() ) {
    SobelFilter_N_Mux_20_2_10_4_112_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_112_out1 = s_reg_12.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_113(){
  if ( SobelFilter_Equal_5Ux2U_1U_4_96_out1.read() ) {
    SobelFilter_N_Mux_20_2_10_4_113_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_113_out1 = s_reg_11.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_114(){
  if ( s_reg_95.read() ) {
    SobelFilter_N_Mux_20_2_10_4_114_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_114_out1 = s_reg_10.read();
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_115(){
  if ( SobelFilter_OrReduction_5U_1U_4_97_out1.read() ) {
    SobelFilter_N_Mux_20_2_10_4_115_out1 = s_reg_9.read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_115_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
  }
}
// resource: SobelFilter_N_Mux_20_3_9_4
void SobelFilter::SobelFilter_N_Mux_20_3_9_4_116(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_9_4_116_out1 = s_reg_24.read();
    break;
  case 9ULL: 
    SobelFilter_N_Mux_20_3_9_4_116_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 18ULL: 
    SobelFilter_N_Mux_20_3_9_4_116_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
void SobelFilter::drive_SobelFilter_N_Mux_20_4_3_4_117_in2(){
  SobelFilter_N_Mux_20_4_3_4_117_in2 = ( (sc_uint<20> )(sc_bv<20>)((sc_bv<8>)(
                                       SobelFilter_N_Mux_24_2_0_4_98_out1.read()
                                       .range(23,16)), 
                                       (sc_bv<12>)(0ULL)) );
}
// resource: SobelFilter_N_Mux_20_4_3_4
void SobelFilter::SobelFilter_N_Mux_20_4_3_4_117(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_3_4_117_out1 = s_reg_32.read();
    break;
  case 6ULL: 
    SobelFilter_N_Mux_20_4_3_4_117_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 15ULL: 
    SobelFilter_N_Mux_20_4_3_4_117_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 24ULL: 
    SobelFilter_N_Mux_20_4_3_4_117_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_4_4
void SobelFilter::SobelFilter_N_Mux_20_4_4_4_118(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_4_4_118_out1 = s_reg_31.read();
    break;
  case 5ULL: 
    SobelFilter_N_Mux_20_4_4_4_118_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 14ULL: 
    SobelFilter_N_Mux_20_4_4_4_118_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 23ULL: 
    SobelFilter_N_Mux_20_4_4_4_118_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_5_4
void SobelFilter::SobelFilter_N_Mux_20_4_5_4_119(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_5_4_119_out1 = s_reg_30.read();
    break;
  case 4ULL: 
    SobelFilter_N_Mux_20_4_5_4_119_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 13ULL: 
    SobelFilter_N_Mux_20_4_5_4_119_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 22ULL: 
    SobelFilter_N_Mux_20_4_5_4_119_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_6_4
void SobelFilter::SobelFilter_N_Mux_20_4_6_4_120(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_6_4_120_out1 = s_reg_29.read();
    break;
  case 3ULL: 
    SobelFilter_N_Mux_20_4_6_4_120_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 12ULL: 
    SobelFilter_N_Mux_20_4_6_4_120_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 21ULL: 
    SobelFilter_N_Mux_20_4_6_4_120_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_7_4
void SobelFilter::SobelFilter_N_Mux_20_4_7_4_121(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_7_4_121_out1 = s_reg_28.read();
    break;
  case 2ULL: 
    SobelFilter_N_Mux_20_4_7_4_121_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 11ULL: 
    SobelFilter_N_Mux_20_4_7_4_121_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 20ULL: 
    SobelFilter_N_Mux_20_4_7_4_121_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_8_4
void SobelFilter::SobelFilter_N_Mux_20_4_8_4_122(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_8_4_122_out1 = s_reg_27.read();
    break;
  case 1ULL: 
    SobelFilter_N_Mux_20_4_8_4_122_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 10ULL: 
    SobelFilter_N_Mux_20_4_8_4_122_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 19ULL: 
    SobelFilter_N_Mux_20_4_8_4_122_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_2_10_4
void SobelFilter::SobelFilter_N_Mux_20_2_10_4_123(){
  if ( s_reg_81.read() ) {
    SobelFilter_N_Mux_20_2_10_4_123_out1 = SobelFilter_N_Mux_20_3_9_4_116_out1
                                           .read();
  } else {
    SobelFilter_N_Mux_20_2_10_4_123_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                           .read();
  }
}
// resource: SobelFilter_N_Mux_20_3_11_4
void SobelFilter::SobelFilter_N_Mux_20_3_11_4_124(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_11_4_124_out1 = s_reg_26.read();
    break;
  case 8ULL: 
    SobelFilter_N_Mux_20_3_11_4_124_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 17ULL: 
    SobelFilter_N_Mux_20_3_11_4_124_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_3_12_4
void SobelFilter::SobelFilter_N_Mux_20_3_12_4_125(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_3_12_4_125_out1 = s_reg_25.read();
    break;
  case 7ULL: 
    SobelFilter_N_Mux_20_3_12_4_125_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                           .read();
    break;
  case 16ULL: 
    SobelFilter_N_Mux_20_3_12_4_125_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                           .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_1_4
void SobelFilter::SobelFilter_N_Mux_20_4_1_4_126(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_1_4_126_out1 = s_reg_34.read();
    break;
  case 8ULL: 
    SobelFilter_N_Mux_20_4_1_4_126_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 17ULL: 
    SobelFilter_N_Mux_20_4_1_4_126_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 26ULL: 
    SobelFilter_N_Mux_20_4_1_4_126_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_N_Mux_20_4_2_4
void SobelFilter::SobelFilter_N_Mux_20_4_2_4_127(){
  switch( (sc_uint<5>)(SobelFilter_Add_4Ux2U_5U_4_79_out1.read()) ) {
  default:
    SobelFilter_N_Mux_20_4_2_4_127_out1 = s_reg_33.read();
    break;
  case 7ULL: 
    SobelFilter_N_Mux_20_4_2_4_127_out1 = SobelFilter_N_Mux_20_4_3_4_117_in2
                                          .read();
    break;
  case 16ULL: 
    SobelFilter_N_Mux_20_4_2_4_127_out1 = SobelFilter_N_Mux_20_3_13_4_100_in2
                                          .read();
    break;
  case 25ULL: 
    SobelFilter_N_Mux_20_4_2_4_127_out1 = SobelFilter_N_Mux_20_2_10_4_99_in2
                                          .read();
    break;
  }
}
// resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_128
void SobelFilter::SobelFilter_LessThan_2Ux2U_1U_4_128(){
  SobelFilter_LessThan_2Ux2U_1U_4_128_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )
                                             s_reg_4_slice.read() < (sc_uint<2> 
                                             )3ULL);
}
// resource: SobelFilter_LessThan_2Ux2U_1U_4  instance: SobelFilter_LessThan_2Ux2U_1U_4_129
void SobelFilter::SobelFilter_LessThan_2Ux2U_1U_4_129(){
  SobelFilter_LessThan_2Ux2U_1U_4_129_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )
                                             s_reg_36.read() < (sc_uint<2> )3ULL
                                             );
}
// resource: SobelFilter_Sub_6Sx4U_6S_4  instance: SobelFilter_Sub_6Sx4U_6S_4_130
void SobelFilter::SobelFilter_Sub_6Sx4U_6S_4_130(){
  SobelFilter_Sub_6Sx4U_6S_4_130_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_165.read() - 10ULL;
}
// resource: SobelFilter_Sub_6Sx3U_6S_4  instance: SobelFilter_Sub_6Sx3U_6S_4_131
void SobelFilter::SobelFilter_Sub_6Sx3U_6S_4_131(){
  SobelFilter_Sub_6Sx3U_6S_4_131_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_165.read() - 5ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_133
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_133(){
  SobelFilter_Mul_6Sx2U_6S_4_133_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_165.read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_134
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_134(){
  SobelFilter_Mul_6Sx2U_6S_4_134_out1 = (/*cliff*/sc_int<32>)
                                        SobelFilter_Sub_6Sx4U_6S_4_130_out1
                                        .read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_135
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_135(){
  SobelFilter_Mul_6Sx2U_6S_4_135_out1 = (/*cliff*/sc_int<32>)
                                        SobelFilter_Sub_6Sx3U_6S_4_131_out1
                                        .read() * 3ULL;
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_136
void SobelFilter::SobelFilter_Not_1U_1U_4_136(){
  SobelFilter_Not_1U_1U_4_136_out1 = !SobelFilter_LessThan_32Sx5S_1U_4_22_out1
                                     .read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_139
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_139(){
  SobelFilter_And_1Ux1U_1U_4_139_out1 = SobelFilter_Not_1U_1U_4_136_out1.read()
                                         & s_reg_39.read();
}
// resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_140
void SobelFilter::SobelFilter_Add_6Sx2U_6S_4_140(){
  SobelFilter_Add_6Sx2U_6S_4_140_out1 = (/*cliff*/sc_int<32>)(
                                        SobelFilter_Mul_6Sx2U_6S_4_134_out1
                                        .read() + 2ULL);
}
// resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_141
void SobelFilter::SobelFilter_Add_6Sx1U_6S_4_141(){
  SobelFilter_Add_6Sx1U_6S_4_141_out1 = (/*cliff*/sc_int<32>)(
                                        SobelFilter_Mul_6Sx2U_6S_4_135_out1
                                        .read() + 1ULL);
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_142
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_142(){
  SobelFilter_Or_1Ux1U_1U_4_142_out1 = s_reg_39.read() | s_reg_81.read();
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in17(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in17 = s_reg_32.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in17 = s_reg_23.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in16(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in16 = s_reg_31.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in16 = s_reg_22.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in15(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in15 = s_reg_30.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in15 = s_reg_21.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in14(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in14 = s_reg_29.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in14 = s_reg_20.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in13(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in13 = s_reg_28.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in13 = s_reg_19.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in12(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in12 = s_reg_27.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in12 = s_reg_18.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in11(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in11 = s_reg_24.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in11 = s_reg_7.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in10(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in10 = s_reg_26.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in10 = s_reg_17.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in9(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in9 = s_reg_25.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in9 = s_reg_16.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in8(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in8 = s_reg_23.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in8 = s_reg_15.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in7(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in7 = s_reg_22.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in7 = s_reg_14.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in6(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in6 = s_reg_21.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in6 = s_reg_13.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in5(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in5 = s_reg_20.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in5 = s_reg_12.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in4(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in4 = s_reg_19.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in4 = s_reg_11.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in3(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in3 = s_reg_18.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in3 = s_reg_10.read();
  }
}
// resource: mux_20bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_in2(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_in2 = s_reg_7.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_in2 = s_reg_9.read();
  }
}
// resource: mux_4bx2i0c
void SobelFilter::drive_SobelFilter_N_Mux_20_16_19_4_143_ctrl1(){
  if ( gs_ctrl_do_filter_h400000.read() ) {
    SobelFilter_N_Mux_20_16_19_4_143_ctrl1 = (sc_uint<4> )s_reg_133.read();
  } else {
    SobelFilter_N_Mux_20_16_19_4_143_ctrl1 = s_reg_83.read();
  }
}
// resource: SobelFilter_N_Mux_20_16_19_4
void SobelFilter::SobelFilter_N_Mux_20_16_19_4_143(){
  switch( (sc_uint<4>)(SobelFilter_N_Mux_20_16_19_4_143_ctrl1.read()) ) {
  default:
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in17
                                            .read();
    break;
  case 0ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in2
                                            .read();
    break;
  case 1ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in3
                                            .read();
    break;
  case 2ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in4
                                            .read();
    break;
  case 3ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in5
                                            .read();
    break;
  case 4ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in6
                                            .read();
    break;
  case 5ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in7
                                            .read();
    break;
  case 6ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in8
                                            .read();
    break;
  case 7ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in9
                                            .read();
    break;
  case 8ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in10
                                            .read();
    break;
  case 9ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in11
                                            .read();
    break;
  case 10ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in12
                                            .read();
    break;
  case 11ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in13
                                            .read();
    break;
  case 12ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in14
                                            .read();
    break;
  case 13ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in15
                                            .read();
    break;
  case 14ULL: 
    SobelFilter_N_Mux_20_16_19_4_143_out1 = SobelFilter_N_Mux_20_16_19_4_143_in16
                                            .read();
    break;
  }
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_144
void SobelFilter::SobelFilter_Not_1U_1U_4_144(){
  SobelFilter_Not_1U_1U_4_144_out1 = !s_reg_81.read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_147
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_147(){
  SobelFilter_And_1Ux1U_1U_4_147_out1 = SobelFilter_Not_1U_1U_4_144_out1.read()
                                         & s_reg_39.read();
}
// resource: SobelFilter_Add_4Ux1U_5U_4  instance: SobelFilter_Add_4Ux1U_5U_4_148
void SobelFilter::SobelFilter_Add_4Ux1U_5U_4_148(){
  SobelFilter_Add_4Ux1U_5U_4_148_out1 = (/*cliff*/sc_uint<32>)((sc_uint<4> )
                                        s_reg_133.read() + 1ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_154
void SobelFilter::SobelFilter_Not_1U_1U_4_154(){
  SobelFilter_Not_1U_1U_4_154_out1 = !SobelFilter_Or_1Ux1U_1U_4_142_out1.read();
}
// resource: SobelFilter_N_Mux_20_11_20_4
void SobelFilter::SobelFilter_N_Mux_20_11_20_4_155(){
  switch( (sc_uint<4> )s_reg_133.read() ) {
  default:
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_10.read();
    break;
  case 0ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_24.read();
    break;
  case 1ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_27.read();
    break;
  case 2ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_28.read();
    break;
  case 3ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_29.read();
    break;
  case 4ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_30.read();
    break;
  case 5ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_31.read();
    break;
  case 6ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_32.read();
    break;
  case 7ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_33.read();
    break;
  case 8ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_34.read();
    break;
  case 14ULL: 
    SobelFilter_N_Mux_20_11_20_4_155_out1 = s_reg_9.read();
    break;
  }
}
// resource: SobelFilter_LessThan_5Sx5S_1U_4  instance: SobelFilter_LessThan_5Sx5S_1U_4_156
void SobelFilter::SobelFilter_LessThan_5Sx5S_1U_4_156(){
  SobelFilter_LessThan_5Sx5S_1U_4_156_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )
                                             s_reg_5.read() < (sc_int<5> )9LL);
}
// resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_161
void SobelFilter::SobelFilter_Add_6Ux4U_7S_4_161(){
  SobelFilter_Add_6Ux4U_7S_4_161_out1 = (s_reg_125.read() + 15ULL);
}
// resource: mux_6bx17i0c
void SobelFilter::drive_buffer_in1(){
  switch( (sc_uint<4>)(gs_ctrl_do_filter_h58f8058fbe0cdf80.read()) ) {
  default:
    buffer_in1 = s_reg_49.read();
    break;
  case 1ULL: 
    buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux4U_7S_4_161_out1.read();
    break;
  case 2ULL: 
    buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux5U_7S_4_169_out1.read();
    break;
  case 3ULL: 
    if ( (s_reg_93.read() && wire_s_reg_93_0.read()) ) {
      buffer_in1 = (sc_uint<6> ) (SobelFilter_Add_6Sx1U_6S_4_173_out1.read());
    } else {
      buffer_in1 = (sc_uint<6> ) (SobelFilter_Add_6Sx2U_6S_4_172_out1.read());
    }
    break;
  case 4ULL: 
    if ( (s_reg_93.read() && wire_s_reg_126_0.read()) ) {
      buffer_in1 = s_reg_152.read();
    } else {
      buffer_in1 = s_reg_49.read();
    }
    break;
  case 5ULL: 
    if ( (s_reg_93.read() && wire_s_reg_126_0.read()) ) {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux5U_7S_4_179_out1.read();
    } else {
      buffer_in1 = (sc_uint<6> )SobelFilter_Add_6Ux5U_7S_4_178_out1.read();
    }
    break;
  case 6ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_5Ux3U_5U_4_207_out1
                 .read());
    break;
  case 7ULL: 
    buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_213_out1.read();
    break;
  case 8ULL: 
    buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_231_out1.read();
    break;
  case 9ULL: 
    buffer_in1 = (sc_uint<6> ) ((sc_uint<5> )SobelFilter_Add_5Ux2U_5U_4_209_out1
                 .read());
    break;
  case 10ULL: 
    buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_215_out1.read();
    break;
  case 11ULL: 
    buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_232_out1.read();
    break;
  case 12ULL: 
    buffer_in1 = (sc_uint<6> ) (SobelFilter_Add_4Ux2U_5U_4_186_out1.read());
    break;
  case 13ULL: 
    buffer_in1 = SobelFilter_Add_5Ux4U_6U_4_205_out1.read();
    break;
  case 14ULL: 
    buffer_in1 = SobelFilter_Add_5Ux5U_6U_4_211_out1.read();
    break;
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_buffer_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_hd8000db6000d80.read()) ) {
  default:
    buffer_DIN = (sc_uint<32> ) (o_result_data.read().range(20,12));
    break;
  case 1ULL: 
    buffer_DIN = (sc_uint<32> ) (s_reg_131.read().range(20,12));
    break;
  case 2ULL: 
    buffer_DIN = (sc_uint<32> ) (s_reg_132.read().range(20,12));
    break;
  }
}
// resource: mux_1bx8i2c
void SobelFilter::drive_buffer_CE(){
  if ( stall0.read() ) {
    buffer_CE = 0ULL;
  } else {
    switch( (sc_uint<4>)(gs_ctrl_do_filter_h58f8058fbf8cdf80.read()) ) {
    default:
      buffer_CE = 0ULL;
      break;
    case 1ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        buffer_CE = 0ULL;
      } else {
        /* state36 */
        switch( (sc_uint<32>)(s_reg_50.read()) ) {
        default:
          buffer_CE = 0ULL;
          break;
        case 13ULL: case 14ULL: case 15ULL: 
          if ( (s_reg_81.read() && wire_s_reg_81_1.read()) ) {
            buffer_CE = s_reg_81.read();
          } else {
            buffer_CE = 0ULL;
          }
          break;
        }
      }
      break;
    case 2ULL: 
      if ( (s_reg_81.read() && wire_s_reg_81_1.read()) ) {
        buffer_CE = s_reg_81.read();
      } else {
        buffer_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( (s_reg_93.read() && wire_s_reg_93_0.read()) ) {
        buffer_CE = s_reg_93.read();
      } else {
        if ( (s_reg_95.read() && wire_s_reg_95_0.read()) ) {
          buffer_CE = s_reg_95.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 4ULL: 
      if ( (s_reg_93.read() && wire_s_reg_126_0.read()) ) {
        buffer_CE = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_174_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_174_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 5ULL: 
      if ( (s_reg_93.read() && wire_s_reg_126_0.read()) ) {
        buffer_CE = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_177_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_177_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 6ULL: 
      if ( ((s_reg_93.read() && s_reg_126.read()) && wire_s_reg_126_0.read()) )
       {
        buffer_CE = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_174_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_174_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 7ULL: 
      if ( ((s_reg_93.read() && s_reg_126.read()) && wire_s_reg_126_0.read()) )
       {
        buffer_CE = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_177_out1.read()) ) {
          buffer_CE = SobelFilter_Not_1U_1U_4_177_out1.read();
        } else {
          buffer_CE = 0ULL;
        }
      }
      break;
    case 8ULL: 
      buffer_CE = 1ULL;
      break;
    case 9ULL: 
      if ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1.read() ) {
        buffer_CE = 1ULL;
      } else {
        buffer_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx7i1c
void SobelFilter::drive_buffer_RW(){
  if ( stall0.read() ) {
    buffer_RW = 0ULL;
  } else {
    switch( (sc_uint<3>)(gs_ctrl_do_filter_hf8000fbf800f80.read()) ) {
    default:
      buffer_RW = 0ULL;
      break;
    case 1ULL: 
      if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
        buffer_RW = 0ULL;
      } else {
        /* state36 */
        switch( (sc_uint<32>)(s_reg_50.read()) ) {
        default:
          buffer_RW = 0ULL;
          break;
        case 13ULL: case 14ULL: case 15ULL: 
          if ( (s_reg_81.read() && wire_s_reg_81_1.read()) ) {
            buffer_RW = s_reg_81.read();
          } else {
            buffer_RW = 0ULL;
          }
          break;
        }
      }
      break;
    case 2ULL: 
      if ( (s_reg_81.read() && wire_s_reg_81_1.read()) ) {
        buffer_RW = s_reg_81.read();
      } else {
        buffer_RW = 0ULL;
      }
      break;
    case 3ULL: 
      if ( (s_reg_93.read() && wire_s_reg_93_0.read()) ) {
        buffer_RW = s_reg_93.read();
      } else {
        if ( (s_reg_95.read() && wire_s_reg_95_0.read()) ) {
          buffer_RW = s_reg_95.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 4ULL: 
      if ( (s_reg_93.read() && wire_s_reg_126_0.read()) ) {
        buffer_RW = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_174_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_174_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 5ULL: 
      if ( (s_reg_93.read() && wire_s_reg_126_0.read()) ) {
        buffer_RW = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_177_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_177_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 6ULL: 
      if ( ((s_reg_93.read() && s_reg_126.read()) && wire_s_reg_126_0.read()) )
       {
        buffer_RW = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_174_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_174_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    case 7ULL: 
      if ( ((s_reg_93.read() && s_reg_126.read()) && wire_s_reg_126_0.read()) )
       {
        buffer_RW = s_reg_126.read();
      } else {
        if ( (s_reg_95.read() && SobelFilter_Not_1U_1U_4_177_out1.read()) ) {
          buffer_RW = SobelFilter_Not_1U_1U_4_177_out1.read();
        } else {
          buffer_RW = 0ULL;
        }
      }
      break;
    }
  }
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_164
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_164(){
  SobelFilter_Mul_6Sx2U_6S_4_164_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_165.read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_165
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_165(){
  SobelFilter_Mul_6Sx2U_6S_4_165_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_49.read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_166
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_166(){
  SobelFilter_Mul_6Sx2U_6S_4_166_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )s_reg_5
                                        .read() * 3ULL;
}
// resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_167
void SobelFilter::SobelFilter_Add_6Ux4U_7S_4_167(){
  SobelFilter_Add_6Ux4U_7S_4_167_out1 = (s_reg_125.read() + 15ULL);
}
// resource: SobelFilter_Add_6Ux4U_7S_4  instance: SobelFilter_Add_6Ux4U_7S_4_168
void SobelFilter::SobelFilter_Add_6Ux4U_7S_4_168(){
  SobelFilter_Add_6Ux4U_7S_4_168_out1 = (s_reg_125.read() + 15ULL);
}
// resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_169
void SobelFilter::SobelFilter_Add_6Ux5U_7S_4_169(){
  SobelFilter_Add_6Ux5U_7S_4_169_out1 = (s_reg_49.read() + 30ULL);
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_170
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_170(){
  SobelFilter_Mul_6Sx2U_6S_4_170_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_133.read() * 3ULL;
}
// resource: SobelFilter_Mul_6Sx2U_6S_4  instance: SobelFilter_Mul_6Sx2U_6S_4_171
void SobelFilter::SobelFilter_Mul_6Sx2U_6S_4_171(){
  SobelFilter_Mul_6Sx2U_6S_4_171_out1 = (/*cliff*/sc_int<32>)(sc_int<6> )
                                        s_reg_147.read() * 3ULL;
}
// resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_172
void SobelFilter::SobelFilter_Add_6Sx2U_6S_4_172(){
  SobelFilter_Add_6Sx2U_6S_4_172_out1 = (/*cliff*/sc_int<32>)(
                                        SobelFilter_Mul_6Sx2U_6S_4_170_out1
                                        .read() + 2ULL);
}
// resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_173
void SobelFilter::SobelFilter_Add_6Sx1U_6S_4_173(){
  SobelFilter_Add_6Sx1U_6S_4_173_out1 = (/*cliff*/sc_int<32>)(
                                        SobelFilter_Mul_6Sx2U_6S_4_171_out1
                                        .read() + 1ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_174
void SobelFilter::SobelFilter_Not_1U_1U_4_174(){
  SobelFilter_Not_1U_1U_4_174_out1 = !s_reg_92.read();
}
// resource: SobelFilter_Add_6Sx2U_6S_4  instance: SobelFilter_Add_6Sx2U_6S_4_175
void SobelFilter::SobelFilter_Add_6Sx2U_6S_4_175(){
  SobelFilter_Add_6Sx2U_6S_4_175_out1 = (/*cliff*/sc_int<32>)((sc_int<6> )
                                        s_reg_125.read() + 2ULL);
}
// resource: SobelFilter_Add_6Sx1U_6S_4  instance: SobelFilter_Add_6Sx1U_6S_4_176
void SobelFilter::SobelFilter_Add_6Sx1U_6S_4_176(){
  SobelFilter_Add_6Sx1U_6S_4_176_out1 = (/*cliff*/sc_int<32>)((sc_int<6> )
                                        s_reg_5.read() + 1ULL);
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_177
void SobelFilter::SobelFilter_Not_1U_1U_4_177(){
  SobelFilter_Not_1U_1U_4_177_out1 = !s_reg_94.read();
}
// resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_178
void SobelFilter::SobelFilter_Add_6Ux5U_7S_4_178(){
  SobelFilter_Add_6Ux5U_7S_4_178_out1 = (s_reg_49.read() + 30ULL);
}
// resource: SobelFilter_Add_6Ux5U_7S_4  instance: SobelFilter_Add_6Ux5U_7S_4_179
void SobelFilter::SobelFilter_Add_6Ux5U_7S_4_179(){
  SobelFilter_Add_6Ux5U_7S_4_179_out1 = (s_reg_125.read() + 30ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Mul_2Ux2U_4U_4_180_in2(){
  if ( gs_ctrl_do_filter_h400000000000.read() ) {
    SobelFilter_Mul_2Ux2U_4U_4_180_in2 = (sc_uint<2> )s_reg_36.read();
  } else {
    SobelFilter_Mul_2Ux2U_4U_4_180_in2 = 0ULL;
  }
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_180
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_180(){
  SobelFilter_Mul_2Ux2U_4U_4_180_out1 = SobelFilter_Mul_2Ux2U_4U_4_180_in2
                                        .read() * 3ULL;
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_181
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_181(){
  SobelFilter_Add_2Ux1U_3U_4_181_out1 = (/*cliff*/sc_uint<32>)(
                                        SobelFilter_Mul_2Ux2U_4U_4_180_in2
                                        .read() + 1ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Mul_2Ux2U_4U_4_182_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Mul_2Ux2U_4U_4_182_in2 = (sc_uint<2> )s_reg_160.read();
  } else {
    SobelFilter_Mul_2Ux2U_4U_4_182_in2 = 0ULL;
  }
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_182
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_182(){
  SobelFilter_Mul_2Ux2U_4U_4_182_out1 = SobelFilter_Mul_2Ux2U_4U_4_182_in2
                                        .read() * 3ULL;
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_183
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_183(){
  SobelFilter_Add_2Ux1U_3U_4_183_out1 = (/*cliff*/sc_uint<32>)(
                                        SobelFilter_Mul_2Ux2U_4U_4_182_in2
                                        .read() + 1ULL);
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Mul_2Ux2U_4U_4_184_in2(){
  if ( gs_ctrl_do_filter_h80000.read() ) {
    SobelFilter_Mul_2Ux2U_4U_4_184_in2 = (sc_uint<2> )s_reg_160.read();
  } else {
    SobelFilter_Mul_2Ux2U_4U_4_184_in2 = 0ULL;
  }
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_184
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_184(){
  SobelFilter_Mul_2Ux2U_4U_4_184_out1 = SobelFilter_Mul_2Ux2U_4U_4_184_in2
                                        .read() * 3ULL;
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_185
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_185(){
  SobelFilter_Add_2Ux1U_3U_4_185_out1 = (/*cliff*/sc_uint<32>)(
                                        SobelFilter_Mul_2Ux2U_4U_4_184_in2
                                        .read() + 1ULL);
}
// resource: mux_4bx2i0c
void SobelFilter::drive_SobelFilter_Add_4Ux2U_5U_4_186_in2(){
  if ( gs_ctrl_do_filter_h40000.read() ) {
    SobelFilter_Add_4Ux2U_5U_4_186_in2 = s_reg_83.read();
  } else {
    SobelFilter_Add_4Ux2U_5U_4_186_in2 = SobelFilter_Mul_2Ux2U_4U_4_184_out1
                                         .read();
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_SobelFilter_Add_4Ux2U_5U_4_186_in1(){
  if ( gs_ctrl_do_filter_h40000.read() ) {
    SobelFilter_Add_4Ux2U_5U_4_186_in1 = (sc_uint<2> )s_reg_36.read();
  } else {
    SobelFilter_Add_4Ux2U_5U_4_186_in1 = 0ULL;
  }
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_186
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_186(){
  SobelFilter_Add_4Ux2U_5U_4_186_out1 = (SobelFilter_Add_4Ux2U_5U_4_186_in2
                                        .read() + 
                                        SobelFilter_Add_4Ux2U_5U_4_186_in1
                                        .read());
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_187
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_187(){
  SobelFilter_Add_4Ux2U_5U_4_187_out1 = (s_reg_83.read() + (sc_uint<2> )s_reg_38
                                        .read());
}
// resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_188
void SobelFilter::SobelFilter_Add_5Ux3U_5U_4_188(){
  SobelFilter_Add_5Ux3U_5U_4_188_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        SobelFilter_Add_4Ux2U_5U_4_187_out1
                                        .read() + 6ULL);
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_189
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_189(){
  SobelFilter_Add_4Ux2U_5U_4_189_out1 = (s_reg_83.read() + s_reg_4_slice.read())
  ;
}
// resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_190
void SobelFilter::SobelFilter_Add_5Ux2U_5U_4_190(){
  SobelFilter_Add_5Ux2U_5U_4_190_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        SobelFilter_Add_4Ux2U_5U_4_189_out1
                                        .read() + 3ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_191
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_191(){
  SobelFilter_Mul_2Ux2U_4U_4_191_out1 = (sc_uint<2> )s_reg_38.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_193
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_193(){
  SobelFilter_Add_4Ux2U_5S_4_193_out1 = (SobelFilter_Mul_2Ux2U_4U_4_191_out1
                                        .read() + s_reg_4_slice.read());
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_194
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_194(){
  SobelFilter_Add_2Ux1U_3U_4_194_out1 = (/*cliff*/sc_uint<32>)(s_reg_4_slice
                                        .read() + 1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_196
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_196(){
  SobelFilter_Mul_2Ux2U_4U_4_196_out1 = s_reg_4_slice.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_197
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_197(){
  SobelFilter_Add_4Ux2U_5S_4_197_out1 = (SobelFilter_Mul_2Ux2U_4U_4_196_out1
                                        .read() + (sc_uint<2> )s_reg_38.read());
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_198
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_198(){
  SobelFilter_Add_2Ux1U_3U_4_198_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                        s_reg_38.read() + 1ULL);
}
// resource: SobelFilter_Mul_2Ux2U_4U_4  instance: SobelFilter_Mul_2Ux2U_4U_4_199
void SobelFilter::SobelFilter_Mul_2Ux2U_4U_4_199(){
  SobelFilter_Mul_2Ux2U_4U_4_199_out1 = (sc_uint<2> )s_reg_38.read() * 3ULL;
}
// resource: SobelFilter_Add_4Ux2U_5S_4  instance: SobelFilter_Add_4Ux2U_5S_4_201
void SobelFilter::SobelFilter_Add_4Ux2U_5S_4_201(){
  SobelFilter_Add_4Ux2U_5S_4_201_out1 = (SobelFilter_Mul_2Ux2U_4U_4_199_out1
                                        .read() + s_reg_4_slice.read());
}
// resource: SobelFilter_Add_2Ux1U_3U_4  instance: SobelFilter_Add_2Ux1U_3U_4_202
void SobelFilter::SobelFilter_Add_2Ux1U_3U_4_202(){
  SobelFilter_Add_2Ux1U_3U_4_202_out1 = (/*cliff*/sc_uint<32>)(s_reg_4_slice
                                        .read() + 1ULL);
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_204
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_204(){
  SobelFilter_Add_4Ux2U_5U_4_204_out1 = (s_reg_178.read() + s_reg_4_slice.read()
                                        );
}
// resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_205
void SobelFilter::SobelFilter_Add_5Ux4U_6U_4_205(){
  SobelFilter_Add_5Ux4U_6U_4_205_out1 = (SobelFilter_Add_4Ux2U_5U_4_204_out1
                                        .read() + 15ULL);
}
// resource: mux_4bx3i0c
void SobelFilter::drive_sharpening_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h400000000002000.read()) ) {
  default:
    sharpening_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_197_out1.read();
    break;
  case 1ULL: 
    sharpening_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_201_out1.read();
    break;
  case 2ULL: 
    sharpening_in1 = (sc_uint<4> )SobelFilter_Add_4Ux2U_5S_4_193_out1.read();
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_sharpening_CE(){
  if ( stall0.read() ) {
    sharpening_CE = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h400004000002000.read() ) {
      sharpening_CE = 1ULL;
    } else {
      sharpening_CE = 0ULL;
    }
  }
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_206
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_206(){
  SobelFilter_Add_4Ux2U_5U_4_206_out1 = (s_reg_178.read() + (sc_uint<2> )
                                        s_reg_38.read());
}
// resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_207
void SobelFilter::SobelFilter_Add_5Ux3U_5U_4_207(){
  SobelFilter_Add_5Ux3U_5U_4_207_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        SobelFilter_Add_4Ux2U_5U_4_206_out1
                                        .read() + 6ULL);
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_208
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_208(){
  SobelFilter_Add_4Ux2U_5U_4_208_out1 = (s_reg_178.read() + s_reg_4_slice.read()
                                        );
}
// resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_209
void SobelFilter::SobelFilter_Add_5Ux2U_5U_4_209(){
  SobelFilter_Add_5Ux2U_5U_4_209_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        SobelFilter_Add_4Ux2U_5U_4_208_out1
                                        .read() + 3ULL);
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_210
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_210(){
  SobelFilter_Add_4Ux2U_5U_4_210_out1 = (s_reg_178.read() + s_reg_4_slice.read()
                                        );
}
// resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_211
void SobelFilter::SobelFilter_Add_5Ux5U_6U_4_211(){
  SobelFilter_Add_5Ux5U_6U_4_211_out1 = (SobelFilter_Add_4Ux2U_5U_4_210_out1
                                        .read() + 30ULL);
}
// resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_213
void SobelFilter::SobelFilter_Add_5Ux4U_6U_4_213(){
  SobelFilter_Add_5Ux4U_6U_4_213_out1 = ((sc_uint<5> )s_reg_133.read() + 15ULL);
}
// resource: SobelFilter_Add_5Ux4U_6U_4  instance: SobelFilter_Add_5Ux4U_6U_4_215
void SobelFilter::SobelFilter_Add_5Ux4U_6U_4_215(){
  SobelFilter_Add_5Ux4U_6U_4_215_out1 = ((sc_uint<5> )s_reg_133.read() + 15ULL);
}
// resource: SobelFilter_GreaterThan_32Sx9S_1U_4  instance: SobelFilter_GreaterThan_32Sx9S_1U_4_228
void SobelFilter::SobelFilter_GreaterThan_32Sx9S_1U_4_228(){
  SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1 = (/*imp*/sc_uint<1>)((
                                                 sc_int<32> )SobelFilter_Add_33Ux33U_33U_4_17_out1
                                                 .read() > (sc_int<9> )255LL);
}
void SobelFilter::drive_SobelFilter_N_Mux_16_2_23_4_219_ctrl1(){
  SobelFilter_N_Mux_16_2_23_4_219_ctrl1 = (sc_uint<1> ) (
                                          SobelFilter_Add_33Ux33U_33U_4_17_out1
                                          .read().range(31,31));
}
// resource: SobelFilter_N_Mux_16_2_23_4
void SobelFilter::SobelFilter_N_Mux_16_2_23_4_219(){
  if ( SobelFilter_N_Mux_16_2_23_4_219_ctrl1.read() ) {
    SobelFilter_N_Mux_16_2_23_4_219_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_16_2_23_4_219_out1 = (sc_uint<16> )
                                           SobelFilter_Add_33Ux33U_33U_4_17_out1
                                           .read();
  }
}
// resource: SobelFilter_N_Mux_16_2_24_4
void SobelFilter::SobelFilter_N_Mux_16_2_24_4_220(){
  if ( SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1.read() ) {
    SobelFilter_N_Mux_16_2_24_4_220_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_16_2_24_4_220_out1 = SobelFilter_N_Mux_16_2_23_4_219_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_221
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_221(){
  SobelFilter_Add_4Ux2U_5U_4_221_out1 = (s_reg_178.read() + (sc_uint<2> )
                                        s_reg_38.read());
}
// resource: SobelFilter_Add_5Ux3U_5U_4  instance: SobelFilter_Add_5Ux3U_5U_4_222
void SobelFilter::SobelFilter_Add_5Ux3U_5U_4_222(){
  SobelFilter_Add_5Ux3U_5U_4_222_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        SobelFilter_Add_4Ux2U_5U_4_221_out1
                                        .read() + 6ULL);
}
// resource: SobelFilter_Add_4Ux2U_5U_4  instance: SobelFilter_Add_4Ux2U_5U_4_223
void SobelFilter::SobelFilter_Add_4Ux2U_5U_4_223(){
  SobelFilter_Add_4Ux2U_5U_4_223_out1 = (s_reg_178.read() + s_reg_4_slice.read()
                                        );
}
// resource: SobelFilter_Add_5Ux2U_5U_4  instance: SobelFilter_Add_5Ux2U_5U_4_224
void SobelFilter::SobelFilter_Add_5Ux2U_5U_4_224(){
  SobelFilter_Add_5Ux2U_5U_4_224_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                        SobelFilter_Add_4Ux2U_5U_4_223_out1
                                        .read() + 3ULL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_225
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_225(){
  SobelFilter_LessThan_3Sx3S_1U_4_225_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_160.read() < (sc_int<3> )3LL)
  ;
}
// resource: SobelFilter_N_Mux_24_2_21_4
void SobelFilter::SobelFilter_N_Mux_24_2_21_4_229(){
  if ( SobelFilter_N_Mux_16_2_23_4_219_ctrl1.read() ) {
    SobelFilter_N_Mux_24_2_21_4_229_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_24_2_21_4_229_out1 = (sc_uint<24> )
                                           SobelFilter_Add_33Ux33U_33U_4_17_out1
                                           .read();
  }
}
// resource: SobelFilter_N_Mux_24_2_22_4
void SobelFilter::SobelFilter_N_Mux_24_2_22_4_230(){
  if ( SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1.read() ) {
    SobelFilter_N_Mux_24_2_22_4_230_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_24_2_22_4_230_out1 = SobelFilter_N_Mux_24_2_21_4_229_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_231
void SobelFilter::SobelFilter_Add_5Ux5U_6U_4_231(){
  SobelFilter_Add_5Ux5U_6U_4_231_out1 = ((sc_uint<5> )s_reg_133.read() + 30ULL);
}
// resource: SobelFilter_Add_5Ux5U_6U_4  instance: SobelFilter_Add_5Ux5U_6U_4_232
void SobelFilter::SobelFilter_Add_5Ux5U_6U_4_232(){
  SobelFilter_Add_5Ux5U_6U_4_232_out1 = ((sc_uint<5> )s_reg_133.read() + 30ULL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_233
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_233(){
  SobelFilter_LessThan_3Sx3S_1U_4_233_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_36.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_N_Mux_32_2_25_4
void SobelFilter::SobelFilter_N_Mux_32_2_25_4_237(){
  if ( SobelFilter_N_Mux_16_2_23_4_219_ctrl1.read() ) {
    SobelFilter_N_Mux_32_2_25_4_237_out1 = 0ULL;
  } else {
    SobelFilter_N_Mux_32_2_25_4_237_out1 = (sc_uint<32> )
                                           SobelFilter_Add_33Ux33U_33U_4_17_out1
                                           .read();
  }
}
// resource: SobelFilter_N_Mux_32_2_26_4
void SobelFilter::SobelFilter_N_Mux_32_2_26_4_238(){
  if ( SobelFilter_GreaterThan_32Sx9S_1U_4_228_out1.read() ) {
    SobelFilter_N_Mux_32_2_26_4_238_out1 = 255ULL;
  } else {
    SobelFilter_N_Mux_32_2_26_4_238_out1 = SobelFilter_N_Mux_32_2_25_4_237_out1
                                           .read();
  }
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_249
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_249(){
  SobelFilter_LessThan_3Sx3S_1U_4_249_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_36.read() < (sc_int<3> )3LL);
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_255
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_255(){
  SobelFilter_LessThan_3Sx3S_1U_4_255_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_160.read() < (sc_int<3> )3LL)
  ;
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_261
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_261(){
  SobelFilter_LessThan_3Sx3S_1U_4_261_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_160.read() < (sc_int<3> )3LL)
  ;
}
// resource: SobelFilter_LessThan_3Sx3S_1U_4  instance: SobelFilter_LessThan_3Sx3S_1U_4_267
void SobelFilter::SobelFilter_LessThan_3Sx3S_1U_4_267(){
  SobelFilter_LessThan_3Sx3S_1U_4_267_out1 = (/*imp*/sc_uint<1>)((sc_int<3> )
                                             s_reg_36.read() < (sc_int<3> )3LL);
}
// resource: regr_en_sc_7
void SobelFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_7bx14i13c
void SobelFilter::drive_global_state_next(){
  switch( (sc_uint<7>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 9ULL: case 13ULL: 
    global_state_next = 10ULL;
    break;
  case 12ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_16_out1.read() ) {
      global_state_next = 10ULL;
    } else {
      if ( s_reg_39.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 14ULL;
      }
    }
    break;
  case 17ULL: 
    if ( SobelFilter_LessThan_5Sx5S_1U_4_20_out1.read() ) {
      global_state_next = 14ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 18ULL: case 30ULL: case 50ULL: case 70ULL: case 87ULL: 
    global_state_next = 19ULL;
    break;
  case 20ULL: 
    if ( SobelFilter_LessThan_2Ux2U_1U_4_128_out1.read() ) {
      global_state_next = 19ULL;
    } else {
      if ( SobelFilter_LessThan_2Ux2U_1U_4_129_out1.read() ) {
        global_state_next = 19ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    }
    break;
  case 23ULL: 
    if ( SobelFilter_LessThan_5Sx5S_1U_4_156_out1.read() ) {
      global_state_next = 21ULL;
    } else {
      /* state36 */
      switch( (sc_uint<32>)(s_reg_50.read()) ) {
      default:
        global_state_next = (global_state.read() + 1ULL);
        break;
      case 13ULL: 
        global_state_next = 71ULL;
        break;
      case 14ULL: 
        global_state_next = 51ULL;
        break;
      case 15ULL: 
        global_state_next = 31ULL;
        break;
      }
    }
    break;
  case 36ULL: case 46ULL: 
    global_state_next = 37ULL;
    break;
  case 45ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_261_out1.read() ) {
      global_state_next = 37ULL;
    } else {
      if ( s_reg_126.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 47ULL;
      }
    }
    break;
  case 56ULL: case 66ULL: 
    global_state_next = 57ULL;
    break;
  case 65ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_267_out1.read() ) {
      global_state_next = 57ULL;
    } else {
      if ( s_reg_126.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 67ULL;
      }
    }
    break;
  case 76ULL: case 83ULL: 
    global_state_next = 77ULL;
    break;
  case 82ULL: 
    if ( SobelFilter_LessThan_3Sx3S_1U_4_233_out1.read() ) {
      global_state_next = 77ULL;
    } else {
      if ( s_reg_126.read() ) {
        global_state_next = (global_state.read() + 1ULL);
      } else {
        global_state_next = 84ULL;
      }
    }
    break;
  }
}
// resource: mux_4bx10i10c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_h5fe(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h5fe = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h5fe = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h5fe = 1ULL;
        break;
      case 2ULL: 
        gs_ctrl_do_filter_h5fe = 2ULL;
        break;
      case 3ULL: 
        gs_ctrl_do_filter_h5fe = 3ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_h5fe = 4ULL;
        break;
      case 5ULL: 
        gs_ctrl_do_filter_h5fe = 5ULL;
        break;
      case 6ULL: 
        gs_ctrl_do_filter_h5fe = 6ULL;
        break;
      case 7ULL: 
        gs_ctrl_do_filter_h5fe = 7ULL;
        break;
      case 8ULL: 
        gs_ctrl_do_filter_h5fe = 8ULL;
        break;
      case 10ULL: 
        gs_ctrl_do_filter_h5fe = 9ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_hba(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hba = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hba = 0ULL;
        break;
      case 1ULL: case 3ULL: case 5ULL: case 7ULL: 
        gs_ctrl_do_filter_hba = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_hba = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_gs_ctrl_do_filter_h5ff(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h5ff = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h5ff = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 
      6ULL: case 7ULL: case 8ULL: case 10ULL: 
        gs_ctrl_do_filter_h5ff = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_gs_ctrl_do_filter_h1ff(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h1ff = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h1ff = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 
      6ULL: case 7ULL: case 8ULL: 
        gs_ctrl_do_filter_h1ff = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h2000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2000 = 0ULL;
        break;
      case 13ULL: 
        gs_ctrl_do_filter_h2000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h8000380000e70003(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8000380000e70003 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8000380000e70003 = 0ULL;
        break;
      case 21ULL: 
        gs_ctrl_do_filter_h8000380000e70003 = 1ULL;
        break;
      case 22ULL: case 23ULL: 
        gs_ctrl_do_filter_h8000380000e70003 = 2ULL;
        break;
      case 43ULL: case 81ULL: 
        gs_ctrl_do_filter_h8000380000e70003 = 3ULL;
        break;
      case 44ULL: case 64ULL: 
        gs_ctrl_do_filter_h8000380000e70003 = 4ULL;
        break;
      case 45ULL: case 63ULL: case 65ULL: case 80ULL: case 82ULL: 
        gs_ctrl_do_filter_h8000380000e70003 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h8000380000e700030(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8000380000e700030 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8000380000e700030 = 0ULL;
        break;
      case 21ULL: case 22ULL: 
        gs_ctrl_do_filter_h8000380000e700030 = 1ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h8000380000e700030 = 2ULL;
        break;
      case 43ULL: case 44ULL: case 45ULL: case 63ULL: case 64ULL: case 65ULL: 
      case 80ULL: case 81ULL: case 82ULL: 
        gs_ctrl_do_filter_h8000380000e700030 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx7i7c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h8001b80000d7001b(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8001b80000d7001b = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8001b80000d7001b = 0ULL;
        break;
      case 21ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b = 1ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b = 2ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b = 3ULL;
        break;
      case 43ULL: case 44ULL: case 45ULL: case 63ULL: case 64ULL: case 65ULL: 
      case 80ULL: case 81ULL: case 82ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b = 4ULL;
        break;
      case 47ULL: case 67ULL: case 84ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b = 5ULL;
        break;
      case 48ULL: case 68ULL: case 85ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b = 6ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h8001b80000d7001b0(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8001b80000d7001b0 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8001b80000d7001b0 = 0ULL;
        break;
      case 21ULL: case 22ULL: case 23ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b0 = 1ULL;
        break;
      case 43ULL: case 48ULL: case 64ULL: case 68ULL: case 81ULL: case 85ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b0 = 2ULL;
        break;
      case 44ULL: case 63ULL: case 80ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b0 = 3ULL;
        break;
      case 45ULL: case 65ULL: case 82ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b0 = 4ULL;
        break;
      case 47ULL: case 67ULL: case 84ULL: 
        gs_ctrl_do_filter_h8001b80000d7001b0 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h931000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h931000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h931000 = 0ULL;
        break;
      case 12ULL: case 16ULL: case 17ULL: case 23ULL: 
        gs_ctrl_do_filter_h931000 = 1ULL;
        break;
      case 20ULL: 
        gs_ctrl_do_filter_h931000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h10000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h10000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h10000 = 0ULL;
        break;
      case 16ULL: 
        gs_ctrl_do_filter_h10000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx6i6c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_h931800(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h931800 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h931800 = 0ULL;
        break;
      case 11ULL: case 16ULL: 
        gs_ctrl_do_filter_h931800 = 1ULL;
        break;
      case 12ULL: 
        gs_ctrl_do_filter_h931800 = 2ULL;
        break;
      case 17ULL: 
        gs_ctrl_do_filter_h931800 = 3ULL;
        break;
      case 20ULL: 
        gs_ctrl_do_filter_h931800 = 4ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h931800 = 5ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h10800(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h10800 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h10800 = 0ULL;
        break;
      case 11ULL: case 16ULL: 
        gs_ctrl_do_filter_h10800 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h4000040800040(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h4000040800040 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h4000040800040 = 0ULL;
        break;
      case 30ULL: case 70ULL: case 87ULL: 
        gs_ctrl_do_filter_h4000040800040 = 1ULL;
        break;
      case 50ULL: 
        gs_ctrl_do_filter_h4000040800040 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h100000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h100000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h100000 = 0ULL;
        break;
      case 20ULL: 
        gs_ctrl_do_filter_h100000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h400000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h400000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h400000 = 0ULL;
        break;
      case 22ULL: 
        gs_ctrl_do_filter_h400000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx15i15c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_h58f8058fbe0cdf80(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h58f8058fbe0cdf80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 0ULL;
        break;
      case 25ULL: case 31ULL: case 51ULL: case 71ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 1ULL;
        break;
      case 26ULL: case 32ULL: case 52ULL: case 72ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 2ULL;
        break;
      case 27ULL: case 33ULL: case 53ULL: case 73ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 3ULL;
        break;
      case 28ULL: case 34ULL: case 54ULL: case 74ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 4ULL;
        break;
      case 29ULL: case 35ULL: case 55ULL: case 75ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 5ULL;
        break;
      case 39ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 6ULL;
        break;
      case 40ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 7ULL;
        break;
      case 42ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 8ULL;
        break;
      case 59ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 9ULL;
        break;
      case 60ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 10ULL;
        break;
      case 62ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 11ULL;
        break;
      case 76ULL: case 82ULL: case 83ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 12ULL;
        break;
      case 78ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 13ULL;
        break;
      case 79ULL: 
        gs_ctrl_do_filter_h58f8058fbe0cdf80 = 14ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_hd8000db6000d80(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hd8000db6000d80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hd8000db6000d80 = 0ULL;
        break;
      case 25ULL: case 28ULL: case 31ULL: case 34ULL: case 51ULL: case 54ULL: 
      case 71ULL: case 74ULL: 
        gs_ctrl_do_filter_hd8000db6000d80 = 1ULL;
        break;
      case 26ULL: case 29ULL: case 32ULL: case 35ULL: case 52ULL: case 55ULL: 
      case 72ULL: case 75ULL: 
        gs_ctrl_do_filter_hd8000db6000d80 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx10i10c
// resource: regr_en_sc_4
void SobelFilter::drive_gs_ctrl_do_filter_h58f8058fbf8cdf80(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h58f8058fbf8cdf80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 0ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 1ULL;
        break;
      case 24ULL: case 25ULL: case 26ULL: case 31ULL: case 32ULL: case 51ULL: 
      case 52ULL: case 71ULL: case 72ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 2ULL;
        break;
      case 27ULL: case 33ULL: case 53ULL: case 73ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 3ULL;
        break;
      case 28ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 4ULL;
        break;
      case 29ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 5ULL;
        break;
      case 34ULL: case 54ULL: case 74ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 6ULL;
        break;
      case 35ULL: case 55ULL: case 75ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 7ULL;
        break;
      case 39ULL: case 40ULL: case 42ULL: case 59ULL: case 60ULL: case 62ULL: 
      case 76ULL: case 78ULL: case 79ULL: case 83ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 8ULL;
        break;
      case 82ULL: 
        gs_ctrl_do_filter_h58f8058fbf8cdf80 = 9ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_3bx8i8c
// resource: regr_en_sc_3
void SobelFilter::drive_gs_ctrl_do_filter_hf8000fbf800f80(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_hf8000fbf800f80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_hf8000fbf800f80 = 0ULL;
        break;
      case 23ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 1ULL;
        break;
      case 24ULL: case 25ULL: case 26ULL: case 31ULL: case 32ULL: case 51ULL: 
      case 52ULL: case 71ULL: case 72ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 2ULL;
        break;
      case 27ULL: case 33ULL: case 53ULL: case 73ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 3ULL;
        break;
      case 28ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 4ULL;
        break;
      case 29ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 5ULL;
        break;
      case 34ULL: case 54ULL: case 74ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 6ULL;
        break;
      case 35ULL: case 55ULL: case 75ULL: 
        gs_ctrl_do_filter_hf8000fbf800f80 = 7ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h400000000000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h400000000000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h400000000000 = 0ULL;
        break;
      case 46ULL: 
        gs_ctrl_do_filter_h400000000000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h4(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h4 = 0ULL;
        break;
      case 66ULL: 
        gs_ctrl_do_filter_h4 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h80000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h80000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h80000 = 0ULL;
        break;
      case 83ULL: 
        gs_ctrl_do_filter_h80000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h40000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h40000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h40000 = 0ULL;
        break;
      case 82ULL: 
        gs_ctrl_do_filter_h40000 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h400000000002000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h400000000002000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h400000000002000 = 0ULL;
        break;
      case 58ULL: 
        gs_ctrl_do_filter_h400000000002000 = 1ULL;
        break;
      case 77ULL: 
        gs_ctrl_do_filter_h400000000002000 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h400004000002000(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h400004000002000 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<7>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h400004000002000 = 0ULL;
        break;
      case 38ULL: case 58ULL: case 77ULL: 
        gs_ctrl_do_filter_h400004000002000 = 1ULL;
        break;
      }
      break;
    }
  }
}
void SobelFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               SobelFilter_gen_busy_r_4_282_out1.read().range(2,2)));
}
void SobelFilter::drive_i_rgb_m_data_is_valid(){
  i_rgb_m_data_is_valid = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
                          SobelFilter_gen_busy_r_4_282_out1.read().range(1,1)));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_282
void SobelFilter::SobelFilter_gen_busy_r_4_282_p9(){
  SobelFilter_gen_busy_r_4_282_out1 = (sc_uint<3> ) (( (sc_biguint<3> )
                                      (sc_bv<3>)((sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_282_gnew_busy
                                      .read()), 
                                      (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                      (sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_282_gdiv.read())
                                      , 
                                      (sc_bv<1>)(SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                      .read())) ))) ));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_282
void SobelFilter::SobelFilter_gen_busy_r_4_282_p8(){
  SobelFilter_gen_busy_r_4_282_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)SobelFilter_gen_busy_r_4_282_gdiv.read()
  ;
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_282
void SobelFilter::SobelFilter_gen_busy_r_4_282_p7(){
  SobelFilter_gen_busy_r_4_282_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld
                                      .read() & !
                                      SobelFilter_gen_busy_r_4_282_gnew_req
                                      .read() | (sc_uint<1> )
                                      i_rgb_m_stall_reg_full.read());
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_282
void SobelFilter::SobelFilter_gen_busy_r_4_282_p6(){
  SobelFilter_gen_busy_r_4_282_gnew_busy = (sc_uint<1> ) (
                                           SobelFilter_gen_busy_r_4_282_gnew_req
                                           .read() | (sc_uint<1> )
                                           i_rgb_m_stall_reg_full.read());
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_282
void SobelFilter::SobelFilter_gen_busy_r_4_282_p5(){
  SobelFilter_gen_busy_r_4_282_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                          i_rgb_m_busy_req_0.read() & ( 
                                          i_rgb_m_unvalidated_req.read() | 
                                          i_rgb_vld.read() ));
}
// resource: regr_ss_1
void SobelFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (SobelFilter_N_Muxb_1_2_27_4_4_out1
                              .read());
  }
}
// resource: SobelFilter_N_Muxb_1_2_27_4
void SobelFilter::SobelFilter_N_Muxb_1_2_27_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    SobelFilter_N_Muxb_1_2_27_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                         .read());
  } else {
    SobelFilter_N_Muxb_1_2_27_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
// resource: regr_en_24
void SobelFilter::drive_i_rgb_m_stall_reg(){
  switch( (sc_uint<1>)(SobelFilter_And_1Ux1U_1U_4_7_out1.read()) ) {
  case 1ULL: 
    i_rgb_m_stall_reg = i_rgb_data.read();
    break;
  default:
    break;
  }
}
// resource: SobelFilter_Not_1U_1U_4  instance: SobelFilter_Not_1U_1U_4_5
void SobelFilter::SobelFilter_Not_1U_1U_4_5(){
  SobelFilter_Not_1U_1U_4_5_out1 = !i_rgb_m_stall_reg_full.read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_6
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_6(){
  SobelFilter_And_1Ux1U_1U_4_6_out1 = i_rgb_m_data_is_valid.read() & (
                                      sc_uint<1>)stall0.read();
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_7
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_7(){
  SobelFilter_And_1Ux1U_1U_4_7_out1 = SobelFilter_And_1Ux1U_1U_4_6_out1.read()
                                       & SobelFilter_Not_1U_1U_4_5_out1.read();
}
// resource: regr_sc_1
void SobelFilter::drive_i_rgb_m_stall_reg_full(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_stall_reg_full = 0ULL;
  } else {
    i_rgb_m_stall_reg_full = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_280_out1
                             .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_280
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_280(){
  SobelFilter_And_1Ux1U_1U_4_280_out1 = i_rgb_m_data_is_valid.read() & (
                                        sc_uint<1>)stall0.read();
}
void SobelFilter::drive_o_result_vld(){
  o_result_vld = (sc_uint<1> ) (SobelFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_2(){
  SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req.read() | (
                                     sc_uint<1>)
                                     SobelFilter_Xor_1Ux1U_1U_1_1_out1.read();
}
// resource: regr_sc_1
void SobelFilter::drive_o_result_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_unacked_req = 0ULL;
  } else {
    o_result_m_unacked_req = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_279_out1
                             .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_279
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_279(){
  SobelFilter_And_1Ux1U_1U_4_279_out1 = o_result_busy.read() & o_result_vld
                                        .read();
}
// resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
void SobelFilter::SobelFilter_Xor_1Ux1U_1U_1_1(){
  SobelFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_result_m_req_m_trig_req
                                      .read() ^ o_result_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_result_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_result_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_result_m_req_m_prev_trig_req = o_result_m_req_m_trig_req.read();
  }
}
// resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
void SobelFilter::SobelFilter_Not_1U_1U_1_3(){
  SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req.read();
}
